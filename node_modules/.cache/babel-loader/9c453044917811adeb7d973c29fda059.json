{"ast":null,"code":"import _defineProperty2 from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _assertThisInitialized from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _asyncToGenerator from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"C:\\\\DaoWebsite\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt as _encrypt, decrypt as _decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { setupMultiplex, PostMessageStream, SafeEventEmitter, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport merge from 'lodash.merge';\nimport pump from 'pump';\nvar modalDOMElementID = \"openlogin-modal\";\nvar storeKey = \"openlogin_store\";\nvar UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nvar OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nvar ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nvar OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\"\n};\nvar LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nvar MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\"\n};\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\n\nfunction documentReady() {\n  return _documentReady.apply(this, arguments);\n}\n\nfunction _documentReady() {\n  _documentReady = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25() {\n    return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            return _context25.abrupt(\"return\", new Promise(function (resolve) {\n              if (document.readyState !== \"loading\") {\n                resolve();\n              } else {\n                document.addEventListener(\"DOMContentLoaded\", function () {\n                  resolve();\n                });\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25);\n  }));\n  return _documentReady.apply(this, arguments);\n}\n\nvar htmlToElement = function htmlToElement(html) {\n  var template = window.document.createElement(\"template\");\n  var trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nfunction whitelistUrl(_x, _x2, _x3) {\n  return _whitelistUrl.apply(this, arguments);\n}\n\nfunction _whitelistUrl() {\n  _whitelistUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(clientId, appKey, origin) {\n    var appKeyBuf, sig;\n    return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n      while (1) {\n        switch (_context26.prev = _context26.next) {\n          case 0:\n            appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n\n            if (!(base64url.encode(getPublic(appKeyBuf)) !== clientId)) {\n              _context26.next = 3;\n              break;\n            }\n\n            throw new Error(\"appKey mismatch\");\n\n          case 3:\n            _context26.next = 5;\n            return sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n\n          case 5:\n            sig = _context26.sent;\n            return _context26.abrupt(\"return\", base64url.encode(sig));\n\n          case 7:\n          case \"end\":\n            return _context26.stop();\n        }\n      }\n    }, _callee26);\n  }));\n  return _whitelistUrl.apply(this, arguments);\n}\n\nfunction getHashQueryParams() {\n  var replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var result = {};\n  var url = new URL(window.location.href);\n  url.searchParams.forEach(function (value, key) {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  var queryResult = url.searchParams.get(\"result\");\n\n  if (queryResult) {\n    try {\n      var queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(function (key) {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  var hash = url.hash.substring(1);\n  var hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash));\n  hashUrl.searchParams.forEach(function (value, key) {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  var hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      var hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(function (key) {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    var cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n\n  return result;\n}\n\nfunction awaitReq(id, windowRef) {\n  return new Promise(function (resolve, reject) {\n    if (!windowRef) reject(new Error(\"Unable to open window\"));\n    var closedByHandler = false;\n    var closedMonitor = setInterval(function () {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n\n    var handler = function handler(ev) {\n      var pid = ev.data.pid;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n\n    window.addEventListener(\"message\", handler);\n  });\n}\n\nfunction constructURL(params) {\n  var baseURL = params.baseURL,\n      query = params.query,\n      hash = params.hash;\n  var url = new URL(baseURL);\n\n  if (query) {\n    Object.keys(query).forEach(function (key) {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n\n  if (hash) {\n    var h = new URL(constructURL({\n      baseURL: baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n\n  return url.toString();\n}\n\nfunction storageAvailable(type) {\n  var storageExists = false;\n  var storageLength = 0;\n  var storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    var x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && ( // everything except Firefox\n    error.code === 22 || // Firefox\n    error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" || // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\n\nvar sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nvar localStorageAvailable = storageAvailable(\"localStorage\");\n\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    var openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\n\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  var dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  var w = 1200;\n  var h = 700;\n  var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  var systemZoom = 1; // No reliable estimate\n\n  var left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  var top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  var features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nvar handleStream = function handleStream(handle, eventName, handler) {\n  var handlerWrapper = function handlerWrapper(chunk) {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\n\nvar Modal = /*#__PURE__*/function () {\n  function Modal(modalUrl) {\n    _classCallCheck(this, Modal);\n\n    _defineProperty(this, \"modalUrl\", void 0);\n\n    _defineProperty(this, \"iframeElem\", void 0);\n\n    _defineProperty(this, \"initialized\", false);\n\n    _defineProperty(this, \"modalZIndex\", 99999);\n\n    _defineProperty(this, \"mux\", void 0);\n\n    _defineProperty(this, \"verifierStream\", void 0);\n\n    this.modalUrl = modalUrl;\n  }\n\n  _createClass(Modal, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.initIFrame(this.modalUrl);\n\n              case 2:\n                this.setupStream();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"setupStream\",\n    value: function setupStream() {\n      if (this.iframeElem === null) throw new Error(\"iframe is null\");\n      this.mux = setupMultiplex(new PostMessageStream({\n        name: \"modal_iframe_rpc\",\n        target: \"modal_rpc\",\n        targetWindow: this.iframeElem.contentWindow,\n        targetOrigin: new URL(this.modalUrl).origin\n      }));\n      this.verifierStream = this.mux.createStream(\"verifier\");\n    }\n  }, {\n    key: \"initIFrame\",\n    value: function () {\n      var _initIFrame = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(src) {\n        var _this = this;\n\n        var documentIFrameElem;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return documentReady();\n\n              case 2:\n                documentIFrameElem = document.getElementById(modalDOMElementID);\n\n                if (documentIFrameElem) {\n                  documentIFrameElem.remove();\n                  log.info(\"already initialized, removing previous modal iframe\");\n                }\n\n                this.iframeElem = htmlToElement(\"<iframe\\n        id=\".concat(modalDOMElementID, \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(src, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n\n                this._hideModal();\n\n                document.body.appendChild(this.iframeElem);\n                return _context2.abrupt(\"return\", new Promise(function (resolve) {\n                  _this.iframeElem.onload = function () {\n                    _this.initialized = true;\n                    resolve();\n                  };\n                }));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initIFrame(_x4) {\n        return _initIFrame.apply(this, arguments);\n      }\n\n      return initIFrame;\n    }()\n  }, {\n    key: \"_showModal\",\n    value: function _showModal() {\n      var style = {};\n      style.display = \"block\";\n      style.position = \"fixed\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n      style.border = \"0\";\n      style[\"z-index\"] = this.modalZIndex;\n      this.iframeElem.setAttribute(\"style\", Object.entries(style).map(function (_ref) {\n        var _ref3 = _slicedToArray(_ref, 2),\n            k = _ref3[0],\n            v = _ref3[1];\n\n        return \"\".concat(k, \":\").concat(v);\n      }).join(\";\"));\n    }\n  }, {\n    key: \"_hideModal\",\n    value: function _hideModal() {\n      var style = {};\n      style.display = \"none\";\n      style.position = \"fixed\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n      style.border = \"0\";\n      style[\"z-index\"] = this.modalZIndex;\n      this.iframeElem.setAttribute(\"style\", Object.entries(style).map(function (_ref2) {\n        var _ref4 = _slicedToArray(_ref2, 2),\n            k = _ref4[0],\n            v = _ref4[1];\n\n        return \"\".concat(k, \":\").concat(v);\n      }).join(\";\"));\n    }\n  }, {\n    key: \"_prompt\",\n    value: function () {\n      var _prompt2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(clientId, whiteLabel, loginConfig, cb) {\n        var _this2 = this;\n\n        var modalHandler;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this._showModal();\n\n                modalHandler = function modalHandler(chunk) {\n                  _this2._hideModal();\n\n                  cb(chunk);\n                };\n\n                handleStream(this.verifierStream, \"data\", modalHandler);\n                this.verifierStream.write({\n                  name: \"prompt\",\n                  clientId: clientId,\n                  whiteLabel: whiteLabel,\n                  loginConfig: loginConfig\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function _prompt(_x5, _x6, _x7, _x8) {\n        return _prompt2.apply(this, arguments);\n      }\n\n      return _prompt;\n    }()\n  }, {\n    key: \"cleanup\",\n    value: function () {\n      var _cleanup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var documentIFrameElem;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return documentReady();\n\n              case 2:\n                documentIFrameElem = document.getElementById(modalDOMElementID);\n\n                if (documentIFrameElem) {\n                  documentIFrameElem.remove();\n                  this.iframeElem = null;\n                }\n\n                this.initialized = false;\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function cleanup() {\n        return _cleanup.apply(this, arguments);\n      }\n\n      return cleanup;\n    }()\n  }]);\n\n  return Modal;\n}();\n\nvar MemoryStore = /*#__PURE__*/function () {\n  function MemoryStore() {\n    _classCallCheck(this, MemoryStore);\n\n    _defineProperty(this, \"store\", {});\n  }\n\n  _createClass(MemoryStore, [{\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this.store[key];\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      this.store[key] = value;\n    }\n  }]);\n\n  return MemoryStore;\n}();\n\nvar OpenLoginStore = /*#__PURE__*/function () {\n  // eslint-disable-next-line no-use-before-define\n  function OpenLoginStore(storage) {\n    _classCallCheck(this, OpenLoginStore);\n\n    _defineProperty(this, \"storage\", void 0);\n\n    this.storage = storage;\n\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {// Storage is not available\n    }\n  }\n\n  _createClass(OpenLoginStore, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.storage.getItem(storeKey);\n    }\n  }, {\n    key: \"resetStore\",\n    value: function resetStore() {\n      var currStore = this.getStore();\n      this.storage.setItem(storeKey, JSON.stringify({}));\n      return currStore;\n    }\n  }, {\n    key: \"getStore\",\n    value: function getStore() {\n      return JSON.parse(this.storage.getItem(storeKey));\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var store = JSON.parse(this.storage.getItem(storeKey));\n      return store[key];\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var store = JSON.parse(this.storage.getItem(storeKey));\n      store[key] = value;\n      this.storage.setItem(storeKey, JSON.stringify(store));\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!this.instance) {\n        this.instance = new this(localStorageAvailable ? localStorage : new MemoryStore());\n      }\n\n      return this.instance;\n    }\n  }]);\n\n  return OpenLoginStore;\n}();\n\n_defineProperty(OpenLoginStore, \"instance\", void 0);\n\nvar Provider = /*#__PURE__*/function (_SafeEventEmitter) {\n  _inherits(Provider, _SafeEventEmitter);\n\n  var _super = _createSuper(Provider);\n\n  function Provider() {\n    var _this3;\n\n    _classCallCheck(this, Provider);\n\n    _this3 = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this3), \"iframeElem\", null);\n\n    _defineProperty(_assertThisInitialized(_this3), \"rpcStream\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"iframeUrl\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"rpcEngine\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"initialized\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"mux\", void 0);\n\n    return _this3;\n  }\n\n  _createClass(Provider, [{\n    key: \"init\",\n    value: function init(_ref) {\n      var iframeElem = _ref.iframeElem,\n          iframeUrl = _ref.iframeUrl;\n      this.iframeElem = iframeElem;\n      this.iframeUrl = iframeUrl;\n      this.setupStream();\n      this.initialized = true;\n    }\n  }, {\n    key: \"setupStream\",\n    value: function setupStream() {\n      if (this.iframeElem === null) throw new Error(\"iframe is null\");\n      this.rpcStream = new PostMessageStream({\n        name: \"embed_rpc\",\n        target: \"iframe_rpc\",\n        targetWindow: this.iframeElem.contentWindow,\n        targetOrigin: new URL(this.iframeUrl).origin\n      });\n      this.mux = setupMultiplex(this.rpcStream);\n      var JRPCConnection = createStreamMiddleware();\n      pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, function (error) {\n        log.error(\"JRPC connection broken\", error);\n      });\n      var rpcEngine = new JRPCEngine();\n      rpcEngine.push(createIdRemapMiddleware());\n      rpcEngine.push(JRPCConnection.middleware);\n      this.rpcEngine = rpcEngine;\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      this.iframeElem = null;\n      this.initialized = false;\n    }\n  }, {\n    key: \"_rpcRequest\",\n    value: function _rpcRequest(payload, callback) {\n      if (!payload.jsonrpc) {\n        payload.jsonrpc = \"2.0\";\n      }\n\n      if (!payload.id) {\n        payload.id = randomId();\n      }\n\n      this.rpcEngine.handle(payload, callback);\n    }\n  }]);\n\n  return Provider;\n}(SafeEventEmitter);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\npreloadIframe(\"https://app.openlogin.com/sdk-modal\");\n\nvar OpenLogin = /*#__PURE__*/function () {\n  function OpenLogin(options) {\n    _classCallCheck(this, OpenLogin);\n\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig;\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"modal\", void 0);\n\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: function deleteProperty() {\n        return true;\n      } // work around for web3\n\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n\n    this.modal = new Modal(\"\".concat(options._iframeUrl, \"/sdk-modal\"));\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : \"\".concat(options._iframeUrl, \"/start\"),\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : \"\".concat(options._iframeUrl, \"/popup-window\"),\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(window.location.pathname),\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : _defineProperty2({}, window.location.origin, \"\"),\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {}\n    }));\n  }\n\n  _createClass(OpenLogin, [{\n    key: \"privKey\",\n    get: function get() {\n      return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n    }\n  }, {\n    key: \"initState\",\n    value: function initState(options) {\n      this.state = {\n        uxMode: options.uxMode,\n        network: options.network,\n        store: OpenLoginStore.getInstance(),\n        iframeUrl: options._iframeUrl,\n        startUrl: options._startUrl,\n        popupUrl: options._popupUrl,\n        clientId: options.clientId,\n        redirectUrl: options.redirectUrl,\n        replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n        originData: options.originData,\n        loginConfig: options.loginConfig,\n        support3PC: !options.no3PC,\n        whiteLabel: options.whiteLabel\n      };\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!this.state.support3PC) {\n                  _context5.next = 16;\n                  break;\n                }\n\n                _context5.next = 3;\n                return Promise.all([this.modal.init(), this.updateOriginData()]);\n\n              case 3:\n                this.provider.init({\n                  iframeElem: this.modal.iframeElem,\n                  iframeUrl: this.state.iframeUrl\n                });\n                _context5.t0 = this;\n                _context5.next = 7;\n                return this._getData();\n\n              case 7:\n                _context5.t1 = _context5.sent;\n\n                _context5.t0._syncState.call(_context5.t0, _context5.t1);\n\n                this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n\n                _context5.next = 12;\n                return this._check3PCSupport();\n\n              case 12:\n                res = _context5.sent;\n                this.state.support3PC = !!res.support3PC;\n                _context5.next = 19;\n                break;\n\n              case 16:\n                _context5.next = 18;\n                return this.updateOriginData();\n\n              case 18:\n                this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n\n              case 19:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function init() {\n        return _init2.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"updateOriginData\",\n    value: function () {\n      var _updateOriginData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var filteredOriginData, _yield$Promise$all, _yield$Promise$all2, whitelist, whiteLabel;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n                Object.keys(filteredOriginData).forEach(function (key) {\n                  if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n                });\n                _context6.next = 4;\n                return Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n\n              case 4:\n                _yield$Promise$all = _context6.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                whitelist = _yield$Promise$all2[0];\n                whiteLabel = _yield$Promise$all2[1];\n\n                this._syncState({\n                  originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n                  whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n                });\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function updateOriginData() {\n        return _updateOriginData.apply(this, arguments);\n      }\n\n      return updateOriginData;\n    }()\n  }, {\n    key: \"getWhitelist\",\n    value: function () {\n      var _getWhitelist = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var clientId, url, res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                clientId = this.state.clientId;\n\n                if (clientId) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                throw new Error(\"unspecified clientId\");\n\n              case 4:\n                url = new URL(\"https://api.developer.tor.us/whitelist\");\n                url.searchParams.append(\"project_id\", this.state.clientId);\n                _context7.next = 8;\n                return get(url.href);\n\n              case 8:\n                res = _context7.sent;\n                return _context7.abrupt(\"return\", res.signed_urls);\n\n              case 12:\n                _context7.prev = 12;\n                _context7.t0 = _context7[\"catch\"](0);\n                return _context7.abrupt(\"return\", {});\n\n              case 15:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 12]]);\n      }));\n\n      function getWhitelist() {\n        return _getWhitelist.apply(this, arguments);\n      }\n\n      return getWhitelist;\n    }()\n  }, {\n    key: \"getWhiteLabel\",\n    value: function () {\n      var _getWhiteLabel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var clientId, url, res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                clientId = this.state.clientId;\n\n                if (clientId) {\n                  _context8.next = 4;\n                  break;\n                }\n\n                throw new Error(\"unspecified clientId\");\n\n              case 4:\n                url = new URL(\"https://api.developer.tor.us/whitelabel\");\n                url.searchParams.append(\"project_id\", this.state.clientId);\n                _context8.next = 8;\n                return get(url.href);\n\n              case 8:\n                res = _context8.sent;\n                return _context8.abrupt(\"return\", res.whiteLabel);\n\n              case 12:\n                _context8.prev = 12;\n                _context8.t0 = _context8[\"catch\"](0);\n                return _context8.abrupt(\"return\", {});\n\n              case 15:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 12]]);\n      }));\n\n      function getWhiteLabel() {\n        return _getWhiteLabel.apply(this, arguments);\n      }\n\n      return getWhiteLabel;\n    }()\n  }, {\n    key: \"_fastLogin\",\n    value: function () {\n      var _fastLogin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(params) {\n        var defaultParams, loginParams, res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                defaultParams = {\n                  redirectUrl: this.state.redirectUrl\n                };\n                loginParams = _objectSpread(_objectSpread({}, defaultParams), params);\n                _context9.next = 4;\n                return this.request({\n                  params: [_objectSpread(_objectSpread({}, loginParams), {}, {\n                    fastLogin: true\n                  })],\n                  method: OPENLOGIN_METHOD.LOGIN,\n                  startUrl: this.state.startUrl,\n                  popupUrl: this.state.popupUrl,\n                  allowedInteractions: [ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n                });\n\n              case 4:\n                res = _context9.sent;\n                this.state.privKey = res.privKey;\n                return _context9.abrupt(\"return\", res);\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function _fastLogin(_x9) {\n        return _fastLogin2.apply(this, arguments);\n      }\n\n      return _fastLogin;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(params) {\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (!(params !== null && params !== void 0 && params.loginProvider)) {\n                  _context10.next = 2;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", this._selectedLogin(params));\n\n              case 2:\n                return _context10.abrupt(\"return\", this._modal(params));\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function login(_x10) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"_selectedLogin\",\n    value: function () {\n      var _selectedLogin2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(params) {\n        var defaultParams, loginParams, res;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                defaultParams = {\n                  redirectUrl: this.state.redirectUrl\n                };\n                loginParams = _objectSpread(_objectSpread({\n                  loginProvider: params.loginProvider\n                }, defaultParams), params); // fast login flow\n                // if (this.state.store.get(\"touchIDPreference\") === \"enabled\" && !loginParams.extraLoginOptions?.login_hint) {\n                //   return this._fastLogin(loginParams);\n                // }\n\n                _context11.next = 4;\n                return this.request({\n                  method: OPENLOGIN_METHOD.LOGIN,\n                  allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n                  startUrl: this.state.startUrl,\n                  popupUrl: this.state.popupUrl,\n                  params: [loginParams]\n                });\n\n              case 4:\n                res = _context11.sent;\n                this.state.privKey = res.privKey;\n\n                if (!res.store) {\n                  _context11.next = 10;\n                  break;\n                }\n\n                this._syncState(res);\n\n                _context11.next = 16;\n                break;\n\n              case 10:\n                if (!(this.state.privKey && this.state.support3PC)) {\n                  _context11.next = 16;\n                  break;\n                }\n\n                _context11.t0 = this;\n                _context11.next = 14;\n                return this._getData();\n\n              case 14:\n                _context11.t1 = _context11.sent;\n\n                _context11.t0._syncState.call(_context11.t0, _context11.t1);\n\n              case 16:\n                return _context11.abrupt(\"return\", {\n                  privKey: this.privKey\n                });\n\n              case 17:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _selectedLogin(_x11) {\n        return _selectedLogin2.apply(this, arguments);\n      }\n\n      return _selectedLogin;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var logoutParams,\n            params,\n            res,\n            _args12 = arguments;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                logoutParams = _args12.length > 0 && _args12[0] !== undefined ? _args12[0] : {};\n                params = {}; // defaults\n\n                params.redirectUrl = this.state.redirectUrl;\n                params._clientId = this.state.clientId;\n\n                if (logoutParams.clientId) {\n                  params._clientId = logoutParams.clientId;\n                }\n\n                if (logoutParams.fastLogin !== undefined) {\n                  params.fastLogin = logoutParams.fastLogin;\n                }\n\n                if (logoutParams.redirectUrl !== undefined) {\n                  params.redirectUrl = logoutParams.redirectUrl;\n                }\n\n                _context12.next = 9;\n                return this.request({\n                  method: OPENLOGIN_METHOD.LOGOUT,\n                  params: [params],\n                  startUrl: this.state.startUrl,\n                  popupUrl: this.state.popupUrl,\n                  allowedInteractions: [ALLOWED_INTERACTIONS.JRPC, ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n                });\n\n              case 9:\n                res = _context12.sent;\n                this.state.privKey = \"\"; // if (!params.fastLogin) this.state.store.set(\"touchIDPreference\", \"disabled\");\n\n                return _context12.abrupt(\"return\", res);\n\n              case 12:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(args) {\n        var _params$0$redirectUrl, pid, params, session, startUrl, popupUrl, method, allowedInteractions, userData, sig, u, windowRef, _u, _windowRef;\n\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                pid = randomId();\n                params = args.params; // Note: _origin is added later in postMessageStream for jrpc requests\n                // do not add it here since its used for checking postMessage constraints\n\n                session = {};\n\n                if (!(params.length !== 1)) {\n                  _context13.next = 5;\n                  break;\n                }\n\n                throw new Error(\"request params array should have only one element\");\n\n              case 5:\n                startUrl = args.startUrl, popupUrl = args.popupUrl, method = args.method, allowedInteractions = args.allowedInteractions;\n\n                if (!(allowedInteractions.length === 0)) {\n                  _context13.next = 8;\n                  break;\n                }\n\n                throw new Error(\"no allowed interactions\");\n\n              case 8:\n                if (this.state.clientId) {\n                  session._clientId = this.state.clientId;\n                }\n\n                if (!this.privKey) {\n                  _context13.next = 17;\n                  break;\n                }\n\n                userData = {\n                  clientId: session._clientId,\n                  timestamp: Date.now().toString()\n                };\n                _context13.next = 13;\n                return sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n\n              case 13:\n                sig = _context13.sent;\n                session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n                session._userSig = base64url.encode(sig);\n                session._userData = userData;\n\n              case 17:\n                session._originData = this.state.originData;\n                session._whiteLabelData = this.state.whiteLabel;\n                session._loginConfig = this.state.loginConfig; // add in session data (allow overrides)\n\n                params = [_objectSpread(_objectSpread({}, session), params[0])]; // use JRPC where possible\n\n                if (!(this.state.support3PC && allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC))) {\n                  _context13.next = 23;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", this._jrpcRequest({\n                  method: method,\n                  params: params\n                }));\n\n              case 23:\n                // set origin\n                params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin; // preset params\n\n                if (!this.state.support3PC) {\n                  _context13.next = 28;\n                  break;\n                }\n\n                _context13.next = 27;\n                return this._setPIDData(pid, params);\n\n              case 27:\n                // eslint-disable-next-line require-atomic-updates\n                params = [{}];\n\n              case 28:\n                if (!(!startUrl || !popupUrl)) {\n                  _context13.next = 30;\n                  break;\n                }\n\n                throw new Error(\"no url for redirect / popup flow\");\n\n              case 30:\n                if (!(this.state.uxMode === UX_MODE.REDIRECT)) {\n                  _context13.next = 40;\n                  break;\n                }\n\n                if (!allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n                  _context13.next = 34;\n                  break;\n                }\n\n                // give time for synchronous methods to complete before redirect\n                setTimeout(function () {\n                  window.location.href = constructURL({\n                    baseURL: startUrl,\n                    hash: {\n                      b64Params: jsonToBase64(params[0]),\n                      _pid: pid,\n                      _method: method\n                    }\n                  });\n                }, 50);\n                return _context13.abrupt(\"return\", {});\n\n              case 34:\n                if (!allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n                  _context13.next = 38;\n                  break;\n                }\n\n                u = new URL(constructURL({\n                  baseURL: popupUrl,\n                  hash: {\n                    b64Params: jsonToBase64(params[0]),\n                    _pid: pid,\n                    _method: method\n                  }\n                }));\n                windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n                return _context13.abrupt(\"return\", awaitReq(pid, windowRef));\n\n              case 38:\n                _context13.next = 47;\n                break;\n\n              case 40:\n                if (!allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n                  _context13.next = 44;\n                  break;\n                }\n\n                _u = new URL(constructURL({\n                  baseURL: popupUrl,\n                  hash: {\n                    b64Params: jsonToBase64(params[0]),\n                    _pid: pid,\n                    _method: method\n                  }\n                }));\n                _windowRef = window.open(_u.toString(), \"_blank\", getPopupFeatures());\n                return _context13.abrupt(\"return\", awaitReq(pid, _windowRef));\n\n              case 44:\n                if (!allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n                  _context13.next = 47;\n                  break;\n                }\n\n                // give time for synchronous methods to complete before redirect\n                setTimeout(function () {\n                  window.location.href = constructURL({\n                    baseURL: startUrl,\n                    hash: {\n                      b64Params: jsonToBase64(params[0]),\n                      _pid: pid,\n                      _method: method\n                    }\n                  });\n                }, 50);\n                return _context13.abrupt(\"return\", null);\n\n              case 47:\n                throw new Error(\"no matching allowed interactions\");\n\n              case 48:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function request(_x12) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }, {\n    key: \"_jrpcRequest\",\n    value: function () {\n      var _jrpcRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(args) {\n        var _this4 = this;\n\n        var method, params;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                  _context14.next = 2;\n                  break;\n                }\n\n                throw new Error(\"invalid request args\");\n\n              case 2:\n                method = args.method, params = args.params;\n\n                if (!(typeof method !== \"string\" || method.length === 0)) {\n                  _context14.next = 5;\n                  break;\n                }\n\n                throw new Error(\"invalid request method\");\n\n              case 5:\n                if (!(params === undefined || !Array.isArray(params))) {\n                  _context14.next = 7;\n                  break;\n                }\n\n                throw new Error(\"invalid request params\");\n\n              case 7:\n                if (params.length === 0) {\n                  params.push({});\n                }\n\n                return _context14.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this4.provider._rpcRequest({\n                    method: method,\n                    params: params\n                  }, getRpcPromiseCallback(resolve, reject));\n                }));\n\n              case 9:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      function _jrpcRequest(_x13) {\n        return _jrpcRequest2.apply(this, arguments);\n      }\n\n      return _jrpcRequest;\n    }()\n  }, {\n    key: \"_check3PCSupport\",\n    value: function () {\n      var _check3PCSupport2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                return _context15.abrupt(\"return\", this._jrpcRequest({\n                  method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n                  params: [{\n                    _originData: this.state.originData\n                  }]\n                }));\n\n              case 1:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _check3PCSupport() {\n        return _check3PCSupport2.apply(this, arguments);\n      }\n\n      return _check3PCSupport;\n    }()\n  }, {\n    key: \"_setPIDData\",\n    value: function () {\n      var _setPIDData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(pid, data) {\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                _context16.next = 2;\n                return this.request({\n                  allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n                  method: OPENLOGIN_METHOD.SET_PID_DATA,\n                  params: [{\n                    pid: pid,\n                    data: data[0]\n                  }]\n                });\n\n              case 2:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function _setPIDData(_x14, _x15) {\n        return _setPIDData2.apply(this, arguments);\n      }\n\n      return _setPIDData;\n    }()\n  }, {\n    key: \"_getData\",\n    value: function () {\n      var _getData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                return _context17.abrupt(\"return\", this.request({\n                  allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n                  method: OPENLOGIN_METHOD.GET_DATA,\n                  params: [{}]\n                }));\n\n              case 1:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function _getData() {\n        return _getData2.apply(this, arguments);\n      }\n\n      return _getData;\n    }()\n  }, {\n    key: \"_syncState\",\n    value: function _syncState(newState) {\n      var _this5 = this;\n\n      if (newState.store) {\n        if (typeof newState.store !== \"object\") {\n          throw new Error(\"expected store to be an object\");\n        }\n\n        Object.keys(newState.store).forEach(function (key) {\n          // if privKey is available then user is not logged out, but in popup mode store info is not available.\n          // so we don't want to overwrite the local store if privKey is available\n          // and if latest iframe store data is not available\n          if (newState.privKey) {\n            if (newState.store[key]) {\n              _this5.state.store.set(key, newState.store[key]);\n            }\n          } else {\n            _this5.state.store.set(key, newState.store[key]);\n          }\n        });\n      }\n\n      var store = this.state.store;\n      this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n        store: store\n      });\n    }\n  }, {\n    key: \"_modal\",\n    value: function () {\n      var _modal2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(params) {\n        var _this6 = this;\n\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                return _context19.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this6.modal._prompt(_this6.state.clientId, _this6.state.whiteLabel, _this6.state.loginConfig, /*#__PURE__*/function () {\n                    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(chunk) {\n                      var selectedLoginResponse;\n                      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n                        while (1) {\n                          switch (_context18.prev = _context18.next) {\n                            case 0:\n                              if (!chunk.cancel) {\n                                _context18.next = 4;\n                                break;\n                              }\n\n                              reject(new Error(\"user canceled login\"));\n                              _context18.next = 14;\n                              break;\n\n                            case 4:\n                              _context18.prev = 4;\n                              _context18.next = 7;\n                              return _this6._selectedLogin(merge(params, chunk));\n\n                            case 7:\n                              selectedLoginResponse = _context18.sent;\n                              resolve(selectedLoginResponse);\n                              _context18.next = 14;\n                              break;\n\n                            case 11:\n                              _context18.prev = 11;\n                              _context18.t0 = _context18[\"catch\"](4);\n                              reject(_context18.t0);\n\n                            case 14:\n                            case \"end\":\n                              return _context18.stop();\n                          }\n                        }\n                      }, _callee18, null, [[4, 11]]);\n                    }));\n\n                    return function (_x17) {\n                      return _ref6.apply(this, arguments);\n                    };\n                  }());\n                }));\n\n              case 1:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      function _modal(_x16) {\n        return _modal2.apply(this, arguments);\n      }\n\n      return _modal;\n    }()\n  }, {\n    key: \"_cleanup\",\n    value: function () {\n      var _cleanup2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20() {\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return this.modal.cleanup();\n\n              case 2:\n                this.provider.cleanup();\n\n              case 3:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function _cleanup() {\n        return _cleanup2.apply(this, arguments);\n      }\n\n      return _cleanup;\n    }()\n  }, {\n    key: \"encrypt\",\n    value: function () {\n      var _encrypt2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(message, privateKey) {\n        var privKey;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                privKey = privateKey;\n\n                if (!privKey) {\n                  privKey = this.privKey;\n                } // validations\n\n\n                if (/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n                  _context21.next = 8;\n                  break;\n                }\n\n                if (!(privKey === \"\" || privKey === undefined)) {\n                  _context21.next = 7;\n                  break;\n                }\n\n                throw new Error(\"private key cannot be empty\");\n\n              case 7:\n                throw new Error(\"invalid private key in encrypt\");\n\n              case 8:\n                return _context21.abrupt(\"return\", _encrypt(getPublic(Buffer.from(privKey, \"hex\")), message));\n\n              case 9:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function encrypt(_x18, _x19) {\n        return _encrypt2.apply(this, arguments);\n      }\n\n      return encrypt;\n    }()\n  }, {\n    key: \"decrypt\",\n    value: function () {\n      var _decrypt2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(ciphertext, privateKey) {\n        var privKey;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                privKey = privateKey;\n\n                if (!privKey) {\n                  privKey = this.privKey;\n                } // validations\n\n\n                if (/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n                  _context22.next = 8;\n                  break;\n                }\n\n                if (!(privKey === \"\" || privKey === undefined)) {\n                  _context22.next = 7;\n                  break;\n                }\n\n                throw new Error(\"private key cannot be empty\");\n\n              case 7:\n                throw new Error(\"invalid private key in decrypt\");\n\n              case 8:\n                return _context22.abrupt(\"return\", _decrypt(Buffer.from(privKey, \"hex\"), ciphertext));\n\n              case 9:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function decrypt(_x20, _x21) {\n        return _decrypt2.apply(this, arguments);\n      }\n\n      return decrypt;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23() {\n        var storeData, userInfo;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                if (!this.privKey) {\n                  _context23.next = 4;\n                  break;\n                }\n\n                storeData = this.state.store.getStore();\n                userInfo = {\n                  email: storeData.email || \"\",\n                  name: storeData.name || \"\",\n                  profileImage: storeData.profileImage || \"\",\n                  aggregateVerifier: storeData.aggregateVerifier || \"\",\n                  verifier: storeData.verifier || \"\",\n                  verifierId: storeData.verifierId || \"\",\n                  typeOfLogin: storeData.typeOfLogin || \"\",\n                  dappShare: storeData.dappShare || \"\"\n                };\n                return _context23.abrupt(\"return\", userInfo);\n\n              case 4:\n                throw new Error(\"user should be logged in to fetch userInfo\");\n\n              case 5:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }()\n  }, {\n    key: \"getEncodedLoginUrl\",\n    value: function () {\n      var _getEncodedLoginUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(loginParams) {\n        var redirectUrl, clientId, dataObject, b64Params, hashParams;\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                redirectUrl = loginParams.redirectUrl;\n                clientId = this.state.clientId;\n\n                if (this.state.originData[origin]) {\n                  _context24.next = 5;\n                  break;\n                }\n\n                _context24.next = 5;\n                return this.updateOriginData();\n\n              case 5:\n                dataObject = _objectSpread({\n                  _clientId: clientId,\n                  _origin: new URL(redirectUrl).origin,\n                  _originData: this.state.originData,\n                  redirectUrl: redirectUrl\n                }, loginParams);\n                b64Params = jsonToBase64(dataObject);\n                hashParams = {\n                  b64Params: b64Params,\n                  _method: \"openlogin_login\"\n                };\n                return _context24.abrupt(\"return\", constructURL({\n                  baseURL: \"\".concat(this.state.iframeUrl, \"/start\"),\n                  hash: hashParams\n                }));\n\n              case 9:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function getEncodedLoginUrl(_x22) {\n        return _getEncodedLoginUrl.apply(this, arguments);\n      }\n\n      return getEncodedLoginUrl;\n    }()\n  }]);\n\n  return OpenLogin;\n}();\n\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };","map":{"version":3,"sources":["../src/constants.ts","../src/loglevel.ts","../src/utils.ts","../src/Modal.ts","../src/MemoryStore.ts","../src/OpenLoginStore.ts","../src/Provider.ts","../src/OpenLogin.ts"],"names":["modalDOMElementID","storeKey","UX_MODE","POPUP","REDIRECT","OPENLOGIN_METHOD","LOGIN","LOGOUT","CHECK_3PC_SUPPORT","SET_PID_DATA","GET_DATA","ALLOWED_INTERACTIONS","JRPC","OPENLOGIN_NETWORK","MAINNET","TESTNET","CYAN","DEVELOPMENT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","WEBAUTHN","JWT","MFA_LEVELS","DEFAULT","OPTIONAL","MANDATORY","NONE","loglevel","resolve","document","htmlToElement","html","template","window","trimmedHtml","appKeyBuf","Buffer","appKey","base64url","getPublic","sig","sign","keccak","replaceUrl","result","url","key","queryResult","queryParams","JSON","safeatob","Object","log","hash","hashUrl","hashResult","hashParams","cleanUrl","reject","closedByHandler","closedMonitor","setInterval","windowRef","clearInterval","handler","ev","pid","id","query","h","constructURL","baseURL","storageExists","storageLength","storage","x","error","sessionStorageAvailable","storageAvailable","localStorageAvailable","openloginIframeHtml","getPopupFeatures","dualScreenLeft","dualScreenTop","w","width","height","systemZoom","left","Math","top","features","handleStream","handlerWrapper","chunk","handle","Modal","constructor","modalUrl","init","setupStream","setupMultiplex","name","target","targetWindow","targetOrigin","origin","verifierStream","initIFrame","documentReady","documentIFrameElem","initialized","_showModal","style","k","_hideModal","_prompt","modalHandler","cb","clientId","whiteLabel","loginConfig","cleanup","iframeElem","MemoryStore","getItem","setItem","OpenLoginStore","getInstance","toJSON","resetStore","currStore","getStore","get","store","set","iframeUrl","JRPCConnection","createStreamMiddleware","pump","rpcEngine","createIdRemapMiddleware","_rpcRequest","payload","randomId","preloadIframe","provider","deleteProperty","options","modal","initState","no3PC","_iframeUrl","_startUrl","_popupUrl","redirectUrl","uxMode","replaceUrlOnRedirect","originData","privKey","network","startUrl","popupUrl","support3PC","Promise","_syncState","getHashQueryParams","res","state","updateOriginData","filteredOriginData","getWhitelist","getWhiteLabel","_fastLogin","defaultParams","loginParams","params","fastLogin","method","allowedInteractions","login","_selectedLogin","loginProvider","logout","logoutParams","request","session","userData","timestamp","Date","setTimeout","b64Params","jsonToBase64","_pid","_method","u","awaitReq","_jrpcRequest","Array","getRpcPromiseCallback","_check3PCSupport","_originData","_setPIDData","data","_getData","newState","_modal","selectedLoginResponse","merge","_cleanup","encrypt","decrypt","getUserInfo","storeData","userInfo","email","profileImage","aggregateVerifier","verifier","verifierId","typeOfLogin","dappShare","getEncodedLoginUrl","dataObject","_clientId","_origin"],"mappings":"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","sourcesContent":["import loglevel from 'loglevel';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { getPublic, sign, encrypt, decrypt } from '@toruslabs/eccrypto';\nimport { get } from '@toruslabs/http-helpers';\nimport { setupMultiplex, PostMessageStream, SafeEventEmitter, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback } from '@toruslabs/openlogin-jrpc';\nimport { base64url, keccak, safeatob, randomId, jsonToBase64 } from '@toruslabs/openlogin-utils';\nimport merge from 'lodash.merge';\nimport pump from 'pump';\n\nconst modalDOMElementID = \"openlogin-modal\";\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_METHOD = {\n  LOGIN: \"openlogin_login\",\n  LOGOUT: \"openlogin_logout\",\n  CHECK_3PC_SUPPORT: \"openlogin_check_3PC_support\",\n  SET_PID_DATA: \"openlogin_set_pid_data\",\n  GET_DATA: \"openlogin_get_data\"\n};\nconst ALLOWED_INTERACTIONS = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n  JRPC: \"jrpc\"\n};\nconst OPENLOGIN_NETWORK = {\n  MAINNET: \"mainnet\",\n  TESTNET: \"testnet\",\n  CYAN: \"cyan\",\n  DEVELOPMENT: \"development\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\"\n};\n\nloglevel.setLevel(\"error\");\nvar log = loglevel.getLogger(\"openlogin\");\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      document.addEventListener(\"DOMContentLoaded\", () => {\n        resolve();\n      });\n    }\n  });\n}\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nasync function whitelistUrl(clientId, appKey, origin) {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, Buffer.from(keccak(\"keccak256\").update(origin).digest(\"hex\"), \"hex\"));\n  return base64url.encode(sig);\n}\nfunction getHashQueryParams() {\n  let replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const result = {};\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach(key => {\n        result[key] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(\"\".concat(window.location.origin, \"/?\").concat(hash));\n  hashUrl.searchParams.forEach((value, key) => {\n    if (key !== \"result\") {\n      result[key] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach(key => {\n        result[key] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = window.location.origin + window.location.pathname;\n    window.history.replaceState(null, \"\", cleanUrl);\n  }\n\n  return result;\n}\nfunction awaitReq(id, windowRef) {\n  return new Promise((resolve, reject) => {\n    if (!windowRef) reject(new Error(\"Unable to open window\"));\n    let closedByHandler = false;\n    const closedMonitor = setInterval(() => {\n      if (!closedByHandler && windowRef.closed) {\n        clearInterval(closedMonitor);\n        reject(new Error(\"user closed popup\"));\n      }\n    }, 500);\n\n    const handler = ev => {\n      const {\n        pid\n      } = ev.data;\n      if (id !== pid) return;\n      window.removeEventListener(\"message\", handler);\n      closedByHandler = true;\n      clearInterval(closedMonitor);\n      windowRef.close();\n\n      if (ev.data.data && ev.data.data.error) {\n        reject(new Error(ev.data.data.error));\n      } else {\n        resolve(ev.data.data);\n      }\n    };\n\n    window.addEventListener(\"message\", handler);\n  });\n}\nfunction constructURL(params) {\n  const {\n    baseURL,\n    query,\n    hash\n  } = params;\n  const url = new URL(baseURL);\n\n  if (query) {\n    Object.keys(query).forEach(key => {\n      url.searchParams.append(key, query[key]);\n    });\n  }\n\n  if (hash) {\n    const h = new URL(constructURL({\n      baseURL,\n      query: hash\n    })).searchParams.toString();\n    url.hash = h;\n  }\n\n  return url.toString();\n}\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    return error && ( // everything except Firefox\n    error.code === 22 || // Firefox\n    error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededErro r\" || // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\nconst sessionStorageAvailable = storageAvailable(\"sessionStorage\");\nconst localStorageAvailable = storageAvailable(\"localStorage\");\nfunction preloadIframe(url) {\n  try {\n    if (typeof document === \"undefined\") return;\n    const openloginIframeHtml = document.createElement(\"link\");\n    openloginIframeHtml.href = url;\n    openloginIframeHtml.crossOrigin = \"anonymous\";\n    openloginIframeHtml.type = \"text/html\";\n    openloginIframeHtml.rel = \"prefetch\";\n\n    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {\n      if (openloginIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(openloginIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.error(error);\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\nclass Modal {\n  constructor(modalUrl) {\n    _defineProperty(this, \"modalUrl\", void 0);\n\n    _defineProperty(this, \"iframeElem\", void 0);\n\n    _defineProperty(this, \"initialized\", false);\n\n    _defineProperty(this, \"modalZIndex\", 99999);\n\n    _defineProperty(this, \"mux\", void 0);\n\n    _defineProperty(this, \"verifierStream\", void 0);\n\n    this.modalUrl = modalUrl;\n  }\n\n  async init() {\n    await this.initIFrame(this.modalUrl);\n    this.setupStream();\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.mux = setupMultiplex(new PostMessageStream({\n      name: \"modal_iframe_rpc\",\n      target: \"modal_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.modalUrl).origin\n    }));\n    this.verifierStream = this.mux.createStream(\"verifier\");\n  }\n\n  async initIFrame(src) {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      log.info(\"already initialized, removing previous modal iframe\");\n    }\n\n    this.iframeElem = htmlToElement(\"<iframe\\n        id=\".concat(modalDOMElementID, \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(src, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n\n    this._hideModal();\n\n    document.body.appendChild(this.iframeElem);\n    return new Promise(resolve => {\n      this.iframeElem.onload = () => {\n        this.initialized = true;\n        resolve();\n      };\n    });\n  }\n\n  _showModal() {\n    const style = {};\n    style.display = \"block\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref => {\n      let [k, v] = _ref;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  _hideModal() {\n    const style = {};\n    style.display = \"none\";\n    style.position = \"fixed\";\n    style.width = \"100%\";\n    style.height = \"100%\";\n    style.top = \"0px\";\n    style.right = \"0px\";\n    style.left = \"0px\";\n    style.bottom = \"0px\";\n    style.border = \"0\";\n    style[\"z-index\"] = this.modalZIndex;\n    this.iframeElem.setAttribute(\"style\", Object.entries(style).map(_ref2 => {\n      let [k, v] = _ref2;\n      return \"\".concat(k, \":\").concat(v);\n    }).join(\";\"));\n  }\n\n  async _prompt(clientId, whiteLabel, loginConfig, cb) {\n    this._showModal();\n\n    const modalHandler = chunk => {\n      this._hideModal();\n\n      cb(chunk);\n    };\n\n    handleStream(this.verifierStream, \"data\", modalHandler);\n    this.verifierStream.write({\n      name: \"prompt\",\n      clientId,\n      whiteLabel,\n      loginConfig\n    });\n  }\n\n  async cleanup() {\n    await documentReady();\n    const documentIFrameElem = document.getElementById(modalDOMElementID);\n\n    if (documentIFrameElem) {\n      documentIFrameElem.remove();\n      this.iframeElem = null;\n    }\n\n    this.initialized = false;\n  }\n\n}\n\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", {});\n  }\n\n  getItem(key) {\n    return this.store[key];\n  }\n\n  setItem(key, value) {\n    this.store[key] = value;\n  }\n\n}\n\nclass OpenLoginStore {\n  // eslint-disable-next-line no-use-before-define\n  constructor(storage) {\n    _defineProperty(this, \"storage\", void 0);\n\n    this.storage = storage;\n\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {// Storage is not available\n    }\n  }\n\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new this(localStorageAvailable ? localStorage : new MemoryStore());\n    }\n\n    return this.instance;\n  }\n\n  toJSON() {\n    return this.storage.getItem(storeKey);\n  }\n\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.setItem(storeKey, JSON.stringify({}));\n    return currStore;\n  }\n\n  getStore() {\n    return JSON.parse(this.storage.getItem(storeKey));\n  }\n\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    return store[key];\n  }\n\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(storeKey));\n    store[key] = value;\n    this.storage.setItem(storeKey, JSON.stringify(store));\n  }\n\n}\n\n_defineProperty(OpenLoginStore, \"instance\", void 0);\n\nclass Provider extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"iframeElem\", null);\n\n    _defineProperty(this, \"rpcStream\", void 0);\n\n    _defineProperty(this, \"iframeUrl\", void 0);\n\n    _defineProperty(this, \"rpcEngine\", void 0);\n\n    _defineProperty(this, \"initialized\", void 0);\n\n    _defineProperty(this, \"mux\", void 0);\n  }\n\n  init(_ref) {\n    let {\n      iframeElem,\n      iframeUrl\n    } = _ref;\n    this.iframeElem = iframeElem;\n    this.iframeUrl = iframeUrl;\n    this.setupStream();\n    this.initialized = true;\n  }\n\n  setupStream() {\n    if (this.iframeElem === null) throw new Error(\"iframe is null\");\n    this.rpcStream = new PostMessageStream({\n      name: \"embed_rpc\",\n      target: \"iframe_rpc\",\n      targetWindow: this.iframeElem.contentWindow,\n      targetOrigin: new URL(this.iframeUrl).origin\n    });\n    this.mux = setupMultiplex(this.rpcStream);\n    const JRPCConnection = createStreamMiddleware();\n    pump(JRPCConnection.stream, this.mux.createStream(\"jrpc\"), JRPCConnection.stream, error => {\n      log.error(\"JRPC connection broken\", error);\n    });\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(JRPCConnection.middleware);\n    this.rpcEngine = rpcEngine;\n  }\n\n  cleanup() {\n    this.iframeElem = null;\n    this.initialized = false;\n  }\n\n  _rpcRequest(payload, callback) {\n    if (!payload.jsonrpc) {\n      payload.jsonrpc = \"2.0\";\n    }\n\n    if (!payload.id) {\n      payload.id = randomId();\n    }\n\n    this.rpcEngine.handle(payload, callback);\n  }\n\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\npreloadIframe(\"https://app.openlogin.com/sdk-modal\");\n\nclass OpenLogin {\n  constructor(options) {\n    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig;\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"modal\", void 0);\n\n    this.provider = new Proxy(new Provider(), {\n      deleteProperty: () => true // work around for web3\n\n    });\n\n    if (!options._iframeUrl) {\n      if (options.network === OPENLOGIN_NETWORK.MAINNET) {\n        options._iframeUrl = \"https://app.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.CYAN) {\n        options._iframeUrl = \"https://cyan.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.TESTNET) {\n        options._iframeUrl = \"https://beta.openlogin.com\";\n      } else if (options.network === OPENLOGIN_NETWORK.DEVELOPMENT) {\n        options._iframeUrl = \"http://localhost:3000\";\n      }\n    }\n\n    if (!options._iframeUrl) {\n      throw new Error(\"unspecified network and iframeUrl\");\n    }\n\n    this.modal = new Modal(\"\".concat(options._iframeUrl, \"/sdk-modal\"));\n    this.initState(_objectSpread(_objectSpread({}, options), {}, {\n      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,\n      _iframeUrl: options._iframeUrl,\n      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : \"\".concat(options._iframeUrl, \"/start\"),\n      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : \"\".concat(options._iframeUrl, \"/popup-window\"),\n      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : \"\".concat(window.location.protocol, \"//\").concat(window.location.host).concat(window.location.pathname),\n      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : UX_MODE.REDIRECT,\n      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,\n      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : {\n        [window.location.origin]: \"\"\n      },\n      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},\n      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {}\n    }));\n  }\n\n  get privKey() {\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  initState(options) {\n    this.state = {\n      uxMode: options.uxMode,\n      network: options.network,\n      store: OpenLoginStore.getInstance(),\n      iframeUrl: options._iframeUrl,\n      startUrl: options._startUrl,\n      popupUrl: options._popupUrl,\n      clientId: options.clientId,\n      redirectUrl: options.redirectUrl,\n      replaceUrlOnRedirect: options.replaceUrlOnRedirect,\n      originData: options.originData,\n      loginConfig: options.loginConfig,\n      support3PC: !options.no3PC,\n      whiteLabel: options.whiteLabel\n    };\n  }\n\n  async init() {\n    if (this.state.support3PC) {\n      await Promise.all([this.modal.init(), this.updateOriginData()]);\n      this.provider.init({\n        iframeElem: this.modal.iframeElem,\n        iframeUrl: this.state.iframeUrl\n      });\n\n      this._syncState(await this._getData());\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n\n      const res = await this._check3PCSupport();\n      this.state.support3PC = !!res.support3PC;\n    } else {\n      await this.updateOriginData();\n\n      this._syncState(getHashQueryParams(this.state.replaceUrlOnRedirect));\n    }\n  }\n\n  async updateOriginData() {\n    const filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));\n    Object.keys(filteredOriginData).forEach(key => {\n      if (filteredOriginData[key] === \"\") delete filteredOriginData[key];\n    });\n    const [whitelist, whiteLabel] = await Promise.all([this.getWhitelist(), this.getWhiteLabel()]);\n\n    this._syncState({\n      originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),\n      whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)\n    });\n  }\n\n  async getWhitelist() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelist\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.signed_urls;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async getWhiteLabel() {\n    try {\n      const {\n        clientId\n      } = this.state;\n\n      if (!clientId) {\n        throw new Error(\"unspecified clientId\");\n      }\n\n      const url = new URL(\"https://api.developer.tor.us/whitelabel\");\n      url.searchParams.append(\"project_id\", this.state.clientId);\n      const res = await get(url.href);\n      return res.whiteLabel;\n    } catch (_) {\n      // fail silently\n      return {};\n    }\n  }\n\n  async _fastLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({}, defaultParams), params);\n\n    const res = await this.request({\n      params: [_objectSpread(_objectSpread({}, loginParams), {}, {\n        fastLogin: true\n      })],\n      method: OPENLOGIN_METHOD.LOGIN,\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = res.privKey;\n    return res;\n  }\n\n  async login(params) {\n    if (params !== null && params !== void 0 && params.loginProvider) {\n      return this._selectedLogin(params);\n    }\n\n    return this._modal(params);\n  }\n\n  async _selectedLogin(params) {\n    const defaultParams = {\n      redirectUrl: this.state.redirectUrl\n    };\n\n    const loginParams = _objectSpread(_objectSpread({\n      loginProvider: params.loginProvider\n    }, defaultParams), params); // fast login flow\n    // if (this.state.store.get(\"touchIDPreference\") === \"enabled\" && !loginParams.extraLoginOptions?.login_hint) {\n    //   return this._fastLogin(loginParams);\n    // }\n\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGIN,\n      allowedInteractions: [UX_MODE.REDIRECT, UX_MODE.POPUP],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      params: [loginParams]\n    });\n    this.state.privKey = res.privKey;\n\n    if (res.store) {\n      this._syncState(res);\n    } else if (this.state.privKey && this.state.support3PC) {\n      this._syncState(await this._getData());\n    }\n\n    return {\n      privKey: this.privKey\n    };\n  }\n\n  async logout() {\n    let logoutParams = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const params = {}; // defaults\n\n    params.redirectUrl = this.state.redirectUrl;\n    params._clientId = this.state.clientId;\n\n    if (logoutParams.clientId) {\n      params._clientId = logoutParams.clientId;\n    }\n\n    if (logoutParams.fastLogin !== undefined) {\n      params.fastLogin = logoutParams.fastLogin;\n    }\n\n    if (logoutParams.redirectUrl !== undefined) {\n      params.redirectUrl = logoutParams.redirectUrl;\n    }\n\n    const res = await this.request({\n      method: OPENLOGIN_METHOD.LOGOUT,\n      params: [params],\n      startUrl: this.state.startUrl,\n      popupUrl: this.state.popupUrl,\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC, ALLOWED_INTERACTIONS.POPUP, ALLOWED_INTERACTIONS.REDIRECT]\n    });\n    this.state.privKey = \"\"; // if (!params.fastLogin) this.state.store.set(\"touchIDPreference\", \"disabled\");\n\n    return res;\n  }\n\n  async request(args) {\n    var _params$0$redirectUrl;\n\n    const pid = randomId();\n    let {\n      params\n    } = args; // Note: _origin is added later in postMessageStream for jrpc requests\n    // do not add it here since its used for checking postMessage constraints\n\n    const session = {};\n    if (params.length !== 1) throw new Error(\"request params array should have only one element\");\n    const {\n      startUrl,\n      popupUrl,\n      method,\n      allowedInteractions\n    } = args;\n    if (allowedInteractions.length === 0) throw new Error(\"no allowed interactions\");\n\n    if (this.state.clientId) {\n      session._clientId = this.state.clientId;\n    }\n\n    if (this.privKey) {\n      const userData = {\n        clientId: session._clientId,\n        timestamp: Date.now().toString()\n      };\n      const sig = await sign(Buffer.from(this.privKey, \"hex\"), Buffer.from(keccak(\"keccak256\").update(JSON.stringify(userData)).digest(\"hex\"), \"hex\"));\n      session._user = getPublic(Buffer.from(this.privKey, \"hex\")).toString(\"hex\");\n      session._userSig = base64url.encode(sig);\n      session._userData = userData;\n    }\n\n    session._originData = this.state.originData;\n    session._whiteLabelData = this.state.whiteLabel;\n    session._loginConfig = this.state.loginConfig; // add in session data (allow overrides)\n\n    params = [_objectSpread(_objectSpread({}, session), params[0])]; // use JRPC where possible\n\n    if (this.state.support3PC && allowedInteractions.includes(ALLOWED_INTERACTIONS.JRPC)) {\n      return this._jrpcRequest({\n        method,\n        params\n      });\n    } // set origin\n\n\n    params[0]._origin = new URL((_params$0$redirectUrl = params[0].redirectUrl) !== null && _params$0$redirectUrl !== void 0 ? _params$0$redirectUrl : this.state.redirectUrl).origin; // preset params\n\n    if (this.state.support3PC) {\n      // set params first if 3PC supported\n      await this._setPIDData(pid, params); // eslint-disable-next-line require-atomic-updates\n\n      params = [{}];\n    }\n\n    if (!startUrl || !popupUrl) {\n      throw new Error(\"no url for redirect / popup flow\");\n    } // method and pid are always in URL hash params\n    // convert params from JSON to base64\n\n\n    if (this.state.uxMode === UX_MODE.REDIRECT) {\n      // if redirects preferred, check for redirect flows first, then check for popup flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return {};\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n    } else {\n      // if popups preferred, check for popup flows first, then check for redirect flow\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.POPUP)) {\n        const u = new URL(constructURL({\n          baseURL: popupUrl,\n          hash: {\n            b64Params: jsonToBase64(params[0]),\n            _pid: pid,\n            _method: method\n          }\n        }));\n        const windowRef = window.open(u.toString(), \"_blank\", getPopupFeatures());\n        return awaitReq(pid, windowRef);\n      }\n\n      if (allowedInteractions.includes(ALLOWED_INTERACTIONS.REDIRECT)) {\n        // give time for synchronous methods to complete before redirect\n        setTimeout(() => {\n          window.location.href = constructURL({\n            baseURL: startUrl,\n            hash: {\n              b64Params: jsonToBase64(params[0]),\n              _pid: pid,\n              _method: method\n            }\n          });\n        }, 50);\n        return null;\n      }\n    }\n\n    throw new Error(\"no matching allowed interactions\");\n  }\n\n  async _jrpcRequest(args) {\n    // await this.initialized;\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw new Error(\"invalid request args\");\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw new Error(\"invalid request method\");\n    }\n\n    if (params === undefined || !Array.isArray(params)) {\n      throw new Error(\"invalid request params\");\n    }\n\n    if (params.length === 0) {\n      params.push({});\n    }\n\n    return new Promise((resolve, reject) => {\n      this.provider._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  async _check3PCSupport() {\n    return this._jrpcRequest({\n      method: OPENLOGIN_METHOD.CHECK_3PC_SUPPORT,\n      params: [{\n        _originData: this.state.originData\n      }]\n    });\n  }\n\n  async _setPIDData(pid, data) {\n    await this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.SET_PID_DATA,\n      params: [{\n        pid,\n        data: data[0]\n      }]\n    });\n  }\n\n  async _getData() {\n    return this.request({\n      allowedInteractions: [ALLOWED_INTERACTIONS.JRPC],\n      method: OPENLOGIN_METHOD.GET_DATA,\n      params: [{}]\n    });\n  }\n\n  _syncState(newState) {\n    if (newState.store) {\n      if (typeof newState.store !== \"object\") {\n        throw new Error(\"expected store to be an object\");\n      }\n\n      Object.keys(newState.store).forEach(key => {\n        // if privKey is available then user is not logged out, but in popup mode store info is not available.\n        // so we don't want to overwrite the local store if privKey is available\n        // and if latest iframe store data is not available\n        if (newState.privKey) {\n          if (newState.store[key]) {\n            this.state.store.set(key, newState.store[key]);\n          }\n        } else {\n          this.state.store.set(key, newState.store[key]);\n        }\n      });\n    }\n\n    const {\n      store\n    } = this.state;\n    this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {\n      store\n    });\n  }\n\n  async _modal(params) {\n    return new Promise((resolve, reject) => {\n      this.modal._prompt(this.state.clientId, this.state.whiteLabel, this.state.loginConfig, async chunk => {\n        if (chunk.cancel) {\n          reject(new Error(\"user canceled login\"));\n        } else {\n          try {\n            const selectedLoginResponse = await this._selectedLogin(merge(params, chunk));\n            resolve(selectedLoginResponse);\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n  }\n\n  async _cleanup() {\n    await this.modal.cleanup();\n    this.provider.cleanup();\n  }\n\n  async encrypt(message, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in encrypt\");\n      }\n    }\n\n    return encrypt(getPublic(Buffer.from(privKey, \"hex\")), message);\n  }\n\n  async decrypt(ciphertext, privateKey) {\n    let privKey = privateKey;\n\n    if (!privKey) {\n      privKey = this.privKey;\n    } // validations\n\n\n    if (!/^[0-9a-fA-f]{64}$/.exec(privKey)) {\n      if (privKey === \"\" || privKey === undefined) {\n        throw new Error(\"private key cannot be empty\");\n      } else {\n        throw new Error(\"invalid private key in decrypt\");\n      }\n    }\n\n    return decrypt(Buffer.from(privKey, \"hex\"), ciphertext);\n  }\n\n  async getUserInfo() {\n    if (this.privKey) {\n      const storeData = this.state.store.getStore();\n      const userInfo = {\n        email: storeData.email || \"\",\n        name: storeData.name || \"\",\n        profileImage: storeData.profileImage || \"\",\n        aggregateVerifier: storeData.aggregateVerifier || \"\",\n        verifier: storeData.verifier || \"\",\n        verifierId: storeData.verifierId || \"\",\n        typeOfLogin: storeData.typeOfLogin || \"\",\n        dappShare: storeData.dappShare || \"\"\n      };\n      return userInfo;\n    }\n\n    throw new Error(\"user should be logged in to fetch userInfo\");\n  }\n\n  async getEncodedLoginUrl(loginParams) {\n    const {\n      redirectUrl\n    } = loginParams;\n    const {\n      clientId\n    } = this.state;\n\n    if (!this.state.originData[origin]) {\n      await this.updateOriginData();\n    }\n\n    const dataObject = _objectSpread({\n      _clientId: clientId,\n      _origin: new URL(redirectUrl).origin,\n      _originData: this.state.originData,\n      redirectUrl\n    }, loginParams);\n\n    const b64Params = jsonToBase64(dataObject);\n    const hashParams = {\n      b64Params,\n      _method: \"openlogin_login\"\n    };\n    return constructURL({\n      baseURL: \"\".concat(this.state.iframeUrl, \"/start\"),\n      hash: hashParams\n    });\n  }\n\n}\n\nexport { ALLOWED_INTERACTIONS, LOGIN_PROVIDER, MFA_LEVELS, OPENLOGIN_METHOD, OPENLOGIN_NETWORK, OpenLoginStore, Provider, UX_MODE, awaitReq, constructURL, OpenLogin as default, documentReady, getHashQueryParams, getPopupFeatures, htmlToElement, localStorageAvailable, log as loglevel, modalDOMElementID, preloadIframe, sessionStorageAvailable, storageAvailable, storeKey, whitelistUrl };\n//# sourceMappingURL=openlogin.esm.js.map\n"]},"metadata":{},"sourceType":"module"}