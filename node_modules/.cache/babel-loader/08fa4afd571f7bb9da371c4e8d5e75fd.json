{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty2 from \"C:/DaoWebsite/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _WALLET_OPENLOGIN_VER, _paymentProviders$, _defaultVerifiers;\n\nimport _regeneratorRuntime from \"C:\\\\DaoWebsite\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport NodeDetailManager from '@toruslabs/fetch-node-details';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport TorusJs from '@toruslabs/torus.js';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\nvar LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nvar WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\"\n};\nvar WALLET_OPENLOGIN_VERIFIER_MAP = (_WALLET_OPENLOGIN_VER = {}, _defineProperty2(_WALLET_OPENLOGIN_VER, WALLET_VERIFIERS.GOOGLE, \"tkey-google\"), _defineProperty2(_WALLET_OPENLOGIN_VER, WALLET_VERIFIERS.FACEBOOK, \"tkey-facebook\"), _defineProperty2(_WALLET_OPENLOGIN_VER, WALLET_VERIFIERS.TWITCH, \"tkey-twitch\"), _defineProperty2(_WALLET_OPENLOGIN_VER, WALLET_VERIFIERS.REDDIT, \"tkey-reddit\"), _defineProperty2(_WALLET_OPENLOGIN_VER, WALLET_VERIFIERS.DISCORD, \"tkey-discord\"), _defineProperty2(_WALLET_OPENLOGIN_VER, WALLET_VERIFIERS.EMAIL_PASSWORDLESS, \"tkey-auth0-email-passwordless\"), _WALLET_OPENLOGIN_VER);\nvar PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nvar TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\"\n};\nvar BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nvar paymentProviders$1 = (_paymentProviders$ = {}, _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.RAMPNETWORK, {\n  line1: \"Debit Card/ Apple Pay/ Bank transfer\",\n  line2: \"0.49% - 2.9%\",\n  line3: \"5,000€/purchase, 20,000€/mo\",\n  supportPage: \"https://instant.ramp.network/\",\n  minOrderValue: 50,\n  maxOrderValue: 20000,\n  validCurrencies: [\"GBP\", \"EUR\", \"USD\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"BSC_BNB\"],\n  includeFees: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.MOONPAY, {\n  line1: \"Credit / Debit Card / Apple Pay\",\n  line2: \"4.5% or 5 USD\",\n  line3: \"2,000€/day, 10,000€/mo\",\n  supportPage: \"https://help.moonpay.io/en/\",\n  minOrderValue: 24.99,\n  maxOrderValue: 50000,\n  validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\", \"RUB\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"TUSD\", \"USDC\", \"USDT\", \"BNB_BSC\", \"BUSD_BSC\"],\n  includeFees: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.WYRE, {\n  line1: \"Apple Pay/ Debit/ Credit Card\",\n  line2: \"4.9% + 30¢ or 5 USD\",\n  line3: \"$250/day\",\n  supportPage: \"https://support.sendwyre.com/en/\",\n  minOrderValue: 5,\n  maxOrderValue: 500,\n  validCurrencies: [\"USD\", \"AUD\", \"CAD\", \"GBP\", \"EUR\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n  includeFees: false,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.XANPOOL, {\n  line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ VietelPay/ DuitNow\",\n  line2: \"2.5% buying, 3% selling\",\n  line3: \"$2,500 / day\",\n  supportPage: \"mailto:support@xanpool.com\",\n  minOrderValue: 100,\n  maxOrderValue: 2500,\n  validCurrencies: [\"SGD\", \"HKD\", \"MYR\", \"PHP\", \"INR\", \"VND\", \"THB\", \"IDR\"],\n  validCryptoCurrencies: [\"ETH\", \"USDT\"],\n  includeFees: true,\n  sell: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.MERCURYO, {\n  line1: \"Credit/ Debit Card/ Apple Pay\",\n  line2: \"3.95% or 4 USD\",\n  line3: \"10,000€/day, 25,000€/mo\",\n  supportPage: \"mailto:support@mercuryo.io\",\n  minOrderValue: 30,\n  maxOrderValue: 5000,\n  validCurrencies: [\"USD\", \"EUR\", \"RUB\", \"TRY\", \"GBP\", \"UAH\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"BAT\", \"USDT\", \"OKB\"],\n  includeFees: true,\n  enforceMax: false\n}), _defineProperty2(_paymentProviders$, PAYMENT_PROVIDER.TRANSAK, {\n  line1: \"Credit/ Debit Card/ <br/>Bank Transfer (sepa/gbp)\",\n  line2: \"0.99% - 5.5% or 5 USD\",\n  line3: \"500€/day\",\n  supportPage: \"https://support.transak.com/hc/en-US\",\n  minOrderValue: 20,\n  maxOrderValue: 500,\n  validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\"],\n  validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n  includeFees: true,\n  enforceMax: false\n}), _paymentProviders$);\nvar translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations: translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: \"torus-\"\n};\n\nvar runOnLoad = function runOnLoad(fn) {\n  return new Promise(function (resolve, reject) {\n    if (window.document.body != null) {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    } else {\n      window.document.addEventListener(\"DOMContentLoaded\", function () {\n        Promise.resolve(fn()).then(resolve).catch(reject);\n      });\n    }\n  });\n};\n\nvar htmlToElement = function htmlToElement(html) {\n  var template = window.document.createElement(\"template\");\n  var trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nvar handleEvent = function handleEvent(handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  var handlerWrapper = function handlerWrapper() {\n    handler.apply(void 0, handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nvar handleStream = function handleStream(handle, eventName, handler) {\n  var handlerWrapper = function handlerWrapper(chunk) {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\n\nfunction documentReady() {\n  return _documentReady.apply(this, arguments);\n}\n\nfunction _documentReady() {\n  _documentReady = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            return _context13.abrupt(\"return\", new Promise(function (resolve) {\n              if (document.readyState !== \"loading\") {\n                resolve();\n              } else {\n                handleEvent(document, \"DOMContentLoaded\", resolve);\n              }\n            }));\n\n          case 1:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _documentReady.apply(this, arguments);\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\nvar messages = {\n  errors: {\n    disconnected: function disconnected() {\n      return \"Torus: Lost connection to Torus.\";\n    },\n    permanentlyDisconnected: function permanentlyDisconnected() {\n      return \"Torus: Disconnected from iframe. Page reload required.\";\n    },\n    sendSiteMetadata: function sendSiteMetadata() {\n      return \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\";\n    },\n    unsupportedSync: function unsupportedSync(method) {\n      return \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\");\n    },\n    invalidDuplexStream: function invalidDuplexStream() {\n      return \"Must provide a Node.js-style duplex stream.\";\n    },\n    invalidOptions: function invalidOptions(maxEventListeners, shouldSendMetadata) {\n      return \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \", shouldSendMetadata: \").concat(shouldSendMetadata, \" }\");\n    },\n    invalidRequestArgs: function invalidRequestArgs() {\n      return \"Expected a single, non-array, object argument.\";\n    },\n    invalidRequestMethod: function invalidRequestMethod() {\n      return \"'args.method' must be a non-empty string.\";\n    },\n    invalidRequestParams: function invalidRequestParams() {\n      return \"'args.params' must be an object or array if provided.\";\n    },\n    invalidLoggerObject: function invalidLoggerObject() {\n      return \"'args.logger' must be an object if provided.\";\n    },\n    invalidLoggerMethod: function invalidLoggerMethod(method) {\n      return \"'args.logger' must include required method '\".concat(method, \"'.\");\n    }\n  },\n  info: {\n    connected: function connected(chainId) {\n      return \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\");\n    }\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\nvar paymentProviders = configuration.paymentProviders;\n\nvar validatePaymentProvider = function validatePaymentProvider(provider, params) {\n  var errors = {};\n\n  if (!provider) {\n    return {\n      errors: errors,\n      isValid: true\n    };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors: errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n\n  var selectedProvider = paymentProviders[provider];\n  var selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    var requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n\n  if (selectedParams.selectedCryptoCurrency && !selectedProvider.validCryptoCurrencies.includes(selectedParams.selectedCryptoCurrency)) {\n    errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n\n  return {\n    errors: errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\n\nfunction createErrorMiddleware() {\n  return function (req, res, next) {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(function (done) {\n      var error = res.error;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"MetaMask - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n} // resolve response.result or response, reject errors\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  var warningMsg = \"MetaMask: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nvar getPreopenInstanceId = function getPreopenInstanceId() {\n  return Math.random().toString(36).slice(2);\n};\n\nvar getTorusUrl = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(buildEnv, integrity) {\n    var torusUrl, logLevel, version, versionUsed, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Do not change this line\n            version = \"1.24.2\";\n            versionUsed = integrity.version || version;\n            _context.prev = 2;\n\n            if (!((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version)) {\n              _context.next = 13;\n              break;\n            }\n\n            if (configuration.prodTorusUrl) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return get(\"\".concat(configuration.api, \"/latestversion?name=@toruslabs/torus-embed&version=\").concat(version), {}, {\n              useAPIKey: true\n            });\n\n          case 7:\n            response = _context.sent;\n            _context.next = 11;\n            break;\n\n          case 10:\n            response = {\n              data: configuration.prodTorusUrl\n            };\n\n          case 11:\n            versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n            configuration.prodTorusUrl = response.data;\n\n          case 13:\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            log.error(_context.t0, \"unable to fetch latest version\");\n\n          case 18:\n            log.info(\"version used: \", versionUsed);\n            _context.t1 = buildEnv;\n            _context.next = _context.t1 === \"binance\" ? 22 : _context.t1 === \"testing\" ? 25 : _context.t1 === \"lrc\" ? 28 : _context.t1 === \"beta\" ? 31 : _context.t1 === \"development\" ? 34 : 37;\n            break;\n\n          case 22:\n            torusUrl = \"https://binance.tor.us/v\".concat(versionUsed);\n            logLevel = \"info\";\n            return _context.abrupt(\"break\", 40);\n\n          case 25:\n            torusUrl = \"https://testing.tor.us\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 28:\n            torusUrl = \"https://lrc.tor.us\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 31:\n            torusUrl = \"https://beta.tor.us\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 34:\n            torusUrl = \"http://localhost:4050\";\n            logLevel = \"debug\";\n            return _context.abrupt(\"break\", 40);\n\n          case 37:\n            torusUrl = \"https://app.tor.us/v\".concat(versionUsed);\n            logLevel = \"error\";\n            return _context.abrupt(\"break\", 40);\n\n          case 40:\n            return _context.abrupt(\"return\", {\n              torusUrl: torusUrl,\n              logLevel: logLevel\n            });\n\n          case 41:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 15]]);\n  }));\n\n  return function getTorusUrl(_x, _x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar getUserLanguage = function getUserLanguage() {\n  var userLanguage = window.navigator.language || \"en-US\";\n  var userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nvar EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nvar NOOP = function NOOP() {// empty function\n};\n\nvar FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nvar FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nvar FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nfunction storageAvailable(type) {\n  var storage;\n\n  try {\n    storage = window[type];\n    var x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  var dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  var w = 1200;\n  var h = 700;\n  var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  var systemZoom = 1; // No reliable estimate\n\n  var left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  var top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  var features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nvar getRpcPromiseCallback = function getRpcPromiseCallback(resolve, reject) {\n  var unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return function (error, response) {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\n\nvar TorusInpageProvider = /*#__PURE__*/function (_SafeEventEmitter) {\n  _inherits(TorusInpageProvider, _SafeEventEmitter);\n\n  var _super = _createSuper(TorusInpageProvider);\n\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  function TorusInpageProvider(connectionStream) {\n    var _this;\n\n    _classCallCheck(this, TorusInpageProvider);\n\n    var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref5$maxEventListene = _ref5.maxEventListeners,\n        maxEventListeners = _ref5$maxEventListene === void 0 ? 100 : _ref5$maxEventListene,\n        _ref5$shouldSendMetad = _ref5.shouldSendMetadata,\n        shouldSendMetadata = _ref5$shouldSendMetad === void 0 ? true : _ref5$shouldSendMetad,\n        _ref5$jsonRpcStreamNa = _ref5.jsonRpcStreamName,\n        jsonRpcStreamName = _ref5$jsonRpcStreamNa === void 0 ? \"provider\" : _ref5$jsonRpcStreamNa;\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"chainId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"selectedAddress\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rpcEngine\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"networkVersion\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"shouldSendMetadata\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isTorus\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_publicConfigStore\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"tryPreopenHandle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enable\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_state\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_jsonRpcConnection\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    _this.isTorus = true;\n\n    _this.setMaxListeners(maxEventListeners); // private state\n\n\n    _this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    _this.selectedAddress = null;\n    _this.networkVersion = null;\n    _this.chainId = null;\n    _this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    _this._handleAccountsChanged = _this._handleAccountsChanged.bind(_assertThisInitialized(_this));\n    _this._handleChainChanged = _this._handleChainChanged.bind(_assertThisInitialized(_this));\n    _this._handleUnlockStateChanged = _this._handleUnlockStateChanged.bind(_assertThisInitialized(_this));\n    _this._handleConnect = _this._handleConnect.bind(_assertThisInitialized(_this));\n    _this._handleDisconnect = _this._handleDisconnect.bind(_assertThisInitialized(_this));\n    _this._handleStreamDisconnect = _this._handleStreamDisconnect.bind(_assertThisInitialized(_this));\n    _this._sendSync = _this._sendSync.bind(_assertThisInitialized(_this));\n    _this._rpcRequest = _this._rpcRequest.bind(_assertThisInitialized(_this));\n    _this._warnOfDeprecation = _this._warnOfDeprecation.bind(_assertThisInitialized(_this));\n    _this._initializeState = _this._initializeState.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this)); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    var mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, _this._handleStreamDisconnect.bind(_assertThisInitialized(_this), \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    _this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(_this._publicConfigStore), // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(_assertThisInitialized(_this), \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    _this.on(\"connect\", function () {\n      _this._state.isConnected = true;\n    }); // connect to async provider\n\n\n    var jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, _this._handleStreamDisconnect.bind(_assertThisInitialized(_this), \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    var rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    _this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", function (payload) {\n      var method = payload.method,\n          params = payload.params;\n\n      if (method === \"wallet_accountsChanged\") {\n        _this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        _this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        _this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        _this.emit(\"data\", payload); // deprecated\n\n\n        _this.emit(\"notification\", params.result);\n\n        _this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n\n    });\n    return _this;\n  }\n\n  _createClass(TorusInpageProvider, [{\n    key: \"publicConfigStore\",\n    get: function get() {\n      if (!this._sentWarnings.publicConfigStore) {\n        log.warn(messages.warnings.publicConfigStore);\n        this._sentWarnings.publicConfigStore = true;\n      }\n\n      return this._publicConfigStore;\n    }\n    /**\n     * Returns whether the inpage provider is connected to Torus.\n     */\n\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return this._state.isConnected;\n    }\n    /**\n     * Submits an RPC request for the given method, with the given params.\n     * Resolves with the result of the method call, or rejects on error.\n     *\n     * @param args - The RPC request arguments.\n     * @returns A Promise that resolves with the result of the RPC method,\n     * or rejects if an error is encountered.\n     */\n\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(args) {\n        var _this2 = this;\n\n        var method, params;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: messages.errors.invalidRequestArgs(),\n                  data: args\n                });\n\n              case 2:\n                method = args.method, params = args.params;\n\n                if (!(typeof method !== \"string\" || method.length === 0)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: messages.errors.invalidRequestMethod(),\n                  data: args\n                });\n\n              case 5:\n                if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidRequest({\n                  message: messages.errors.invalidRequestParams(),\n                  data: args\n                });\n\n              case 7:\n                return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this2._rpcRequest({\n                    method: method,\n                    params: params\n                  }, getRpcPromiseCallback(resolve, reject));\n                }));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function request(_x3) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n    /**\n     * Submits an RPC request per the given JSON-RPC request object.\n     *\n     * @param payload - The RPC request object.\n     * @param cb - The callback function.\n     */\n\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(payload, callback) {\n      this._rpcRequest(payload, callback);\n    }\n    /**\n     * We override the following event methods so that we can warn consumers\n     * about deprecated events:\n     *   addListener, on, once, prependListener, prependOnceListener\n     */\n\n  }, {\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"addListener\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"on\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"once\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"prependListener\",\n    value: function prependListener(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"prependListener\", this).call(this, eventName, listener);\n    }\n  }, {\n    key: \"prependOnceListener\",\n    value: function prependOnceListener(eventName, listener) {\n      this._warnOfDeprecation(eventName);\n\n      return _get(_getPrototypeOf(TorusInpageProvider.prototype), \"prependOnceListener\", this).call(this, eventName, listener);\n    } // Private Methods\n    //= ===================\n\n    /**\n     * Constructor helper.\n     * Populates initial state by calling 'wallet_getProviderState' and emits\n     * necessary events.\n     */\n\n  }, {\n    key: \"_initializeState\",\n    value: function () {\n      var _initializeState2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$request, accounts, chainId, isUnlocked, networkVersion;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.request({\n                  method: \"wallet_getProviderState\"\n                });\n\n              case 3:\n                _yield$this$request = _context3.sent;\n                accounts = _yield$this$request.accounts;\n                chainId = _yield$this$request.chainId;\n                isUnlocked = _yield$this$request.isUnlocked;\n                networkVersion = _yield$this$request.networkVersion;\n                // indicate that we've connected, for EIP-1193 compliance\n                this.emit(\"connect\", {\n                  chainId: chainId\n                });\n\n                this._handleChainChanged({\n                  chainId: chainId,\n                  networkVersion: networkVersion\n                });\n\n                this._handleUnlockStateChanged({\n                  accounts: accounts,\n                  isUnlocked: isUnlocked\n                });\n\n                this._handleAccountsChanged(accounts);\n\n                _context3.next = 17;\n                break;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](0);\n                log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", _context3.t0);\n\n              case 17:\n                _context3.prev = 17;\n                log.info(\"initialized state\");\n                this._state.initialized = true;\n                this.emit(\"_initialized\");\n                return _context3.finish(17);\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 14, 17, 22]]);\n      }));\n\n      function _initializeState() {\n        return _initializeState2.apply(this, arguments);\n      }\n\n      return _initializeState;\n    }()\n    /**\n     * Internal RPC method. Forwards requests to background via the RPC engine.\n     * Also remap ids inbound and outbound.\n     *\n     * @param payload - The RPC request object.\n     * @param callback - The consumer's callback.\n     * @param isInternal - false - Whether the request is internal.\n     */\n\n  }, {\n    key: \"_rpcRequest\",\n    value: function _rpcRequest(payload, callback) {\n      var _this3 = this;\n\n      var isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var cb = callback;\n      var _payload = payload;\n\n      if (!Array.isArray(_payload)) {\n        if (!_payload.jsonrpc) {\n          _payload.jsonrpc = \"2.0\";\n        }\n\n        if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n          // handle accounts changing\n          cb = function cb(err, res) {\n            _this3._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n\n            callback(err, res);\n          };\n        } else if (_payload.method === \"wallet_getProviderState\") {\n          this._rpcEngine.handle(payload, cb);\n\n          return;\n        }\n      }\n\n      this.tryPreopenHandle(_payload, cb);\n    }\n  }, {\n    key: \"send\",\n    value: function send(methodOrPayload, callbackOrArgs) {\n      var _this4 = this;\n\n      if (!this._sentWarnings.send) {\n        log.warn(messages.warnings.sendDeprecation);\n        this._sentWarnings.send = true;\n      }\n\n      if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n        return new Promise(function (resolve, reject) {\n          try {\n            _this4._rpcRequest({\n              method: methodOrPayload,\n              params: callbackOrArgs\n            }, getRpcPromiseCallback(resolve, reject, false));\n          } catch (error) {\n            reject(error);\n          }\n        });\n      }\n\n      if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n        return this._rpcRequest(methodOrPayload, callbackOrArgs);\n      }\n\n      return this._sendSync(methodOrPayload);\n    }\n    /**\n     * DEPRECATED.\n     * Internal backwards compatibility method, used in send.\n     */\n\n  }, {\n    key: \"_sendSync\",\n    value: function _sendSync(payload) {\n      var result;\n\n      switch (payload.method) {\n        case \"eth_accounts\":\n          result = this.selectedAddress ? [this.selectedAddress] : [];\n          break;\n\n        case \"eth_coinbase\":\n          result = this.selectedAddress || null;\n          break;\n\n        case \"eth_uninstallFilter\":\n          this._rpcRequest(payload, NOOP);\n\n          result = true;\n          break;\n\n        case \"net_version\":\n          result = this.networkVersion || null;\n          break;\n\n        default:\n          throw new Error(messages.errors.unsupportedSync(payload.method));\n      }\n\n      return {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result: result\n      };\n    }\n    /**\n     * When the provider becomes connected, updates internal state and emits\n     * required events. Idempotent.\n     *\n     * @param chainId - The ID of the newly connected chain.\n     * emits MetaMaskInpageProvider#connect\n     */\n\n  }, {\n    key: \"_handleConnect\",\n    value: function _handleConnect(chainId) {\n      if (!this._state.isConnected) {\n        this._state.isConnected = true;\n        this.emit(\"connect\", {\n          chainId: chainId\n        });\n        log.debug(messages.info.connected(chainId));\n      }\n    }\n    /**\n     * When the provider becomes disconnected, updates internal state and emits\n     * required events. Idempotent with respect to the isRecoverable parameter.\n     *\n     * Error codes per the CloseEvent status codes as required by EIP-1193:\n     * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n     *\n     * @param isRecoverable - Whether the disconnection is recoverable.\n     * @param errorMessage - A custom error message.\n     * emits MetaMaskInpageProvider#disconnect\n     */\n\n  }, {\n    key: \"_handleDisconnect\",\n    value: function _handleDisconnect(isRecoverable, errorMessage) {\n      if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n        this._state.isConnected = false;\n        var error;\n\n        if (isRecoverable) {\n          error = new EthereumRpcError(1013, // Try again later\n          errorMessage || messages.errors.disconnected());\n          log.debug(error);\n        } else {\n          error = new EthereumRpcError(1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected());\n          log.error(error);\n          this.chainId = null;\n          this._state.accounts = null;\n          this.selectedAddress = null;\n          this._state.isUnlocked = false;\n          this._state.isPermanentlyDisconnected = true;\n        }\n\n        this.emit(\"disconnect\", error);\n      }\n    }\n    /**\n     * Called when connection is lost to critical streams.\n     *\n     * emits MetamaskInpageProvider#disconnect\n     */\n\n  }, {\n    key: \"_handleStreamDisconnect\",\n    value: function _handleStreamDisconnect(streamName, error) {\n      logStreamDisconnectWarning(streamName, error, this);\n\n      this._handleDisconnect(false, error ? error.message : undefined);\n    }\n    /**\n     * Called when accounts may have changed.\n     */\n\n  }, {\n    key: \"_handleAccountsChanged\",\n    value: function _handleAccountsChanged(accounts) {\n      var isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; // defensive programming\n\n      var finalAccounts = accounts;\n\n      if (!Array.isArray(finalAccounts)) {\n        log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n        finalAccounts = [];\n      }\n\n      var _iterator = _createForOfIteratorHelper(accounts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var account = _step.value;\n\n          if (typeof account !== \"string\") {\n            log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n            finalAccounts = [];\n            break;\n          }\n        } // emit accountsChanged if anything about the accounts array has changed\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (!dequal(this._state.accounts, finalAccounts)) {\n        // we should always have the correct accounts even before eth_accounts\n        // returns, except in cases where isInternal is true\n        if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n          log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n        }\n\n        this._state.accounts = finalAccounts;\n        this.emit(\"accountsChanged\", finalAccounts);\n      } // handle selectedAddress\n\n\n      if (this.selectedAddress !== finalAccounts[0]) {\n        this.selectedAddress = finalAccounts[0] || null;\n      }\n    }\n    /**\n     * Upon receipt of a new chainId and networkVersion, emits corresponding\n     * events and sets relevant public state.\n     * Does nothing if neither the chainId nor the networkVersion are different\n     * from existing values.\n     *\n     * emits MetamaskInpageProvider#chainChanged\n     * @param networkInfo - An object with network info.\n     */\n\n  }, {\n    key: \"_handleChainChanged\",\n    value: function _handleChainChanged() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          chainId = _ref6.chainId,\n          networkVersion = _ref6.networkVersion;\n\n      if (!chainId || !networkVersion) {\n        log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n          chainId: chainId,\n          networkVersion: networkVersion\n        });\n        return;\n      }\n\n      if (networkVersion === \"loading\") {\n        this._handleDisconnect(true);\n      } else {\n        this._handleConnect(chainId);\n\n        if (chainId !== this.chainId) {\n          this.chainId = chainId;\n\n          if (this._state.initialized) {\n            this.emit(\"chainChanged\", this.chainId);\n          }\n        }\n      }\n    }\n    /**\n     * Upon receipt of a new isUnlocked state, sets relevant public state.\n     * Calls the accounts changed handler with the received accounts, or an empty\n     * array.\n     *\n     * Does nothing if the received value is equal to the existing value.\n     * There are no lock/unlock events.\n     *\n     * @param opts - Options bag.\n     */\n\n  }, {\n    key: \"_handleUnlockStateChanged\",\n    value: function _handleUnlockStateChanged() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          accounts = _ref7.accounts,\n          isUnlocked = _ref7.isUnlocked;\n\n      if (typeof isUnlocked !== \"boolean\") {\n        log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n          isUnlocked: isUnlocked\n        });\n        return;\n      }\n\n      if (isUnlocked !== this._state.isUnlocked) {\n        this._state.isUnlocked = isUnlocked;\n\n        this._handleAccountsChanged(accounts || []);\n      }\n    }\n    /**\n     * Warns of deprecation for the given event, if applicable.\n     */\n\n  }, {\n    key: \"_warnOfDeprecation\",\n    value: function _warnOfDeprecation(eventName) {\n      if (this._sentWarnings.events[eventName] === false) {\n        log.warn(messages.warnings.events[eventName]);\n        this._sentWarnings.events[eventName] = true;\n      }\n    }\n  }]);\n\n  return TorusInpageProvider;\n}(SafeEventEmitter);\n\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nvar defaults = function defaults(options) {\n  return {\n    algorithms: options.algorithms || [\"sha256\"],\n    delimiter: options.delimiter || \" \",\n    full: options.full || false\n  };\n}; // Generate list of hashes\n\n\nvar hashes = function hashes(options, data) {\n  var internalHashes = {};\n  options.algorithms.forEach(function (algorithm) {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\n\nvar integrity = function integrity(options, sri) {\n  var output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(function (algorithm) {\n    return \"\".concat(algorithm, \"-\").concat(sri.hashes[algorithm]);\n  }).join(options.delimiter);\n  return output;\n};\n\nvar main = function main(options, data) {\n  // Defaults\n  var finalOptions = defaults(options);\n  var sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nvar PopupHandler = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(PopupHandler, _EventEmitter);\n\n  var _super2 = _createSuper(PopupHandler);\n\n  function PopupHandler(_ref) {\n    var _this5;\n\n    _classCallCheck(this, PopupHandler);\n\n    var url = _ref.url,\n        target = _ref.target,\n        features = _ref.features;\n    _this5 = _super2.call(this);\n\n    _defineProperty(_assertThisInitialized(_this5), \"url\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"target\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"features\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"windowTimer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"iClosedWindow\", void 0);\n\n    _this5.url = url;\n    _this5.target = target || \"_blank\";\n    _this5.features = features || getPopupFeatures();\n    _this5.window = undefined;\n    _this5.windowTimer = undefined;\n    _this5.iClosedWindow = false;\n\n    _this5._setupTimer();\n\n    return _this5;\n  }\n\n  _createClass(PopupHandler, [{\n    key: \"_setupTimer\",\n    value: function _setupTimer() {\n      var _this6 = this;\n\n      this.windowTimer = Number(setInterval(function () {\n        if (_this6.window && _this6.window.closed) {\n          clearInterval(_this6.windowTimer);\n\n          if (!_this6.iClosedWindow) {\n            _this6.emit(\"close\");\n          }\n\n          _this6.iClosedWindow = false;\n          _this6.window = undefined;\n        }\n\n        if (_this6.window === undefined) clearInterval(_this6.windowTimer);\n      }, 500));\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      var _this$window;\n\n      this.window = window.open(this.url.href, this.target, this.features);\n      if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n      return Promise.resolve();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.iClosedWindow = true;\n      if (this.window) this.window.close();\n    }\n  }, {\n    key: \"redirect\",\n    value: function redirect(locationReplaceOnRedirect) {\n      if (locationReplaceOnRedirect) {\n        window.location.replace(this.url.href);\n      } else {\n        window.location.href = this.url.href;\n      }\n    }\n  }]);\n\n  return PopupHandler;\n}(EventEmitter);\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\n\nfunction imgExists(url) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var img = document.createElement(\"img\");\n\n      img.onload = function () {\n        return resolve(true);\n      };\n\n      img.onerror = function () {\n        return resolve(false);\n      };\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nvar getSiteName = function getSiteName(window) {\n  var document = window.document;\n  var siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  var metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nfunction getSiteIcon(_x4) {\n  return _getSiteIcon.apply(this, arguments);\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nfunction _getSiteIcon() {\n  _getSiteIcon = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(window) {\n    var document, icon;\n    return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            document = window.document; // Use the site's favicon if it exists\n\n            icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n            _context14.t0 = icon;\n\n            if (!_context14.t0) {\n              _context14.next = 7;\n              break;\n            }\n\n            _context14.next = 6;\n            return imgExists(icon.href);\n\n          case 6:\n            _context14.t0 = _context14.sent;\n\n          case 7:\n            if (!_context14.t0) {\n              _context14.next = 9;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", icon.href);\n\n          case 9:\n            // Search through available icons in no particular order\n            icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(function (_icon) {\n              return Boolean(_icon.href);\n            });\n            _context14.t1 = icon;\n\n            if (!_context14.t1) {\n              _context14.next = 15;\n              break;\n            }\n\n            _context14.next = 14;\n            return imgExists(icon.href);\n\n          case 14:\n            _context14.t1 = _context14.sent;\n\n          case 15:\n            if (!_context14.t1) {\n              _context14.next = 17;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", icon.href);\n\n          case 17:\n            return _context14.abrupt(\"return\", null);\n\n          case 18:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _getSiteIcon.apply(this, arguments);\n}\n\nvar getSiteMetadata = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.t0 = getSiteName(window);\n            _context4.next = 3;\n            return getSiteIcon(window);\n\n          case 3:\n            _context4.t1 = _context4.sent;\n            return _context4.abrupt(\"return\", {\n              name: _context4.t0,\n              icon: _context4.t1\n            });\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getSiteMetadata() {\n    return _ref8.apply(this, arguments);\n  };\n}();\n/**\n * Sends site metadata over an RPC request.\n */\n\n\nfunction sendSiteMetadata(_x5) {\n  return _sendSiteMetadata.apply(this, arguments);\n}\n\nfunction _sendSiteMetadata() {\n  _sendSiteMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(engine) {\n    var domainMetadata;\n    return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.prev = 0;\n            _context15.next = 3;\n            return getSiteMetadata();\n\n          case 3:\n            domainMetadata = _context15.sent;\n            // call engine.handle directly to avoid normal RPC request handling\n            engine.handle({\n              jsonrpc: \"2.0\",\n              id: getPreopenInstanceId(),\n              method: \"wallet_sendDomainMetadata\",\n              params: domainMetadata\n            }, NOOP);\n            _context15.next = 10;\n            break;\n\n          case 7:\n            _context15.prev = 7;\n            _context15.t0 = _context15[\"catch\"](0);\n            log.error({\n              message: messages.errors.sendSiteMetadata(),\n              originalError: _context15.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15, null, [[0, 7]]);\n  }));\n  return _sendSiteMetadata.apply(this, arguments);\n}\n\nvar _excluded = [\"host\", \"chainId\", \"networkName\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar defaultVerifiers = (_defaultVerifiers = {}, _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.GOOGLE, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.FACEBOOK, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.REDDIT, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.TWITCH, true), _defineProperty2(_defaultVerifiers, LOGIN_PROVIDER.DISCORD, true), _defaultVerifiers);\nvar iframeIntegrity = \"sha384-WuTHIBcBak4hrn9/SJtezbyCEwkF5/CbLE6E5nPNN371k2bJgIBJ9VcFu0fW8RUC\";\nvar expectedCacheControlHeader = \"max-age=3600\";\nvar UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\"];\nvar isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(function () {\n  var _preLoadIframe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var torusIframeHtml, _yield$getTorusUrl, torusUrl;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n\n            if (!(typeof document === \"undefined\")) {\n              _context5.next = 3;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 3:\n            torusIframeHtml = document.createElement(\"link\");\n            _context5.next = 6;\n            return getTorusUrl(\"production\", {\n              check: false,\n              hash: iframeIntegrity,\n              version: \"\"\n            });\n\n          case 6:\n            _yield$getTorusUrl = _context5.sent;\n            torusUrl = _yield$getTorusUrl.torusUrl;\n            torusIframeHtml.href = \"\".concat(torusUrl, \"/popup\");\n            torusIframeHtml.crossOrigin = \"anonymous\";\n            torusIframeHtml.type = \"text/html\";\n            torusIframeHtml.rel = \"prefetch\";\n\n            if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n              if (torusIframeHtml.relList.supports(\"prefetch\")) {\n                document.head.appendChild(torusIframeHtml);\n              }\n            }\n\n            _context5.next = 18;\n            break;\n\n          case 15:\n            _context5.prev = 15;\n            _context5.t0 = _context5[\"catch\"](0);\n            log.warn(_context5.t0);\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 15]]);\n  }));\n\n  function preLoadIframe() {\n    return _preLoadIframe.apply(this, arguments);\n  }\n\n  return preLoadIframe;\n})()();\n\nvar Torus = /*#__PURE__*/function () {\n  function Torus() {\n    _classCallCheck(this, Torus);\n\n    var _ref9 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref9$buttonPosition = _ref9.buttonPosition,\n        buttonPosition = _ref9$buttonPosition === void 0 ? BUTTON_POSITION.BOTTOM_LEFT : _ref9$buttonPosition,\n        _ref9$modalZIndex = _ref9.modalZIndex,\n        modalZIndex = _ref9$modalZIndex === void 0 ? 99999 : _ref9$modalZIndex,\n        _ref9$apiKey = _ref9.apiKey,\n        apiKey = _ref9$apiKey === void 0 ? \"torus-default\" : _ref9$apiKey;\n\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    _defineProperty(this, \"isLoggedIn\", void 0);\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n\n    _defineProperty(this, \"torusJs\", void 0);\n\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n\n    _defineProperty(this, \"whiteLabel\", void 0);\n\n    _defineProperty(this, \"requestedVerifier\", void 0);\n\n    _defineProperty(this, \"currentVerifier\", void 0);\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"ethereum\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationMux\", void 0);\n\n    _defineProperty(this, \"isLoginCallback\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n\n    _defineProperty(this, \"loginHint\", \"\");\n\n    _defineProperty(this, \"useWalletConnect\", void 0);\n\n    this.buttonPosition = buttonPosition;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\"\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n    this.dappStorageKey = \"\";\n  }\n\n  _createClass(Torus, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _this7 = this;\n\n        var _ref10,\n            _ref10$buildEnv,\n            buildEnv,\n            _ref10$enableLogging,\n            enableLogging,\n            _ref10$enabledVerifie,\n            enabledVerifiers,\n            _ref10$network,\n            network,\n            _ref10$loginConfig,\n            loginConfig,\n            _ref10$showTorusButto,\n            showTorusButton,\n            _ref10$integrity,\n            integrity,\n            whiteLabel,\n            _ref10$skipTKey,\n            skipTKey,\n            _ref10$useLocalStorag,\n            useLocalStorage,\n            _ref10$useWalletConne,\n            useWalletConnect,\n            _yield$getTorusUrl2,\n            torusUrl,\n            logLevel,\n            dappStorageKey,\n            localStorageKey,\n            storedKey,\n            generatedKey,\n            torusIframeUrl,\n            link,\n            _ref11,\n            _ref11$defaultLanguag,\n            defaultLanguage,\n            _ref11$customTranslat,\n            customTranslations,\n            mergedTranslations,\n            languageTranslations,\n            handleSetup,\n            fetchUrl,\n            resp,\n            response,\n            calculatedIntegrity,\n            _args8 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _ref10 = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {}, _ref10$buildEnv = _ref10.buildEnv, buildEnv = _ref10$buildEnv === void 0 ? TORUS_BUILD_ENV.PRODUCTION : _ref10$buildEnv, _ref10$enableLogging = _ref10.enableLogging, enableLogging = _ref10$enableLogging === void 0 ? false : _ref10$enableLogging, _ref10$enabledVerifie = _ref10.enabledVerifiers, enabledVerifiers = _ref10$enabledVerifie === void 0 ? defaultVerifiers : _ref10$enabledVerifie, _ref10$network = _ref10.network, network = _ref10$network === void 0 ? {\n                  host: \"mainnet\",\n                  chainId: null,\n                  networkName: \"\",\n                  blockExplorer: \"\",\n                  ticker: \"\",\n                  tickerName: \"\"\n                } : _ref10$network, _ref10$loginConfig = _ref10.loginConfig, loginConfig = _ref10$loginConfig === void 0 ? {} : _ref10$loginConfig, _ref10$showTorusButto = _ref10.showTorusButton, showTorusButton = _ref10$showTorusButto === void 0 ? true : _ref10$showTorusButto, _ref10$integrity = _ref10.integrity, integrity = _ref10$integrity === void 0 ? {\n                  check: false,\n                  hash: iframeIntegrity,\n                  version: \"\"\n                } : _ref10$integrity, whiteLabel = _ref10.whiteLabel, _ref10$skipTKey = _ref10.skipTKey, skipTKey = _ref10$skipTKey === void 0 ? false : _ref10$skipTKey, _ref10$useLocalStorag = _ref10.useLocalStorage, useLocalStorage = _ref10$useLocalStorag === void 0 ? false : _ref10$useLocalStorag, _ref10$useWalletConne = _ref10.useWalletConnect, useWalletConnect = _ref10$useWalletConne === void 0 ? false : _ref10$useWalletConne;\n\n                if (!this.isInitialized) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Already initialized\");\n\n              case 3:\n                _context8.next = 5;\n                return getTorusUrl(buildEnv, integrity);\n\n              case 5:\n                _yield$getTorusUrl2 = _context8.sent;\n                torusUrl = _yield$getTorusUrl2.torusUrl;\n                logLevel = _yield$getTorusUrl2.logLevel;\n                log.info(torusUrl, \"url loaded\");\n                this.torusUrl = torusUrl;\n                this.whiteLabel = whiteLabel;\n                this.useWalletConnect = useWalletConnect;\n                log.setDefaultLevel(logLevel);\n                if (enableLogging) log.enableAll();else log.disableAll();\n                this.torusWidgetVisibility = showTorusButton;\n                dappStorageKey = \"\";\n\n                if (isLocalStorageAvailable && useLocalStorage) {\n                  localStorageKey = \"\".concat(configuration.localStorageKeyPrefix).concat(window.location.hostname);\n                  storedKey = window.localStorage.getItem(localStorageKey);\n                  if (storedKey) dappStorageKey = storedKey;else {\n                    generatedKey = \"torus-app-\".concat(getPreopenInstanceId());\n                    window.localStorage.setItem(localStorageKey, generatedKey);\n                    dappStorageKey = generatedKey;\n                  }\n                }\n\n                this.dappStorageKey = dappStorageKey;\n                torusIframeUrl = new URL(torusUrl);\n                if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n\n                if (dappStorageKey) {\n                  torusIframeUrl.hash = \"#dappStorageKey=\".concat(dappStorageKey);\n                } // Iframe code\n\n\n                this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        allow=\".concat(useWalletConnect ? \"camera\" : \"\", \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex, \"\\\"\\n      ></iframe>\"));\n                this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n                this.torusAlertContainer.style.display = \"none\";\n                this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n                link = window.document.createElement(\"link\");\n                link.setAttribute(\"rel\", \"stylesheet\");\n                link.setAttribute(\"type\", \"text/css\");\n                link.setAttribute(\"href\", \"\".concat(torusUrl, \"/css/widget.css\"));\n                this.styleLink = link;\n                _ref11 = this.whiteLabel || {}, _ref11$defaultLanguag = _ref11.defaultLanguage, defaultLanguage = _ref11$defaultLanguag === void 0 ? getUserLanguage() : _ref11$defaultLanguag, _ref11$customTranslat = _ref11.customTranslations, customTranslations = _ref11$customTranslat === void 0 ? {} : _ref11$customTranslat;\n                mergedTranslations = deepmerge(configuration.translations, customTranslations);\n                languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n                this.embedTranslations = languageTranslations.embed;\n\n                handleSetup = /*#__PURE__*/function () {\n                  var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n                    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                      while (1) {\n                        switch (_context7.prev = _context7.next) {\n                          case 0:\n                            _context7.next = 2;\n                            return documentReady();\n\n                          case 2:\n                            return _context7.abrupt(\"return\", new Promise(function (resolve, reject) {\n                              _this7.torusIframe.onload = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                                var initStream;\n                                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                                  while (1) {\n                                    switch (_context6.prev = _context6.next) {\n                                      case 0:\n                                        // only do this if iframe is not full screen\n                                        _this7._setupWeb3();\n\n                                        initStream = _this7.communicationMux.getStream(\"init_stream\");\n                                        initStream.on(\"data\", function (chunk) {\n                                          var name = chunk.name,\n                                              data = chunk.data,\n                                              error = chunk.error;\n\n                                          if (name === \"init_complete\" && data.success) {\n                                            // resolve promise\n                                            _this7.isInitialized = true;\n\n                                            _this7._displayIframe(_this7.isIframeFullScreen);\n\n                                            resolve(undefined);\n                                          } else if (error) {\n                                            reject(new Error(error));\n                                          }\n                                        });\n                                        initStream.write({\n                                          name: \"init_stream\",\n                                          data: {\n                                            enabledVerifiers: enabledVerifiers,\n                                            loginConfig: loginConfig,\n                                            whiteLabel: _this7.whiteLabel,\n                                            buttonPosition: _this7.buttonPosition,\n                                            torusWidgetVisibility: _this7.torusWidgetVisibility,\n                                            apiKey: _this7.apiKey,\n                                            skipTKey: skipTKey,\n                                            network: network\n                                          }\n                                        });\n\n                                      case 4:\n                                      case \"end\":\n                                        return _context6.stop();\n                                    }\n                                  }\n                                }, _callee6);\n                              }));\n                              window.document.head.appendChild(_this7.styleLink);\n                              window.document.body.appendChild(_this7.torusIframe);\n                              window.document.body.appendChild(_this7.torusAlertContainer);\n                            }));\n\n                          case 3:\n                          case \"end\":\n                            return _context7.stop();\n                        }\n                      }\n                    }, _callee7);\n                  }));\n\n                  return function handleSetup() {\n                    return _ref12.apply(this, arguments);\n                  };\n                }();\n\n                if (!(buildEnv === \"production\" && integrity.check)) {\n                  _context8.next = 56;\n                  break;\n                }\n\n                // hacky solution to check for iframe integrity\n                fetchUrl = \"\".concat(torusUrl, \"/popup\");\n                _context8.next = 39;\n                return fetch(fetchUrl, {\n                  cache: \"reload\"\n                });\n\n              case 39:\n                resp = _context8.sent;\n\n                if (!(resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader)) {\n                  _context8.next = 42;\n                  break;\n                }\n\n                throw new Error(\"Unexpected Cache-Control headers, got \".concat(resp.headers.get(\"Cache-Control\")));\n\n              case 42:\n                _context8.next = 44;\n                return resp.text();\n\n              case 44:\n                response = _context8.sent;\n                calculatedIntegrity = main({\n                  algorithms: [\"sha384\"]\n                }, response);\n                log.info(calculatedIntegrity, \"integrity\");\n\n                if (!(calculatedIntegrity === integrity.hash)) {\n                  _context8.next = 52;\n                  break;\n                }\n\n                _context8.next = 50;\n                return handleSetup();\n\n              case 50:\n                _context8.next = 54;\n                break;\n\n              case 52:\n                this.clearInit();\n                throw new Error(\"Integrity check failed\");\n\n              case 54:\n                _context8.next = 58;\n                break;\n\n              case 56:\n                _context8.next = 58;\n                return handleSetup();\n\n              case 58:\n                return _context8.abrupt(\"return\", undefined);\n\n              case 59:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"login\",\n    value: function login() {\n      var _ref14 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref14$verifier = _ref14.verifier,\n          verifier = _ref14$verifier === void 0 ? \"\" : _ref14$verifier,\n          _ref14$login_hint = _ref14.login_hint,\n          loginHint = _ref14$login_hint === void 0 ? \"\" : _ref14$login_hint;\n\n      if (!this.isInitialized) throw new Error(\"Call init() first\");\n      this.requestedVerifier = verifier;\n      this.loginHint = loginHint;\n      return this.ethereum.enable();\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this8 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this8.isLoggedIn) {\n          reject(new Error(\"User has not logged in yet\"));\n          return;\n        }\n\n        var logOutStream = _this8.communicationMux.getStream(\"logout\");\n\n        logOutStream.write({\n          name: \"logOut\"\n        });\n\n        var statusStream = _this8.communicationMux.getStream(\"status\");\n\n        var statusStreamHandler = function statusStreamHandler(status) {\n          if (!status.loggedIn) {\n            _this8.isLoggedIn = false;\n            _this8.currentVerifier = \"\";\n            _this8.requestedVerifier = \"\";\n            resolve();\n          } else reject(new Error(\"Some Error Occured\"));\n        };\n\n        handleStream(statusStream, \"data\", statusStreamHandler);\n      });\n    }\n  }, {\n    key: \"cleanUp\",\n    value: function () {\n      var _cleanUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!this.isLoggedIn) {\n                  _context9.next = 3;\n                  break;\n                }\n\n                _context9.next = 3;\n                return this.logout();\n\n              case 3:\n                this.clearInit();\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function cleanUp() {\n        return _cleanUp.apply(this, arguments);\n      }\n\n      return cleanUp;\n    }()\n  }, {\n    key: \"clearInit\",\n    value: function clearInit() {\n      function isElement(element) {\n        return element instanceof Element || element instanceof HTMLDocument;\n      }\n\n      if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n        this.styleLink.remove();\n        this.styleLink = undefined;\n      }\n\n      if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n        this.torusIframe.remove();\n        this.torusIframe = undefined;\n      }\n\n      if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n        this.torusAlert = undefined;\n        this.torusAlertContainer.remove();\n        this.torusAlertContainer = undefined;\n      }\n\n      this.isInitialized = false;\n    }\n  }, {\n    key: \"hideTorusButton\",\n    value: function hideTorusButton() {\n      this.torusWidgetVisibility = false;\n\n      this._sendWidgetVisibilityStatus(false);\n\n      this._displayIframe();\n    }\n  }, {\n    key: \"showTorusButton\",\n    value: function showTorusButton() {\n      this.torusWidgetVisibility = true;\n\n      this._sendWidgetVisibilityStatus(true);\n\n      this._displayIframe();\n    }\n  }, {\n    key: \"setProvider\",\n    value: function setProvider() {\n      var _this9 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _ref$host = _ref.host,\n          host = _ref$host === void 0 ? \"mainnet\" : _ref$host,\n          _ref$chainId = _ref.chainId,\n          chainId = _ref$chainId === void 0 ? null : _ref$chainId,\n          _ref$networkName = _ref.networkName,\n          networkName = _ref$networkName === void 0 ? \"\" : _ref$networkName,\n          rest = _objectWithoutProperties(_ref, _excluded);\n\n      return new Promise(function (resolve, reject) {\n        var providerChangeStream = _this9.communicationMux.getStream(\"provider_change\");\n\n        var handler = function handler(chunk) {\n          var _chunk$data = chunk.data,\n              err = _chunk$data.err,\n              success = _chunk$data.success;\n          log.info(chunk);\n\n          if (err) {\n            reject(err);\n          } else if (success) {\n            resolve();\n          } else reject(new Error(\"some error occured\"));\n        };\n\n        handleStream(providerChangeStream, \"data\", handler);\n        var preopenInstanceId = getPreopenInstanceId();\n\n        _this9._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_PROVIDER_CHANGE_WINDOW\n        });\n\n        providerChangeStream.write({\n          name: \"show_provider_change\",\n          data: {\n            network: _objectSpread({\n              host: host,\n              chainId: chainId,\n              networkName: networkName\n            }, rest),\n            preopenInstanceId: preopenInstanceId,\n            override: false\n          }\n        });\n      });\n    }\n  }, {\n    key: \"showWallet\",\n    value: function showWallet(path) {\n      var _this10 = this;\n\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n      var finalPath = path ? \"/\".concat(path) : \"\";\n      showWalletStream.write({\n        name: \"show_wallet\",\n        data: {\n          path: finalPath\n        }\n      });\n\n      var showWalletHandler = function showWalletHandler(chunk) {\n        if (chunk.name === \"show_wallet_instance\") {\n          // Let the error propogate up (hence, no try catch)\n          var instanceId = chunk.data.instanceId;\n          var finalUrl = new URL(\"\".concat(_this10.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n          finalUrl.searchParams.append(\"integrity\", \"true\");\n          finalUrl.searchParams.append(\"instanceId\", instanceId);\n          Object.keys(params).forEach(function (x) {\n            finalUrl.searchParams.append(x, params[x]);\n          });\n\n          if (_this10.dappStorageKey) {\n            finalUrl.hash = \"#dappStorageKey=\".concat(_this10.dappStorageKey);\n          }\n\n          var walletWindow = new PopupHandler({\n            url: finalUrl,\n            features: FEATURES_DEFAULT_WALLET_WINDOW\n          });\n          walletWindow.open();\n        }\n      };\n\n      handleStream(showWalletStream, \"data\", showWalletHandler);\n    }\n  }, {\n    key: \"getPublicAddress\",\n    value: function () {\n      var _getPublicAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(_ref2) {\n        var verifier, verifierId, _ref2$isExtended, isExtended, nodeDetails, endpoints, torusNodePubs, walletVerifier, openloginVerifier, existingV1User, v2User, newV2User;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                verifier = _ref2.verifier, verifierId = _ref2.verifierId, _ref2$isExtended = _ref2.isExtended, isExtended = _ref2$isExtended === void 0 ? false : _ref2$isExtended;\n\n                if (!(!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier])) {\n                  _context10.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Unsupported verifier\");\n\n              case 3:\n                _context10.next = 5;\n                return this.nodeDetailManager.getNodeDetails({\n                  verifier: verifier,\n                  verifierId: verifierId\n                });\n\n              case 5:\n                nodeDetails = _context10.sent;\n                endpoints = nodeDetails.torusNodeEndpoints;\n                torusNodePubs = nodeDetails.torusNodePub;\n                walletVerifier = verifier;\n                openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n                _context10.prev = 10;\n                _context10.next = 13;\n                return this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n                  verifier: walletVerifier,\n                  verifierId: verifierId\n                });\n\n              case 13:\n                existingV1User = _context10.sent;\n\n                if (!(existingV1User.typeOfUser === \"v1\")) {\n                  _context10.next = 18;\n                  break;\n                }\n\n                if (isExtended) {\n                  _context10.next = 17;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", existingV1User.address);\n\n              case 17:\n                return _context10.abrupt(\"return\", existingV1User);\n\n              case 18:\n                _context10.next = 20;\n                return this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n                  verifier: openloginVerifier,\n                  verifierId: verifierId\n                }, true);\n\n              case 20:\n                v2User = _context10.sent;\n\n                if (isExtended) {\n                  _context10.next = 23;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", v2User.address);\n\n              case 23:\n                return _context10.abrupt(\"return\", v2User);\n\n              case 26:\n                _context10.prev = 26;\n                _context10.t0 = _context10[\"catch\"](10);\n\n                if (!(_context10.t0 !== null && _context10.t0 !== void 0 && _context10.t0.message.includes(\"Verifier + VerifierID has not yet been assigned\"))) {\n                  _context10.next = 35;\n                  break;\n                }\n\n                _context10.next = 31;\n                return this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n                  verifier: openloginVerifier,\n                  verifierId: verifierId\n                }, true);\n\n              case 31:\n                newV2User = _context10.sent;\n\n                if (isExtended) {\n                  _context10.next = 34;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", newV2User.address);\n\n              case 34:\n                return _context10.abrupt(\"return\", newV2User);\n\n              case 35:\n                throw _context10.t0;\n\n              case 36:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[10, 26]]);\n      }));\n\n      function getPublicAddress(_x6) {\n        return _getPublicAddress.apply(this, arguments);\n      }\n\n      return getPublicAddress;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo(message) {\n      var _this11 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this11.isLoggedIn) {\n          var userInfoAccessStream = _this11.communicationMux.getStream(\"user_info_access\");\n\n          userInfoAccessStream.write({\n            name: \"user_info_access_request\"\n          });\n\n          var userInfoAccessHandler = function userInfoAccessHandler(chunk) {\n            var name = chunk.name,\n                _chunk$data2 = chunk.data,\n                approved = _chunk$data2.approved,\n                payload = _chunk$data2.payload,\n                rejected = _chunk$data2.rejected,\n                newRequest = _chunk$data2.newRequest;\n\n            if (name === \"user_info_access_response\") {\n              if (approved) {\n                resolve(payload);\n              } else if (rejected) {\n                reject(new Error(\"User rejected the request\"));\n              } else if (newRequest) {\n                var userInfoStream = _this11.communicationMux.getStream(\"user_info\");\n\n                var userInfoHandler = function userInfoHandler(handlerChunk) {\n                  if (handlerChunk.name === \"user_info_response\") {\n                    if (handlerChunk.data.approved) {\n                      resolve(handlerChunk.data.payload);\n                    } else {\n                      reject(new Error(\"User rejected the request\"));\n                    }\n                  }\n                };\n\n                handleStream(userInfoStream, \"data\", userInfoHandler);\n                var preopenInstanceId = getPreopenInstanceId();\n\n                _this11._handleWindow(preopenInstanceId, {\n                  target: \"_blank\",\n                  features: FEATURES_PROVIDER_CHANGE_WINDOW\n                });\n\n                userInfoStream.write({\n                  name: \"user_info_request\",\n                  data: {\n                    message: message,\n                    preopenInstanceId: preopenInstanceId\n                  }\n                });\n              }\n            }\n          };\n\n          handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n        } else reject(new Error(\"User has not logged in yet\"));\n      });\n    }\n  }, {\n    key: \"initiateTopup\",\n    value: function initiateTopup(provider, params) {\n      var _this12 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this12.isInitialized) {\n          var _validatePaymentProvi = validatePaymentProvider(provider, params),\n              errors = _validatePaymentProvi.errors,\n              isValid = _validatePaymentProvi.isValid;\n\n          if (!isValid) {\n            reject(new Error(JSON.stringify(errors)));\n            return;\n          }\n\n          var topupStream = _this12.communicationMux.getStream(\"topup\");\n\n          var topupHandler = function topupHandler(chunk) {\n            if (chunk.name === \"topup_response\") {\n              if (chunk.data.success) {\n                resolve(chunk.data.success);\n              } else {\n                reject(new Error(chunk.data.error));\n              }\n            }\n          };\n\n          handleStream(topupStream, \"data\", topupHandler);\n          var preopenInstanceId = getPreopenInstanceId();\n\n          _this12._handleWindow(preopenInstanceId);\n\n          topupStream.write({\n            name: \"topup_request\",\n            data: {\n              provider: provider,\n              params: params,\n              preopenInstanceId: preopenInstanceId\n            }\n          });\n        } else reject(new Error(\"Torus is not initialized yet\"));\n      });\n    }\n  }, {\n    key: \"loginWithPrivateKey\",\n    value: function () {\n      var _loginWithPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(loginParams) {\n        var _this13 = this;\n\n        var privateKey, userInfo;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                privateKey = loginParams.privateKey, userInfo = loginParams.userInfo;\n                return _context11.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (_this13.isInitialized) {\n                    if (Buffer.from(privateKey, \"hex\").length !== 32) {\n                      reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n                      return;\n                    }\n\n                    var loginPrivKeyStream = _this13.communicationMux.getStream(\"login_with_private_key\");\n\n                    var loginHandler = function loginHandler(chunk) {\n                      if (chunk.name === \"login_with_private_key_response\") {\n                        if (chunk.data.success) {\n                          resolve(chunk.data.success);\n                        } else {\n                          reject(new Error(chunk.data.error));\n                        }\n                      }\n                    };\n\n                    handleStream(loginPrivKeyStream, \"data\", loginHandler);\n                    loginPrivKeyStream.write({\n                      name: \"login_with_private_key_request\",\n                      data: {\n                        privateKey: privateKey,\n                        userInfo: userInfo\n                      }\n                    });\n                  } else reject(new Error(\"Torus is not initialized yet\"));\n                }));\n\n              case 2:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      function loginWithPrivateKey(_x7) {\n        return _loginWithPrivateKey.apply(this, arguments);\n      }\n\n      return loginWithPrivateKey;\n    }()\n  }, {\n    key: \"showWalletConnectScanner\",\n    value: function () {\n      var _showWalletConnectScanner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        var _this14 = this;\n\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (this.useWalletConnect) {\n                  _context12.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n\n              case 2:\n                return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  if (_this14.isLoggedIn) {\n                    var walletConnectStream = _this14.communicationMux.getStream(\"wallet_connect_stream\");\n\n                    var walletConnectHandler = function walletConnectHandler(chunk) {\n                      if (chunk.name === \"wallet_connect_stream_res\") {\n                        if (chunk.data.success) {\n                          resolve(chunk.data.success);\n                        } else {\n                          reject(new Error(chunk.data.error));\n                        }\n\n                        _this14._displayIframe();\n                      }\n                    };\n\n                    handleStream(walletConnectStream, \"data\", walletConnectHandler);\n                    walletConnectStream.write({\n                      name: \"wallet_connect_stream_req\"\n                    });\n\n                    _this14._displayIframe(true);\n                  } else reject(new Error(\"User has not logged in yet\"));\n                }));\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function showWalletConnectScanner() {\n        return _showWalletConnectScanner.apply(this, arguments);\n      }\n\n      return showWalletConnectScanner;\n    }()\n  }, {\n    key: \"_handleWindow\",\n    value: function _handleWindow(preopenInstanceId) {\n      var _ref15 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          url = _ref15.url,\n          target = _ref15.target,\n          features = _ref15.features;\n\n      if (preopenInstanceId) {\n        var windowStream = this.communicationMux.getStream(\"window\");\n        var finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?preopenInstanceId=\").concat(preopenInstanceId));\n\n        if (this.dappStorageKey) {\n          // If multiple instances, it returns the first one\n          if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n        }\n\n        var handledWindow = new PopupHandler({\n          url: finalUrl,\n          target: target,\n          features: features\n        });\n        handledWindow.open();\n\n        if (!handledWindow.window) {\n          this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n\n          return;\n        }\n\n        windowStream.write({\n          name: \"opened_window\",\n          data: {\n            preopenInstanceId: preopenInstanceId\n          }\n        });\n\n        var closeHandler = function closeHandler(_ref3) {\n          var receivedId = _ref3.preopenInstanceId,\n              close = _ref3.close;\n\n          if (receivedId === preopenInstanceId && close) {\n            handledWindow.close();\n            windowStream.removeListener(\"data\", closeHandler);\n          }\n        };\n\n        windowStream.on(\"data\", closeHandler);\n        handledWindow.once(\"close\", function () {\n          windowStream.write({\n            data: {\n              preopenInstanceId: preopenInstanceId,\n              closed: true\n            }\n          });\n          windowStream.removeListener(\"data\", closeHandler);\n        });\n      }\n    }\n  }, {\n    key: \"_setEmbedWhiteLabel\",\n    value: function _setEmbedWhiteLabel(element) {\n      // Set whitelabel\n      var _ref16 = this.whiteLabel || {},\n          theme = _ref16.theme;\n\n      if (theme) {\n        var _theme$isDark = theme.isDark,\n            isDark = _theme$isDark === void 0 ? false : _theme$isDark,\n            _theme$colors = theme.colors,\n            colors = _theme$colors === void 0 ? {} : _theme$colors;\n        if (isDark) element.classList.add(\"torus-dark\");\n        if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n        if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n      }\n    }\n  }, {\n    key: \"_getLogoUrl\",\n    value: function _getLogoUrl() {\n      var _this$whiteLabel, _this$whiteLabel$them;\n\n      var logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n\n      if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n        var _this$whiteLabel2;\n\n        logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n      } else {\n        var _this$whiteLabel3;\n\n        logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n      }\n\n      return logoUrl;\n    }\n  }, {\n    key: \"_sendWidgetVisibilityStatus\",\n    value: function _sendWidgetVisibilityStatus(status) {\n      var torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n      torusWidgetVisibilityStream.write({\n        data: status\n      });\n    }\n  }, {\n    key: \"_displayIframe\",\n    value: function _displayIframe() {\n      var isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var style = {}; // set phase\n\n      if (!isFull) {\n        style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n        style.height = \"70px\";\n        style.width = \"70px\";\n\n        switch (this.buttonPosition) {\n          case BUTTON_POSITION.TOP_LEFT:\n            style.top = \"0px\";\n            style.left = \"0px\";\n            style.right = \"auto\";\n            style.bottom = \"auto\";\n            break;\n\n          case BUTTON_POSITION.TOP_RIGHT:\n            style.top = \"0px\";\n            style.right = \"0px\";\n            style.left = \"auto\";\n            style.bottom = \"auto\";\n            break;\n\n          case BUTTON_POSITION.BOTTOM_RIGHT:\n            style.bottom = \"0px\";\n            style.right = \"0px\";\n            style.top = \"auto\";\n            style.left = \"auto\";\n            break;\n\n          case BUTTON_POSITION.BOTTOM_LEFT:\n          default:\n            style.bottom = \"0px\";\n            style.left = \"0px\";\n            style.top = \"auto\";\n            style.right = \"auto\";\n            break;\n        }\n      } else {\n        style.display = \"block\";\n        style.width = \"100%\";\n        style.height = \"100%\";\n        style.top = \"0px\";\n        style.right = \"0px\";\n        style.left = \"0px\";\n        style.bottom = \"0px\";\n      }\n\n      Object.assign(this.torusIframe.style, style);\n      this.isIframeFullScreen = isFull;\n    }\n  }, {\n    key: \"_setupWeb3\",\n    value: function _setupWeb3() {\n      var _this15 = this;\n\n      log.info(\"setupWeb3 running\"); // setup background connection\n\n      var metamaskStream = new BasePostMessageStream({\n        name: \"embed_metamask\",\n        target: \"iframe_metamask\",\n        targetWindow: this.torusIframe.contentWindow,\n        targetOrigin: new URL(this.torusUrl).origin\n      }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n      // because the MetamaskInpageProvider also attempts to do so.\n      // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n      var communicationStream = new BasePostMessageStream({\n        name: \"embed_comm\",\n        target: \"iframe_comm\",\n        targetWindow: this.torusIframe.contentWindow,\n        targetOrigin: new URL(this.torusUrl).origin\n      }); // Backward compatibility with Gotchi :)\n      // window.metamaskStream = this.communicationStream\n      // compose the inpage provider\n\n      var inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n      var detectAccountRequestPrototypeModifier = function detectAccountRequestPrototypeModifier(m) {\n        var originalMethod = inpageProvider[m];\n\n        inpageProvider[m] = function providerFunc(method) {\n          if (method && method === \"eth_requestAccounts\") {\n            return inpageProvider.enable();\n          }\n\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          return originalMethod.apply(this, [method].concat(args));\n        };\n      };\n\n      detectAccountRequestPrototypeModifier(\"send\");\n      detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n      inpageProvider.enable = function () {\n        return new Promise(function (resolve, reject) {\n          // If user is already logged in, we assume they have given access to the website\n          inpageProvider.sendAsync({\n            jsonrpc: \"2.0\",\n            id: getPreopenInstanceId(),\n            method: \"eth_requestAccounts\",\n            params: []\n          }, function (err, response) {\n            var _ref17 = response || {},\n                res = _ref17.result;\n\n            if (err) {\n              setTimeout(function () {\n                reject(err);\n              }, 50);\n            } else if (Array.isArray(res) && res.length > 0) {\n              // If user is already rehydrated, resolve this\n              // else wait for something to be written to status stream\n              var handleLoginCb = function handleLoginCb() {\n                if (_this15.requestedVerifier !== \"\" && _this15.currentVerifier !== _this15.requestedVerifier) {\n                  var requestedVerifier = _this15.requestedVerifier; // eslint-disable-next-line promise/no-promise-in-callback\n\n                  _this15.logout() // eslint-disable-next-line promise/always-return\n                  .then(function (_) {\n                    _this15.requestedVerifier = requestedVerifier;\n\n                    _this15._showLoginPopup(true, resolve, reject);\n                  }).catch(function (error) {\n                    return reject(error);\n                  });\n                } else {\n                  resolve(res);\n                }\n              };\n\n              if (_this15.isLoggedIn) {\n                handleLoginCb();\n              } else {\n                _this15.isLoginCallback = handleLoginCb;\n              }\n            } else {\n              // set up listener for login\n              _this15._showLoginPopup(true, resolve, reject);\n            }\n          });\n        });\n      };\n\n      inpageProvider.tryPreopenHandle = function (payload, cb) {\n        var _payload = payload;\n\n        if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n          var preopenInstanceId = getPreopenInstanceId();\n\n          _this15._handleWindow(preopenInstanceId, {\n            target: \"_blank\",\n            features: FEATURES_CONFIRM_WINDOW\n          });\n\n          _payload.preopenInstanceId = preopenInstanceId;\n        }\n\n        inpageProvider._rpcEngine.handle(_payload, cb);\n      }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n      // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n\n      var proxiedInpageProvider = new Proxy(inpageProvider, {\n        // straight up lie that we deleted the property so that it doesnt\n        // throw an error in strict mode\n        deleteProperty: function deleteProperty() {\n          return true;\n        }\n      });\n      this.ethereum = proxiedInpageProvider;\n      var communicationMux = setupMultiplex(communicationStream);\n      this.communicationMux = communicationMux;\n      var windowStream = communicationMux.getStream(\"window\");\n      windowStream.on(\"data\", function (chunk) {\n        if (chunk.name === \"create_window\") {\n          // url is the url we need to open\n          // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n          _this15._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n        }\n      }); // show torus widget if button clicked\n\n      var widgetStream = communicationMux.getStream(\"widget\");\n      widgetStream.on(\"data\", function (chunk) {\n        var data = chunk.data;\n\n        _this15._displayIframe(data);\n      }); // Show torus button if wallet has been hydrated/detected\n\n      var statusStream = communicationMux.getStream(\"status\");\n      statusStream.on(\"data\", function (status) {\n        // login\n        if (status.loggedIn) {\n          _this15.isLoggedIn = status.loggedIn;\n          _this15.currentVerifier = status.verifier;\n        } // logout\n        else _this15._displayIframe();\n\n        if (_this15.isLoginCallback) {\n          _this15.isLoginCallback();\n\n          delete _this15.isLoginCallback;\n        }\n      });\n      this.provider = proxiedInpageProvider;\n      if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n\n      inpageProvider._initializeState();\n\n      log.debug(\"Torus - injected provider\");\n    }\n  }, {\n    key: \"_showLoginPopup\",\n    value: function _showLoginPopup(calledFromEmbed, resolve, reject) {\n      var _this16 = this;\n\n      var loginHandler = function loginHandler(data) {\n        var err = data.err,\n            selectedAddress = data.selectedAddress;\n\n        if (err) {\n          log.error(err);\n          if (reject) reject(err);\n        } // returns an array (cause accounts expects it)\n        else if (resolve) resolve([selectedAddress]);\n\n        if (_this16.isIframeFullScreen) _this16._displayIframe();\n      };\n\n      var oauthStream = this.communicationMux.getStream(\"oauth\");\n\n      if (!this.requestedVerifier) {\n        this._displayIframe(true);\n\n        handleStream(oauthStream, \"data\", loginHandler);\n        oauthStream.write({\n          name: \"oauth_modal\",\n          data: {\n            calledFromEmbed: calledFromEmbed\n          }\n        });\n      } else {\n        handleStream(oauthStream, \"data\", loginHandler);\n        var preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId);\n\n        oauthStream.write({\n          name: \"oauth\",\n          data: {\n            calledFromEmbed: calledFromEmbed,\n            verifier: this.requestedVerifier,\n            preopenInstanceId: preopenInstanceId,\n            login_hint: this.loginHint\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_createPopupBlockAlert\",\n    value: function _createPopupBlockAlert(preopenInstanceId, url) {\n      var _this17 = this;\n\n      var logoUrl = this._getLogoUrl();\n\n      var torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n      var successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n      var btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n      btnContainer.appendChild(successAlert);\n      torusAlert.appendChild(btnContainer);\n\n      var bindOnLoad = function bindOnLoad() {\n        successAlert.addEventListener(\"click\", function () {\n          _this17._handleWindow(preopenInstanceId, {\n            url: url,\n            target: \"_blank\",\n            features: FEATURES_CONFIRM_WINDOW\n          });\n\n          torusAlert.remove();\n          if (_this17.torusAlertContainer.children.length === 0) _this17.torusAlertContainer.style.display = \"none\";\n        });\n      };\n\n      this._setEmbedWhiteLabel(torusAlert);\n\n      var attachOnLoad = function attachOnLoad() {\n        _this17.torusAlertContainer.style.display = \"block\";\n\n        _this17.torusAlertContainer.appendChild(torusAlert);\n      };\n\n      runOnLoad(attachOnLoad);\n      runOnLoad(bindOnLoad);\n    }\n  }]);\n\n  return Torus;\n}();\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, WALLET_VERIFIERS, Torus as default };","map":{"version":3,"sources":["../src/interfaces.ts","../src/config.ts","../src/embedUtils.ts","../src/loglevel.ts","../src/messages.ts","../src/utils.ts","../src/inpage-provider.ts","../src/integrity.ts","../src/PopupHandler.ts","../src/siteMetadata.ts","../src/embed.ts"],"names":["LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","WALLET_VERIFIERS","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrencies","includeFees","enforceMax","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","Object","api","prodTorusUrl","localStorageKeyPrefix","runOnLoad","fn","window","Promise","htmlToElement","html","template","trimmedHtml","handleEvent","handlerArgs","handlerWrapper","handler","handle","handleStream","chunk","resolve","document","loglevel","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","events","close","data","networkChanged","notification","publicConfigStore","validatePaymentProvider","isValid","provider","selectedProvider","selectedParams","params","requestedOrderAmount","parseFloat","createErrorMiddleware","req","res","message","next","done","error","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","getPreopenInstanceId","Math","getTorusUrl","version","versionUsed","integrity","buildEnv","config","get","useAPIKey","response","torusUrl","logLevel","getUserLanguage","userLanguage","userLanguages","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","storage","x","e","getPopupFeatures","dualScreenLeft","dualScreenTop","w","h","width","height","systemZoom","left","top","features","SafeEventEmitter","getRpcPromiseCallback","unwrapResult","reject","Array","TorusInpageProvider","accounts","isConnected","isUnlocked","initialized","isPermanentlyDisconnected","hasEmittedConnection","enable","experimentalMethods","send","constructor","jsonRpcStreamName","isDuplexStream","messages","mux","pump","storageKey","storeAsStream","jsonRpcConnection","createStreamMiddleware","rpcEngine","createIdRemapMiddleware","payload","type","request","args","sendAsync","addListener","on","once","prependListener","prependOnceListener","_initializeState","networkVersion","_rpcRequest","isInternal","cb","_payload","callback","callbackOrArgs","methodOrPayload","_sendSync","result","id","jsonrpc","_handleConnect","_handleDisconnect","errorMessage","_handleStreamDisconnect","_handleAccountsChanged","isEthAccounts","finalAccounts","dequal","_handleChainChanged","_handleUnlockStateChanged","_warnOfDeprecation","defaults","options","algorithms","delimiter","full","hashes","internalHashes","algorithm","createHash","output","sri","main","finalOptions","undefined","target","_setupTimer","Number","setInterval","clearInterval","windowTimer","iClosedWindow","emit","open","redirect","img","getSiteName","siteName","metaTitle","icon","imgExists","_icon","Boolean","getSiteMetadata","name","getSiteIcon","domainMetadata","engine","originalError","defaultVerifiers","iframeIntegrity","expectedCacheControlHeader","UNSAFE_METHODS","isLocalStorageAvailable","storageAvailable","torusIframeHtml","check","hash","configuration","buttonPosition","modalZIndex","apiKey","metadataHost","allowHost","TorusJs","setAPIKey","init","enableLogging","enabledVerifiers","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","skipTKey","useLocalStorage","useWalletConnect","dappStorageKey","localStorageKey","storedKey","generatedKey","torusIframeUrl","link","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","handleSetup","documentReady","initStream","communicationMux","isInitialized","_displayIframe","whiteLabel","torusWidgetVisibility","fetchUrl","resp","fetch","cache","calculatedIntegrity","generateIntegrity","login","verifier","login_hint","loginHint","logout","isLoggedIn","logOutStream","statusStream","statusStreamHandler","status","currentVerifier","requestedVerifier","cleanUp","clearInit","element","isElement","hideTorusButton","setProvider","rest","providerChangeStream","success","preopenInstanceId","_handleWindow","override","showWallet","showWalletStream","finalPath","path","showWalletHandler","instanceId","finalUrl","walletWindow","url","getPublicAddress","isExtended","nodeDetails","verifierId","endpoints","torusNodePubs","walletVerifier","openloginVerifier","existingV1User","v2User","newV2User","getUserInfo","userInfoAccessStream","userInfoAccessHandler","newRequest","userInfoStream","userInfoHandler","handlerChunk","initiateTopup","JSON","topupStream","topupHandler","loginWithPrivateKey","userInfo","Buffer","loginPrivKeyStream","loginHandler","privateKey","showWalletConnectScanner","walletConnectStream","walletConnectHandler","windowStream","handledWindow","closeHandler","receivedId","closed","_setEmbedWhiteLabel","theme","isDark","colors","_getLogoUrl","logoUrl","logoLight","logoDark","_sendWidgetVisibilityStatus","torusWidgetVisibilityStream","isFull","style","_setupWeb3","metamaskStream","targetWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","setTimeout","handleLoginCb","_","isLoginCallback","proxiedInpageProvider","deleteProperty","setupMultiplex","widgetStream","_showLoginPopup","selectedAddress","isIframeFullScreen","oauthStream","calledFromEmbed","_createPopupBlockAlert","torusAlert","successAlert","btnContainer","bindOnLoad","attachOnLoad"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,IAAMA,cAAc,GAAG;AAC5BC,EAAAA,MAAM,EADsB,QAAA;AAE5BC,EAAAA,QAAQ,EAFoB,UAAA;AAG5BC,EAAAA,MAAM,EAHsB,QAAA;AAI5BC,EAAAA,MAAM,EAJsB,QAAA;AAK5BC,EAAAA,OAAO,EAAE;AALmB,CAAvB;AAQA,IAAMC,gBAAgB,GAAG;AAC9BL,EAAAA,MAAM,EADwB,QAAA;AAE9BC,EAAAA,QAAQ,EAFsB,UAAA;AAG9BC,EAAAA,MAAM,EAHwB,QAAA;AAI9BC,EAAAA,MAAM,EAJwB,QAAA;AAK9BC,EAAAA,OAAO,EALuB,SAAA;AAM9BE,EAAAA,kBAAkB,EAAE;AANU,CAAzB;AASA,IAAMC,6BAA6B,wEACvCF,gBAAgB,CAAjB,MADwC,EAAG,aAAH,2CAEvCA,gBAAgB,CAAjB,QAFwC,EAAG,eAAH,2CAGvCA,gBAAgB,CAAjB,MAHwC,EAAG,aAAH,2CAIvCA,gBAAgB,CAAjB,MAJwC,EAAG,aAAH,2CAKvCA,gBAAgB,CAAjB,OALwC,EAAG,cAAH,2CAMvCA,gBAAgB,CAAjB,kBANwC,EAMD,+BANC,yBAAnC;AAQA,IAAMG,gBAAgB,GAAG;AAC9BC,EAAAA,OAAO,EADuB,SAAA;AAE9BC,EAAAA,IAAI,EAF0B,MAAA;AAG9BC,EAAAA,WAAW,EAHmB,aAAA;AAI9BC,EAAAA,OAAO,EAJuB,SAAA;AAK9BC,EAAAA,QAAQ,EALsB,UAAA;AAM9BC,EAAAA,OAAO,EAAE;AANqB,CAAzB;AASA,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,UAAU,EADmB,YAAA;AAE7BC,EAAAA,WAAW,EAFkB,aAAA;AAG7BC,EAAAA,OAAO,EAHsB,SAAA;AAI7BC,EAAAA,OAAO,EAJsB,SAAA;AAK7BC,EAAAA,GAAG,EAL0B,KAAA;AAM7BC,EAAAA,IAAI,EAAE;AANuB,CAAxB;AAsCA,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,WAAW,EADkB,aAAA;AAE7BC,EAAAA,QAAQ,EAFqB,UAAA;AAG7BC,EAAAA,YAAY,EAHiB,cAAA;AAI7BC,EAAAA,SAAS,EAAE;AAJkB,CAAxB;AC1EP,IAAMC,kBAAgB,kEACnBnB,gBAAgB,CAAjB,WADoB,EACY;AAC9BoB,EAAAA,KAAK,EADyB,sCAAA;AAE9BC,EAAAA,KAAK,EAFyB,cAAA;AAG9BC,EAAAA,KAAK,EAHyB,6BAAA;AAI9BC,EAAAA,WAAW,EAJmB,+BAAA;AAK9BC,EAAAA,aAAa,EALiB,EAAA;AAM9BC,EAAAA,aAAa,EANiB,KAAA;AAO9BC,EAAAA,eAAe,EAAE,CAAA,KAAA,EAAA,KAAA,EAPa,KAOb,CAPa;AAQ9BC,EAAAA,qBAAqB,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EARO,SAQP,CARO;AAS9BC,EAAAA,WAAW,EATmB,IAAA;AAU9BC,EAAAA,UAAU,EAAE;AAVkB,CADZ,wCAanB7B,gBAAgB,CAAjB,OAboB,EAaQ;AAC1BoB,EAAAA,KAAK,EADqB,iCAAA;AAE1BC,EAAAA,KAAK,EAFqB,eAAA;AAG1BC,EAAAA,KAAK,EAHqB,wBAAA;AAI1BC,EAAAA,WAAW,EAJe,6BAAA;AAK1BC,EAAAA,aAAa,EALa,KAAA;AAM1BC,EAAAA,aAAa,EANa,KAAA;AAO1BC,EAAAA,eAAe,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAPS,KAOT,CAPS;AAQ1BC,EAAAA,qBAAqB,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,SAAA,EARG,UAQH,CARG;AAS1BC,EAAAA,WAAW,EATe,IAAA;AAU1BC,EAAAA,UAAU,EAAE;AAVc,CAbR,wCAyBnB7B,gBAAgB,CAAjB,IAzBoB,EAyBK;AACvBoB,EAAAA,KAAK,EADkB,+BAAA;AAEvBC,EAAAA,KAAK,EAFkB,qBAAA;AAGvBC,EAAAA,KAAK,EAHkB,UAAA;AAIvBC,EAAAA,WAAW,EAJY,kCAAA;AAKvBC,EAAAA,aAAa,EALU,CAAA;AAMvBC,EAAAA,aAAa,EANU,GAAA;AAOvBC,EAAAA,eAAe,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAPM,KAON,CAPM;AAQvBC,EAAAA,qBAAqB,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EARA,MAQA,CARA;AASvBC,EAAAA,WAAW,EATY,KAAA;AAUvBC,EAAAA,UAAU,EAAE;AAVW,CAzBL,wCAqCnB7B,gBAAgB,CAAjB,OArCoB,EAqCQ;AAC1BoB,EAAAA,KAAK,EADqB,qEAAA;AAE1BC,EAAAA,KAAK,EAFqB,yBAAA;AAG1BC,EAAAA,KAAK,EAHqB,cAAA;AAI1BC,EAAAA,WAAW,EAJe,4BAAA;AAK1BC,EAAAA,aAAa,EALa,GAAA;AAM1BC,EAAAA,aAAa,EANa,IAAA;AAO1BC,EAAAA,eAAe,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAPS,KAOT,CAPS;AAQ1BC,EAAAA,qBAAqB,EAAE,CAAA,KAAA,EARG,MAQH,CARG;AAS1BC,EAAAA,WAAW,EATe,IAAA;AAU1BE,EAAAA,IAAI,EAVsB,IAAA;AAW1BD,EAAAA,UAAU,EAAE;AAXc,CArCR,wCAkDnB7B,gBAAgB,CAAjB,QAlDoB,EAkDS;AAC3BoB,EAAAA,KAAK,EADsB,+BAAA;AAE3BC,EAAAA,KAAK,EAFsB,gBAAA;AAG3BC,EAAAA,KAAK,EAHsB,yBAAA;AAI3BC,EAAAA,WAAW,EAJgB,4BAAA;AAK3BC,EAAAA,aAAa,EALc,EAAA;AAM3BC,EAAAA,aAAa,EANc,IAAA;AAO3BC,EAAAA,eAAe,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAPU,KAOV,CAPU;AAQ3BC,EAAAA,qBAAqB,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EARI,KAQJ,CARI;AAS3BC,EAAAA,WAAW,EATgB,IAAA;AAU3BC,EAAAA,UAAU,EAAE;AAVe,CAlDT,wCA8DnB7B,gBAAgB,CAAjB,OA9DoB,EA8DQ;AAC1BoB,EAAAA,KAAK,EADqB,mDAAA;AAE1BC,EAAAA,KAAK,EAFqB,uBAAA;AAG1BC,EAAAA,KAAK,EAHqB,UAAA;AAI1BC,EAAAA,WAAW,EAJe,sCAAA;AAK1BC,EAAAA,aAAa,EALa,EAAA;AAM1BC,EAAAA,aAAa,EANa,GAAA;AAO1BC,EAAAA,eAAe,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAPS,KAOT,CAPS;AAQ1BC,EAAAA,qBAAqB,EAAE,CAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EARG,MAQH,CARG;AAS1BC,EAAAA,WAAW,EATe,IAAA;AAU1BC,EAAAA,UAAU,EAAE;AAVc,CA9DR,sBAAtB;AA4EA,IAAME,YAAY,GAAG;AACnBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EADH,UAAA;AAELC,MAAAA,cAAc,EAFT,wBAAA;AAGLC,MAAAA,aAAa,EAHR,wDAAA;AAILC,MAAAA,eAAe,EAJV,kBAAA;AAKLC,MAAAA,aAAa,EALR,mEAAA;AAMLC,MAAAA,SAAS,EAAE;AANN;AADL,GADe;AAWnBC,EAAAA,EAAE,EAAE;AACFP,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EADH,YAAA;AAELC,MAAAA,cAAc,EAFT,4BAAA;AAGLC,MAAAA,aAAa,EAHR,0EAAA;AAILC,MAAAA,eAAe,EAJV,kBAAA;AAKLC,MAAAA,aAAa,EALR,sFAAA;AAMLC,MAAAA,SAAS,EAAE;AANN;AADL,GAXe;AAqBnBE,EAAAA,EAAE,EAAE;AACFR,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EADH,MAAA;AAELC,MAAAA,cAAc,EAFT,SAAA;AAGLC,MAAAA,aAAa,EAHR,8BAAA;AAILC,MAAAA,eAAe,EAJV,SAAA;AAKLC,MAAAA,aAAa,EALR,0CAAA;AAMLC,MAAAA,SAAS,EAAE;AANN;AADL,GArBe;AA+BnBG,EAAAA,EAAE,EAAE;AACFT,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EADH,MAAA;AAELC,MAAAA,cAAc,EAFT,OAAA;AAGLC,MAAAA,aAAa,EAHR,4BAAA;AAILC,MAAAA,eAAe,EAJV,OAAA;AAKLC,MAAAA,aAAa,EALR,wCAAA;AAMLC,MAAAA,SAAS,EAAE;AANN;AADL,GA/Be;AAyCnBI,EAAAA,EAAE,EAAE;AACFV,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EADH,IAAA;AAELC,MAAAA,cAAc,EAFT,MAAA;AAGLC,MAAAA,aAAa,EAHR,mBAAA;AAILC,MAAAA,eAAe,EAJV,UAAA;AAKLC,MAAAA,aAAa,EALR,8BAAA;AAMLC,MAAAA,SAAS,EAAE;AANN;AADL;AAzCe,CAArB;AAqDA,IAAA,aAAA,GAAe;AACbK,EAAAA,qBAAqB,EAAEC,MAAM,CAANA,MAAAA,CADV,gBACUA,CADV;oBAAA,kBAAA;AAGbC,EAAAA,GAAG,EAHU,oBAAA;AAIbf,EAAAA,YAJa,EAIbA,YAJa;AAKbgB,EAAAA,YAAY,EALC,EAAA;AAMbC,EAAAA,qBAAqB,EAAA;AANR,CAAf;;ACjIO,IAAMC,SAAS,GAAIC,SAAbD,SAAaC,CAAAA,EAAD;AAAA,SACvB,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AAC9B,QAAIC,MAAM,CAANA,QAAAA,CAAAA,IAAAA,IAAJ,IAAA,EAAkC;AAChCC,MAAAA,OAAO,CAAPA,OAAAA,CAAgBF,EAAhBE,EAAAA,EAAAA,IAAAA,CAAAA,OAAAA,EAAAA,KAAAA,CAAAA,MAAAA;AADF,KAAA,MAEO;AACLD,MAAAA,MAAM,CAANA,QAAAA,CAAAA,gBAAAA,CAAAA,kBAAAA,EAAqD,YAAK;AACxDC,QAAAA,OAAO,CAAPA,OAAAA,CAAgBF,EAAhBE,EAAAA,EAAAA,IAAAA,CAAAA,OAAAA,EAAAA,KAAAA,CAAAA,MAAAA;AADFD,OAAAA;AAGD;AARE,GACL,CADuB;AAAA,CAAlB;;AAoBA,IAAME,aAAa,GAAuBC,SAApCD,aAAoCC,CAAAA,IAApB,EAAuC;AAClE,MAAMC,QAAQ,GAAGJ,MAAM,CAANA,QAAAA,CAAAA,aAAAA,CAAjB,UAAiBA,CAAjB;AACA,MAAMK,WAAW,GAAGF,IAAI,CAF0C,IAE9CA,EAApB,CAFkE,CAAA;;AAGlEC,EAAAA,QAAQ,CAARA,SAAAA,GAAAA,WAAAA;AACA,SAAOA,QAAQ,CAARA,OAAAA,CAAP,UAAA;AAJK,CAAA;;AAOA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAmH;AAAA,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAhCC,WAAgC,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAhCA,IAAAA,WAAgC,CAAA,IAAA,GAAA,CAAA,CAAhCA,GAAgC,SAAA,CAAA,IAAA,CAAhCA;AAAgC;;AAC5I,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAK;AAC1BC,IAAAA,OAAO,MAAPA,SAAAA,WAAAA;AACAC,IAAAA,MAAM,CAANA,mBAAAA,CAAAA,SAAAA,EAAAA,cAAAA;AAFF,GAAA;;AAIAA,EAAAA,MAAM,CAANA,gBAAAA,CAAAA,SAAAA,EAAAA,cAAAA;AALK,CAAA;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAA+E;AACzG,MAAMH,cAAc,GAAII,SAAlBJ,cAAkBI,CAAAA,KAAD,EAAmB;AACxCH,IAAAA,OAAO,CAAPA,KAAO,CAAPA;AACAC,IAAAA,MAAM,CAANA,cAAAA,CAAAA,SAAAA,EAAAA,cAAAA;AAFF,GAAA;;AAIAA,EAAAA,MAAM,CAANA,EAAAA,CAAAA,SAAAA,EAAAA,cAAAA;AALK,CAAA;;SAQA,a;;;;;4EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACE,IAAA,OAAA,CAAmBG,UAAAA,OAAD,EAAY;AACnC,kBAAIC,QAAQ,CAARA,UAAAA,KAAJ,SAAA,EAAuC;AACrCD,gBAAAA,OAAO;AADT,eAAA,MAEO;AACLP,gBAAAA,WAAW,CAAA,QAAA,EAAA,kBAAA,EAAXA,OAAW,CAAXA;AACD;AALH,aAAO,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AC3CP,IAAA,GAAA,GAAeS,QAAQ,CAARA,SAAAA,CAAf,aAAeA,CAAf;ACFA,IAAA,QAAA,GAAe;AACbC,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE;AAAA,aADR,kCACQ;AAAA,KADR;AAENC,IAAAA,uBAAuB,EAAE;AAAA,aAFnB,wDAEmB;AAAA,KAFnB;AAGNC,IAAAA,gBAAgB,EAAE;AAAA,aAHZ,yFAGY;AAAA,KAHZ;AAINC,IAAAA,eAAe,EAAGC,yBAAAA,MAAD;AAAA,aACiEA,gFAAAA,MAAAA,CADjE,MACiEA,EAL5E,gCAK4EA,CADjE;AAAA,KAJX;AAMNC,IAAAA,mBAAmB,EAAE;AAAA,aANf,6CAMe;AAAA,KANf;AAONC,IAAAA,cAAc,EAAE,wBAAA,iBAAA,EAAA,kBAAA;AAAA,aACqCC,mDAAAA,MAAAA,CADrC,iBACqCA,EAA0CC,wBAA1CD,EAA0CC,MAA1CD,CADrC,kBACqCA,EAR/C,IAQ+CA,CADrC;AAAA,KAPV;AASNE,IAAAA,kBAAkB,EAAE;AAAA,aATd,gDASc;AAAA,KATd;AAUNC,IAAAA,oBAAoB,EAAE;AAAA,aAVhB,2CAUgB;AAAA,KAVhB;AAWNC,IAAAA,oBAAoB,EAAE;AAAA,aAXhB,uDAWgB;AAAA,KAXhB;AAYNC,IAAAA,mBAAmB,EAAE;AAAA,aAZf,8CAYe;AAAA,KAZf;AAaNC,IAAAA,mBAAmB,EAAGT,6BAAAA,MAAD;AAAA,aAAA,+CAAA,MAAA,CAAA,MAAA,EAAA,IAAA,CAAA;AAAA;AAbf,GADK;AAgBbU,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAGC,mBAAAA,OAAD;AAAA,aAAA,uCAAA,MAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAAA;AADP,GAhBO;AAmBbC,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,iBAAiB,EACf,iFAHM,+HAAA;AAKRC,IAAAA,eAAe,EACb,gFANM,+IAAA;AAQRC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EACH,8GAFI,sEAAA;AAINC,MAAAA,IAAI,EACF,6EALI,oGAAA;AAONC,MAAAA,cAAc,EACZ,sFARI,yGAAA;AAUNC,MAAAA,YAAY,EACV,qFACA;AAZI,KARA;AAsBRC,IAAAA,iBAAiB,EAAE;AAtBX;AAnBG,CAAf;ACSA,IAAQ1E,gBAAR,GAAA,aAAA,CAAQA,gBAAR;;AAUO,IAAM2E,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAA,QAAA,EAAA,MAAA,EAAyF;AAC9H,MAAM3B,MAAM,GAAZ,EAAA;;AAEA,MAAI,CAAJ,QAAA,EAAe;AACb,WAAO;AAAEA,MAAAA,MAAF,EAAEA,MAAF;AAAU4B,MAAAA,OAAO,EAAE;AAAnB,KAAP;AACD;;AAED,MAAIC,QAAQ,IAAI,CAAC7E,gBAAgB,CAAjC,QAAiC,CAAjC,EAA6C;AAC3CgD,IAAAA,MAAM,CAANA,QAAAA,GAAAA,kBAAAA;AACA,WAAO;AAAEA,MAAAA,MAAF,EAAEA,MAAF;AAAU4B,MAAAA,OAAO,EAAElD,MAAM,CAANA,IAAAA,CAAAA,MAAAA,EAAAA,MAAAA,KAA+B;AAAlD,KAAP;AACD;;AAED,MAAMoD,gBAAgB,GAAG9E,gBAAgB,CAAzC,QAAyC,CAAzC;AACA,MAAM+E,cAAc,GAAGC,MAAM,IAbiG,EAa9H,CAb8H,CAAA;AAgB9H;AACA;AACA;AAEA;;AACA,MAAID,cAAc,CAAlB,SAAA,EAA8B;AAC5B,QAAME,oBAAoB,GAAG,CAACC,UAAU,CAACH,cAAc,CAAdA,SAAAA,CAAZ,QAAYA,EAAD,CAAX,IAA7B,CAAA;AACA,QAAIE,oBAAoB,GAAGH,gBAAgB,CAA3C,aAAA,EAA2D9B,MAAM,CAANA,SAAAA,GAAAA,0CAAAA;AAC3D,QAAIiC,oBAAoB,GAAGH,gBAAgB,CAAvCG,aAAAA,IAAyDH,gBAAgB,CAA7E,UAAA,EACE9B,MAAM,CAANA,SAAAA,GAAAA,2CAAAA;AACH;;AACD,MAAI+B,cAAc,CAAdA,gBAAAA,IAAmC,CAACD,gBAAgB,CAAhBA,eAAAA,CAAAA,QAAAA,CAA0CC,cAAc,CAAhG,gBAAwCD,CAAxC,EAAoH;AAClH9B,IAAAA,MAAM,CAANA,gBAAAA,GAAAA,sBAAAA;AACD;;AACD,MAAI+B,cAAc,CAAdA,sBAAAA,IAAyC,CAACD,gBAAgB,CAAhBA,qBAAAA,CAAAA,QAAAA,CAAgDC,cAAc,CAA5G,sBAA8CD,CAA9C,EAAsI;AACpI9B,IAAAA,MAAM,CAANA,sBAAAA,GAAAA,4BAAAA;AACD;;AACD,SAAO;AAAEA,IAAAA,MAAF,EAAEA,MAAF;AAAU4B,IAAAA,OAAO,EAAElD,MAAM,CAANA,IAAAA,CAAAA,MAAAA,EAAAA,MAAAA,KAA+B;AAAlD,GAAP;AAjCK,CAAA,C,CAAA;;AAsCP;;;;;AAKG;;;SACayD,qB,GAAqB;AACnC,SAAO,UAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAmB;AACxB;AACA,QAAI,OAAOC,GAAG,CAAV,MAAA,KAAA,QAAA,IAAkC,CAACA,GAAG,CAA1C,MAAA,EAAmD;AACjDC,MAAAA,GAAG,CAAHA,KAAAA,GAAY,SAAS,CAAT,GAAA,CAAA,cAAA,CAA6B;AACvCC,QAAAA,OAAO,EADgC,kDAAA;AAEvCf,QAAAA,IAAI,EAAEa;AAFiC,OAA7B,CAAZC;AAID;;AAEDE,IAAAA,IAAI,CAAEC,UAAAA,IAAD,EAAS;AACZ,UAAQC,KAAR,GAAA,GAAA,CAAQA,KAAR;;AACA,UAAI,CAAJ,KAAA,EAAY;AACV,eAAOD,IAAP,EAAA;AACD;;AACDE,MAAAA,GAAG,CAAHA,KAAAA,CAAAA,yBAAAA,MAAAA,CAAmCD,KAAK,CAAxCC,OAAAA,CAAAA,EAAAA,KAAAA;AACA,aAAOF,IAAP,EAAA;AANFD,KAAI,CAAJA;AATF,GAAA;AAkBD,C,CAAA;;AAeD;;;;;;;;AAQG;;;SACaI,0B,CAA2BC,W,EAAqBH,K,EAAcI,O,EAAyB;AACrG,MAAIC,UAAU,GAAoCF,kCAAAA,MAAAA,CAApC,WAAoCA,EAAlD,KAAkDA,CAAlD;;AACA,MAAIH,KAAJ,KAAIA,IAAAA,IAAAA,KAAJ,KAAA,KAAA,CAAIA,IAAAA,KAAK,CAAT,KAAA,EAAkB;AAChBK,IAAAA,UAAU,IAASL,KAAAA,MAAAA,CAAAA,KAAK,CAAxBK,KAAmBL,CAAnBK;AACD;;AACDJ,EAAAA,GAAG,CAAHA,IAAAA,CAAAA,UAAAA;;AACA,MAAIG,OAAO,IAAIA,OAAO,CAAPA,aAAAA,CAAAA,OAAAA,IAAf,CAAA,EAAmD;AACjDA,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,OAAAA,EAAAA,UAAAA;AACD;AACF;;AAEM,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAMC,IAAI,CAAJA,MAAAA,GAAAA,QAAAA,CAAAA,EAAAA,EAAAA,KAAAA,CAAnC,CAAmCA,CAAN;AAAA,CAA7B;;AAEA,IAAMC,WAAW;AAAA,uEAAG,iBAAA,QAAA,EAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8G;AAIjIC,YAAAA,OAJmB,GAIzB,QAJyB;AAKrBC,YAAAA,WALqB,GAKPC,SAAS,CAATA,OAAAA,IAAlB,OALyB;AAAA;;AAAA,kBAOnB,CAACC,QAAQ,KAARA,SAAAA,IAA0BA,QAAQ,KAAnC,YAAA,KAAyD,CAACD,SAAS,CAAvE,OAPuB;AAAA;AAAA;AAAA;;AAAA,gBAShBE,aAAM,CAAX,YATqB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUFC,GAAG,CAAA,GAAA,MAAA,CAAID,aAAM,CAAV,GAAA,EAAA,qDAAA,EAAA,MAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAmF;AAAEE,cAAAA,SAAS,EAAE;AAAb,aAAnF,CAVD;;AAAA;AAUnB,YAAA,QAVmB;AAAA;AAAA;;AAAA;AAWhB,YAAA,QAAQ,GAAG;AAAEjC,cAAAA,IAAI,EAAE+B,aAAM,CAAC1E;AAAf,aAAX;;AAXgB;AAYrBuE,YAAAA,WAAW,GAAGM,QAAQ,CALyD,IAK/EN,CAZqB,CAO0D;;AAO/EG,YAAAA,aAAM,CAANA,YAAAA,GAAsBG,QAAQ,CAA9BH,IAAAA;;AAdqB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBvBZ,YAAAA,GAAG,CAAHA,KAAAA,cAAAA,gCAAAA;;AAjBuB;AAmBzBA,YAAAA,GAAG,CAAHA,IAAAA,CAAAA,gBAAAA,EAAAA,WAAAA;AAnByB,0BAoBzB,QApByB;AAAA,4CAqBvB,SArBuB,wBAyBvB,SAzBuB,wBA6BvB,KA7BuB,wBAiCvB,MAjCuB,wBAqCvB,aArCuB;AAAA;;AAAA;AAsBrBgB,YAAAA,QAAQ,GAAA,2BAAA,MAAA,CAARA,WAAQ,CAARA;AACAC,YAAAA,QAAQ,GAARA,MAAAA;AAvBqB;;AAAA;AA0BrBD,YAAAA,QAAQ,GAARA,wBAAAA;AACAC,YAAAA,QAAQ,GAARA,OAAAA;AA3BqB;;AAAA;AA8BrBD,YAAAA,QAAQ,GAARA,oBAAAA;AACAC,YAAAA,QAAQ,GAARA,OAAAA;AA/BqB;;AAAA;AAkCrBD,YAAAA,QAAQ,GAARA,qBAAAA;AACAC,YAAAA,QAAQ,GAARA,OAAAA;AAnCqB;;AAAA;AAsCrBD,YAAAA,QAAQ,GAARA,uBAAAA;AACAC,YAAAA,QAAQ,GAARA,OAAAA;AAvCqB;;AAAA;AA0CrBD,YAAAA,QAAQ,GAAA,uBAAA,MAAA,CAARA,WAAQ,CAARA;AACAC,YAAAA,QAAQ,GAARA,OAAAA;AA3CqB;;AAAA;AAAA,6CA8ClB;AAAED,cAAAA,QAAF,EAAEA,QAAF;AAAYC,cAAAA,QAAAA,EAAAA;AAAZ,aA9CkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXV,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAiDA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,GAAa;AAC1C,MAAIC,YAAY,GAAG7E,MAAM,CAANA,SAAAA,CAAAA,QAAAA,IAAnB,OAAA;AACA,MAAM8E,aAAa,GAAGD,YAAY,CAAZA,KAAAA,CAAtB,GAAsBA,CAAtB;AACAA,EAAAA,YAAY,GAAGnF,MAAM,CAANA,SAAAA,CAAAA,cAAAA,CAAAA,IAAAA,CAAqC4E,aAAM,CAA3C5E,YAAAA,EAA0DoF,aAAa,CAAvEpF,CAAuE,CAAvEA,IAA8EoF,aAAa,CAA3FpF,CAA2F,CAA3FA,GAAfmF,IAAAA;AACA,SAAA,YAAA;AAJK,CAAA;;AAOA,IAAME,qBAAqB,GAAG,CAAA,kBAAA,CAAA;AAAA,CAA9B;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAW,CAAA;AAAxB,CAAA;;AAIA,IAAMC,+BAA+B,GAArC,uFAAA;AACA,IAAMC,8BAA8B,GAApC,wFAAA;AAEA,IAAMC,uBAAuB,GAA7B,uFAAA;;AAED,SAAA,gBAAA,CAAA,IAAA,EAAkE;AACtE,MAAA,OAAA;;AACA,MAAI;AACFC,IAAAA,OAAO,GAAGpF,MAAM,CAAhBoF,IAAgB,CAAhBA;AACA,QAAMC,CAAC,GAAP,kBAAA;AACAD,IAAAA,OAAO,CAAPA,OAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AACAA,IAAAA,OAAO,CAAPA,UAAAA,CAAAA,CAAAA;AACA,WAAA,IAAA;AALF,GAAA,CAME,OAAA,CAAA,EAAU;AACV,WACEE,CAAC,MAAA;AAEAA,IAAAA,CAAC,CAADA,IAAAA,KAAAA,EAAAA,IAAAA;AAECA,IAAAA,CAAC,CAADA,IAAAA,KAFDA,IAAAA,IAAAA;AAIC;AACAA,IAAAA,CAAC,CAADA,IAAAA,KALDA,oBAAAA,IAAAA;AAOCA,IAAAA,CAAC,CAADA,IAAAA,KATFA,4BAAC,CAADA,IAAAA;AAAAA,IAAAA,OAAAA,IAYAF,OAAO,CAAPA,MAAAA,KAbF,CAAA;AAeD;AACF;;SAEeG,gB,GAAgB;AAC9B;AACA,MAAMC,cAAc,GAAGxF,MAAM,CAANA,UAAAA,KAAAA,SAAAA,GAAkCA,MAAM,CAAxCA,UAAAA,GAAsDA,MAAM,CAAnF,OAAA;AACA,MAAMyF,aAAa,GAAGzF,MAAM,CAANA,SAAAA,KAAAA,SAAAA,GAAiCA,MAAM,CAAvCA,SAAAA,GAAoDA,MAAM,CAAhF,OAAA;AAEA,MAAM0F,CAAC,GAAP,IAAA;AACA,MAAMC,CAAC,GAAP,GAAA;AAEA,MAAMC,KAAK,GAAG5F,MAAM,CAANA,UAAAA,GACVA,MAAM,CADIA,UAAAA,GAEVc,QAAQ,CAARA,eAAAA,CAAAA,WAAAA,GACAA,QAAQ,CAARA,eAAAA,CADAA,WAAAA,GAEAd,MAAM,CAANA,MAAAA,CAJJ,KAAA;AAMA,MAAM6F,MAAM,GAAG7F,MAAM,CAANA,WAAAA,GACXA,MAAM,CADKA,WAAAA,GAEXc,QAAQ,CAARA,eAAAA,CAAAA,YAAAA,GACAA,QAAQ,CAARA,eAAAA,CADAA,YAAAA,GAEAd,MAAM,CAANA,MAAAA,CAJJ,MAAA;AAMA,MAAM8F,UAAU,GApBc,CAoB9B,CApB8B,CAAA;;AAsB9B,MAAMC,IAAI,GAAG/B,IAAI,CAAJA,GAAAA,CAAS,CAAC4B,KAAK,GAAN,CAAA,IAAA,CAAA,GAAA,UAAA,GAAtB,cAAa5B,CAAb;AACA,MAAMgC,GAAG,GAAGhC,IAAI,CAAJA,GAAAA,CAAS,CAAC6B,MAAM,GAAP,CAAA,IAAA,CAAA,GAAA,UAAA,GAArB,aAAY7B,CAAZ;AACA,MAAMiC,QAAQ,GAAA,6DAAA,MAAA,CAAgEN,CAAC,GAAjE,UAAA,EAAA,SAAA,EAAA,MAAA,CAAwFD,CAAC,GAAzF,UAAA,EAAA,OAAA,EAAA,MAAA,CAAA,GAAA,EAAA,QAAA,EAAA,MAAA,CAAd,IAAc,CAAd;AACA,SAAA,QAAA;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChNDQ,gBAAgB,CAAhBA,mBAAAA,GAAAA,GAAAA,C,CAAAA;;AAGA,IAAMC,qBAAqB,GACzB,SADIA,qBACJ,CAAA,OAAA,EAAA,MAAA,EAAA;AAAA,MAAkBC,YAAlB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,IAAA;AAAA,SACA,UAAA,KAAA,EAAA,QAAA,EAAoB;AAClB,QAAI3C,KAAK,IAAIgB,QAAQ,CAArB,KAAA,EAA6B;AAC3B,aAAO4B,MAAM,CAAC5C,KAAK,IAAIgB,QAAQ,CAA/B,KAAa,CAAb;AACD;;AACD,WAAO,CAAA,YAAA,IAAiB6B,KAAK,CAALA,OAAAA,CAAjB,QAAiBA,CAAjB,GAA2CzF,OAAO,CAAlD,QAAkD,CAAlD,GAA+DA,OAAO,CAAC4D,QAAQ,CAAtF,MAA6E,CAA7E;AALF,GAAA;AADF,CAAA;;IASA,mB;;;;;AAUE;;;AAGG;;AAGH;;;;AAIG;;AASH;;AAEG;AA4BHwC,+BAAAA,gBAAAA,EAE8G;AAAA;;AAAA;;AAA5G,gBAA4G,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAA1G;AAAA,sCAAEzF,iBAAF;AAAA,QAAEA,iBAAF,sCAAA,GAAA;AAAA,sCAA2BC,kBAA3B;AAAA,QAA2BA,kBAA3B,sCAAA,IAAA;AAAA,sCAAsDyF,iBAAtD;AAAA,QAAsDA,iBAAtD,sCAA0E,UAA1E;;AAEA;;AAF4G,IAAA,eAAA,gCAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,iBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,gBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,oBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,oBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,kBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,gCAAA,oBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAjBjE,gCAAA,eAAA,EAAA;AAC3C;AACAJ,MAAAA,MAAM,EAFqC,KAAA;AAG3CC,MAAAA,mBAAmB,EAHwB,KAAA;AAI3CC,MAAAA,IAAI,EAJuC,KAAA;AAK3CtE,MAAAA,iBAAiB,EAL0B,KAAA;AAM3C;AACAL,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EADC,KAAA;AAENC,QAAAA,IAAI,EAFE,KAAA;AAGNC,QAAAA,cAAc,EAHR,KAAA;AAINC,QAAAA,YAAY,EAAE;AAJR;AAPmC,KAAA,CAiBiE;;AAG5G,QAAI,CAAC0E,MAAc,CAAnB,gBAAmB,CAAnB,EAAuC;AACrC,YAAM,IAAA,KAAA,CAAUC,QAAQ,CAARA,MAAAA,CAAhB,mBAAgBA,EAAV,CAAN;AACD;;AACD,UAAA,OAAA,GAAA,IAAA;;AACA,UAAA,eAAA,CAP4G,iBAO5G,EAP4G,CAAA;;;AAU5G,UAAA,MAAA,GACKb,eAAAA,CAAAA,EAAAA,EAAAA,mBAAmB,CAXoF,aAWvGA,CADL,CAV4G,CAAA;;AAe5G,UAAA,eAAA,GAAA,IAAA;AACA,UAAA,cAAA,GAAA,IAAA;AACA,UAAA,OAAA,GAAA,IAAA;AACA,UAAA,kBAAA,GAlB4G,kBAkB5G,CAlB4G,CAAA;;AAqB5G,UAAA,sBAAA,GAA8B,MAAA,sBAAA,CAA9B,IAA8B,+BAA9B;AACA,UAAA,mBAAA,GAA2B,MAAA,mBAAA,CAA3B,IAA2B,+BAA3B;AACA,UAAA,yBAAA,GAAiC,MAAA,yBAAA,CAAjC,IAAiC,+BAAjC;AACA,UAAA,cAAA,GAAsB,MAAA,cAAA,CAAtB,IAAsB,+BAAtB;AACA,UAAA,iBAAA,GAAyB,MAAA,iBAAA,CAAzB,IAAyB,+BAAzB;AACA,UAAA,uBAAA,GAA+B,MAAA,uBAAA,CAA/B,IAA+B,+BAA/B;AACA,UAAA,SAAA,GAAiB,MAAA,SAAA,CAAjB,IAAiB,+BAAjB;AACA,UAAA,WAAA,GAAmB,MAAA,WAAA,CAAnB,IAAmB,+BAAnB;AACA,UAAA,kBAAA,GAA0B,MAAA,kBAAA,CAA1B,IAA0B,+BAA1B;AACA,UAAA,gBAAA,GAAwB,MAAA,gBAAA,CAAxB,IAAwB,+BAAxB;AAEA,UAAA,OAAA,GAAe,MAAA,OAAA,CAAf,IAAe,+BAAf;AACA,UAAA,IAAA,GAAY,MAAA,IAAA,CAAZ,IAAY,+BAAZ;AACA,UAAA,SAAA,GAAiB,MAAA,SAAA,CAlC2F,IAkC3F,+BAAjB,CAlC4G,CAAA;AAqC5G;;AACA,QAAMc,GAAG,GAAG,IAAZ,eAAY,EAAZ;AACAC,IAAAA,IAAI,CAAA,gBAAA,EAAA,GAAA,EAAA,gBAAA,EAA0C,MAAA,uBAAA,CAAA,IAAA,gCAvC8D,UAuC9D,CAA1C,CAAJA,CAvC4G,CAAA;;AA0C5G,UAAA,kBAAA,GAA0B,IAAA,eAAA,CAAoB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAApB,CAA1B,CA1C4G,CAAA;AA6C5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAD,IAAAA,IAAI,CACFD,GAAG,CAAHA,YAAAA,CADE,cACFA,CADE,EAEFG,aAAa,CAAC,MAFZ,kBAEW,CAFX,EAAA;AAIF7D,IAAAA,0BAA0B,CAA1BA,IAAAA,gCAvG0G,4BAuG1GA,CAJE,CAAJ2D,CAnG4G,CAAA;;AA0G5GD,IAAAA,GAAG,CAAHA,YAAAA,CA1G4G,UA0G5GA,EA1G4G,CAAA;AA8G5G;;AACA,UAAA,EAAA,CAAA,SAAA,EAAmB,YAAK;AACtB,YAAA,MAAA,CAAA,WAAA,GAAA,IAAA;AAhH0G,KA+G5G,EA/G4G,CAAA;;;AAqH5G,QAAMI,iBAAiB,GAAGC,sBAA1B,EAAA;AACAJ,IAAAA,IAAI,CACFG,iBAAiB,CADf,MAAA,EAEFJ,GAAG,CAAHA,YAAAA,CAFE,iBAEFA,CAFE,EAGFI,iBAAiB,CAHf,MAAA,EAIF,MAAA,uBAAA,CAAA,IAAA,gCA1H0G,sBA0H1G,CAJE,CAAJH,CAtH4G,CAAA;;AA8H5G,QAAMK,SAAS,GAAG,IAAlB,UAAkB,EAAlB;AACAA,IAAAA,SAAS,CAATA,IAAAA,CAAeC,uBAAfD,EAAAA;AACAA,IAAAA,SAAS,CAATA,IAAAA,CAAexE,qBAAfwE,EAAAA;AACAA,IAAAA,SAAS,CAATA,IAAAA,CAAeF,iBAAiB,CAAhCE,UAAAA;AACA,UAAA,UAAA,GAlI4G,SAkI5G,CAlI4G,CAAA;;AAqI5GF,IAAAA,iBAAiB,CAAjBA,MAAAA,CAAAA,EAAAA,CAAAA,cAAAA,EAA6CI,UAAAA,OAAD,EAAY;AACtD,UAAM,MAAN,GAAA,OAAA,CAAM,MAAN;AAAA,UAAgB7E,MAAhB,GAAA,OAAA,CAAgBA,MAAhB;;AACA,UAAI3B,MAAM,KAAV,wBAAA,EAAyC;AACvC,cAAA,sBAAA,CAAA,MAAA;AADF,OAAA,MAEO,IAAIA,MAAM,KAAV,2BAAA,EAA4C;AACjD,cAAA,yBAAA,CAAA,MAAA;AADK,OAAA,MAEA,IAAIA,MAAM,KAAV,qBAAA,EAAsC;AAC3C,cAAA,mBAAA,CAAA,MAAA;AADK,OAAA,MAEA,IAAI0D,qBAAqB,CAArBA,QAAAA,CAA+B8C,OAAO,CAA1C,MAAI9C,CAAJ,EAAoD;AACzD;AACA,cAAA,IAAA,CAAA,MAAA,EAFyD,OAEzD,EAFyD,CAAA;;;AAGzD,cAAA,IAAA,CAAA,cAAA,EAA0B/B,MAAM,CAAhC,MAAA;;AACA,cAAA,IAAA,CAAA,SAAA,EAAqB;AACnB8E,UAAAA,IAAI,EADe,MAAA;AAEnBvF,UAAAA,IAAI,EAAES;AAFa,SAArB;AAZoD,OAAA,CAAA;AAmBtD;;AAnBFyE,KAAAA;AArI4G;AA0J7G;;;;SAEG/E,eAAiB;AACnB,UAAI,CAAC,KAAA,aAAA,CAAL,iBAAA,EAA2C;AACzCgB,QAAAA,GAAG,CAAHA,IAAAA,CAAS0D,QAAQ,CAARA,QAAAA,CAAT1D,iBAAAA;AACA,aAAA,aAAA,CAAA,iBAAA,GAAA,IAAA;AACD;;AACD,aAAO,KAAP,kBAAA;AACD;AAED;;AAEG;;;;WACH+C,uBAAW;AACT,aAAO,KAAA,MAAA,CAAP,WAAA;AACD;AAED;;;;;;;AAOG;;;;;8EACGsB,kBAAO,IAAPA;AAAAA;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,sBACA,CAAA,IAAA,IAAS,OAAA,IAAA,KAAT,QAAA,IAAqCzB,KAAK,CAALA,OAAAA,CAAzC,IAAyCA,CADrCyB;AAAAA;AAAAA;AAAAA;;AAAAA,sBAEI,SAAS,CAAT,GAAA,CAAA,cAAA,CAA6B;AACjCzE,kBAAAA,OAAO,EAAE8D,QAAQ,CAARA,MAAAA,CADwB,kBACxBA,EADwB;AAEjC7E,kBAAAA,IAAI,EAAEyF;AAF2B,iBAA7B,CAFJD;;AAAAA;AAQE,gBAAA,MARFA,GAQJ,IARIA,CAQE,MARFA,EAQY/E,MARZ+E,GAQJ,IARIA,CAQY/E,MARZ+E;;AAAAA,sBAUA,OAAA,MAAA,KAAA,QAAA,IAA8B1G,MAAM,CAANA,MAAAA,KAAlC,CAVI0G;AAAAA;AAAAA;AAAAA;;AAAAA,sBAWI,SAAS,CAAT,GAAA,CAAA,cAAA,CAA6B;AACjCzE,kBAAAA,OAAO,EAAE8D,QAAQ,CAARA,MAAAA,CADwB,oBACxBA,EADwB;AAEjC7E,kBAAAA,IAAI,EAAEyF;AAF2B,iBAA7B,CAXJD;;AAAAA;AAAAA,sBAiBA/E,MAAM,KAANA,SAAAA,IAAwB,CAACsD,KAAK,CAALA,OAAAA,CAAzBtD,MAAyBsD,CAAzBtD,KAAmD,OAAA,MAAA,KAAA,QAAA,IAA8BA,MAAM,KAA3F,IAAIA,CAjBA+E;AAAAA;AAAAA;AAAAA;;AAAAA,sBAkBI,SAAS,CAAT,GAAA,CAAA,cAAA,CAA6B;AACjCzE,kBAAAA,OAAO,EAAE8D,QAAQ,CAARA,MAAAA,CADwB,oBACxBA,EADwB;AAEjC7E,kBAAAA,IAAI,EAAEyF;AAF2B,iBAA7B,CAlBJD;;AAAAA;AAAAA,kDAwBG,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,kBAAA,MAAA,CAAA,WAAA,CAAiB;AAAE1G,oBAAAA,MAAF,EAAEA,MAAF;AAAU2B,oBAAAA,MAAAA,EAAAA;AAAV,mBAAjB,EAAqCmD,qBAAqB,CAAA,OAAA,EAA1D,MAA0D,CAA1D;AADF,iBAAO,CAxBH4B;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,O;;;;;;;;AA6BN;;;;;AAKG;;;;WACHE,mBAAS,OAATA,EAAS,QAATA,EAAgH;AAC9G,WAAA,WAAA,CAAA,OAAA,EAAA,QAAA;AACD;AAED;;;;AAIG;;;;WAEHC,qBAAW,SAAXA,EAAW,QAAXA,EAAqE;AACnE,WAAA,kBAAA,CAAA,SAAA;;AACA,kGAAO,SAAP,EAAA,QAAA;AACD;;;WAEDC,YAAE,SAAFA,EAAE,QAAFA,EAA4D;AAC1D,WAAA,kBAAA,CAAA,SAAA;;AACA,yFAAO,SAAP,EAAA,QAAA;AACD;;;WAEDC,cAAI,SAAJA,EAAI,QAAJA,EAA8D;AAC5D,WAAA,kBAAA,CAAA,SAAA;;AACA,2FAAO,SAAP,EAAA,QAAA;AACD;;;WAEDC,yBAAe,SAAfA,EAAe,QAAfA,EAAyE;AACvE,WAAA,kBAAA,CAAA,SAAA;;AACA,sGAAO,SAAP,EAAA,QAAA;AACD;;;WAEDC,6BAAmB,SAAnBA,EAAmB,QAAnBA,EAA6E;AAC3E,WAAA,kBAAA,CAAA,SAAA;;AACA,0GAAO,SAAP,EAAA,QAAA;AAnT8C,K,CAAA;AAuThD;;AACA;;;;AAIG;;;;;uFACGC;AAAAA;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,uBAE+D,KAAA,OAAA,CAAa;AAC5ElH,kBAAAA,MAAM,EAAE;AADoE,iBAAb,CAF/DkH;;AAAAA;AAAAA;AAEI,gBAAA,QAFJA,uBAEI,QAFJA;AAEI,gBAAA,OAFJA,uBAEI,OAFJA;AAEI,gBAAA,UAFJA,uBAEI,UAFJA;AAEqCC,gBAAAA,cAFrCD,uBAEqCC,cAFrCD;AACA;AAMF,qBAAA,IAAA,CAAA,SAAA,EAAqB;AAAEtG,kBAAAA,OAAAA,EAAAA;AAAF,iBAArB;;AAEA,qBAAA,mBAAA,CAAyB;AAAEA,kBAAAA,OAAF,EAAEA,OAAF;AAAWuG,kBAAAA,cAAAA,EAAAA;AAAX,iBAAzB;;AACA,qBAAA,yBAAA,CAA+B;AAAEhC,kBAAAA,QAAF,EAAEA,QAAF;AAAYE,kBAAAA,UAAAA,EAAAA;AAAZ,iBAA/B;;AACA,qBAAA,sBAAA,CAAA,QAAA;;AAXE6B;AAAAA;;AAAAA;AAAAA;AAAAA;AAaF7E,gBAAAA,GAAG,CAAHA,KAAAA,CAAAA,gEAAAA;;AAbE6E;AAAAA;AAeF7E,gBAAAA,GAAG,CAAHA,IAAAA,CAAAA,mBAAAA;AACA,qBAAA,MAAA,CAAA,WAAA,GAAA,IAAA;AACA,qBAAA,IAAA,CAAA,cAAA;AAjBE6E;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,O;;;;;;;;AAqBN;;;;;;;AAOG;;;;WACHE,qBAAW,OAAXA,EAAW,QAAXA,EAAoI;AAAA;;AAAA,UAAlBC,UAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAL,KAAK;AAClI,UAAIC,EAAE,GAAN,QAAA;AACA,UAAMC,QAAQ,GAAd,OAAA;;AACA,UAAI,CAACtC,KAAK,CAALA,OAAAA,CAAL,QAAKA,CAAL,EAA8B;AAC5B,YAAI,CAACsC,QAAQ,CAAb,OAAA,EAAuB;AACrBA,UAAAA,QAAQ,CAARA,OAAAA,GAAAA,KAAAA;AACD;;AAED,YAAIA,QAAQ,CAARA,MAAAA,KAAAA,cAAAA,IAAsCA,QAAQ,CAARA,MAAAA,KAA1C,qBAAA,EAAqF;AACnF;AACAD,UAAAA,EAAE,GAAG,YAAA,GAAA,EAAA,GAAA,EAA2C;AAC9C,YAAA,MAAA,CAAA,sBAAA,CAA4BtF,GAAG,CAAHA,MAAAA,IAA5B,EAAA,EAA8CuF,QAAQ,CAARA,MAAAA,KAA9C,cAAA,EAAA,UAAA;;AACAC,YAAAA,QAAQ,CAAA,GAAA,EAARA,GAAQ,CAARA;AAFFF,WAAAA;AAFF,SAAA,MAMO,IAAIC,QAAQ,CAARA,MAAAA,KAAJ,yBAAA,EAAmD;AACxD,eAAA,UAAA,CAAA,MAAA,CAAA,OAAA,EAAA,EAAA;;AACA;AACD;AACF;;AACD,WAAA,gBAAA,CAAA,QAAA,EAAA,EAAA;AACD;;;WAiCD5B,cAAI,eAAJA,EAAI,cAAJA,EAAuD;AAAA;;AACrD,UAAI,CAAC,KAAA,aAAA,CAAL,IAAA,EAA8B;AAC5BtD,QAAAA,GAAG,CAAHA,IAAAA,CAAS0D,QAAQ,CAARA,QAAAA,CAAT1D,eAAAA;AACA,aAAA,aAAA,CAAA,IAAA,GAAA,IAAA;AACD;;AACD,UAAI,OAAA,eAAA,KAAA,QAAA,KAAwC,CAAA,cAAA,IAAmB4C,KAAK,CAALA,OAAAA,CAA/D,cAA+DA,CAA3D,CAAJ,EAA+F;AAC7F,eAAO,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,cAAI;AACF,YAAA,MAAA,CAAA,WAAA,CAAiB;AAAEjF,cAAAA,MAAM,EAAR,eAAA;AAA2B2B,cAAAA,MAAM,EAAE8F;AAAnC,aAAjB,EAAsE3C,qBAAqB,CAAA,OAAA,EAAA,MAAA,EAA3F,KAA2F,CAA3F;AADF,WAAA,CAEE,OAAA,KAAA,EAAc;AACdE,YAAAA,MAAM,CAANA,KAAM,CAANA;AACD;AALH,SAAO,CAAP;AAOD;;AACD,UAAI0C,eAAe,IAAI,OAAA,eAAA,KAAnBA,QAAAA,IAA0D,OAAA,cAAA,KAA9D,UAAA,EAAoG;AAClG,eAAO,KAAA,WAAA,CAAA,eAAA,EAAP,cAAO,CAAP;AACD;;AACD,aAAO,KAAA,SAAA,CAAP,eAAO,CAAP;AACD;AAED;;;AAGG;;;;WACHC,mBAAS,OAATA,EAAyC;AACvC,UAAA,MAAA;;AACA,cAAQnB,OAAO,CAAf,MAAA;AACE,aAAA,cAAA;AACEoB,UAAAA,MAAM,GAAG,KAAA,eAAA,GAAuB,CAAC,KAAxB,eAAuB,CAAvB,GAATA,EAAAA;AACA;;AAEF,aAAA,cAAA;AACEA,UAAAA,MAAM,GAAG,KAAA,eAAA,IAATA,IAAAA;AACA;;AAEF,aAAA,qBAAA;AACE,eAAA,WAAA,CAAA,OAAA,EAAA,IAAA;;AACAA,UAAAA,MAAM,GAANA,IAAAA;AACA;;AAEF,aAAA,aAAA;AACEA,UAAAA,MAAM,GAAG,KAAA,cAAA,IAATA,IAAAA;AACA;;AAEF;AACE,gBAAM,IAAA,KAAA,CAAU7B,QAAQ,CAARA,MAAAA,CAAAA,eAAAA,CAAgCS,OAAO,CAAvD,MAAgBT,CAAV,CAAN;AAnBJ;;AAsBA,aAAO;AACL8B,QAAAA,EAAE,EAAErB,OAAO,CADN,EAAA;AAELsB,QAAAA,OAAO,EAAEtB,OAAO,CAFX,OAAA;AAGLoB,QAAAA,MAAAA,EAAAA;AAHK,OAAP;AAKD;AAED;;;;;;AAMG;;;;WACOG,wBAAc,OAAdA,EAA8B;AACtC,UAAI,CAAC,KAAA,MAAA,CAAL,WAAA,EAA8B;AAC5B,aAAA,MAAA,CAAA,WAAA,GAAA,IAAA;AACA,aAAA,IAAA,CAAA,SAAA,EAAqB;AAAEnH,UAAAA,OAAAA,EAAAA;AAAF,SAArB;AACAyB,QAAAA,GAAG,CAAHA,KAAAA,CAAU0D,QAAQ,CAARA,IAAAA,CAAAA,SAAAA,CAAV1D,OAAU0D,CAAV1D;AACD;AACF;AAED;;;;;;;;;;AAUG;;;;WACO2F,2BAAiB,aAAjBA,EAAiB,YAAjBA,EAA+D;AACvE,UAAI,KAAA,MAAA,CAAA,WAAA,IAA4B,CAAC,KAAA,MAAA,CAAD,yBAAA,IAA0C,CAA1E,aAAA,EAA2F;AACzF,aAAA,MAAA,CAAA,WAAA,GAAA,KAAA;AAEA,YAAA,KAAA;;AACA,YAAA,aAAA,EAAmB;AACjB5F,UAAAA,KAAK,GAAG,IAAA,gBAAA,CAAA,IAAA,EAAA;AAEN6F,UAAAA,YAAY,IAAIlC,QAAQ,CAARA,MAAAA,CAFlB3D,YAEkB2D,EAFV,CAAR3D;AAIAC,UAAAA,GAAG,CAAHA,KAAAA,CAAAA,KAAAA;AALF,SAAA,MAMO;AACLD,UAAAA,KAAK,GAAG,IAAA,gBAAA,CAAA,IAAA,EAAA;AAEN6F,UAAAA,YAAY,IAAIlC,QAAQ,CAARA,MAAAA,CAFlB3D,uBAEkB2D,EAFV,CAAR3D;AAIAC,UAAAA,GAAG,CAAHA,KAAAA,CAAAA,KAAAA;AACA,eAAA,OAAA,GAAA,IAAA;AACA,eAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,eAAA,eAAA,GAAA,IAAA;AACA,eAAA,MAAA,CAAA,UAAA,GAAA,KAAA;AACA,eAAA,MAAA,CAAA,yBAAA,GAAA,IAAA;AACD;;AAED,aAAA,IAAA,CAAA,YAAA,EAAA,KAAA;AACD;AACF;AAED;;;;AAIG;;;;WACO6F,iCAAuB,UAAvBA,EAAuB,KAAvBA,EAAwD;AAChE5F,MAAAA,0BAA0B,CAAA,UAAA,EAAA,KAAA,EAA1BA,IAA0B,CAA1BA;;AACA,WAAA,iBAAA,CAAA,KAAA,EAA8BF,KAAK,GAAGA,KAAK,CAAR,OAAA,GAAnC,SAAA;AACD;AAED;;AAEG;;;;WACO+F,gCAAsB,QAAtBA,EAAqF;AAAA,UAAzCC,aAAyC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAzB,KAAyB;AAAA,UAAlBf,UAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAL,KAAK,CAAA,CAC7F;;AACA,UAAIgB,aAAa,GAAjB,QAAA;;AACA,UAAI,CAACpD,KAAK,CAALA,OAAAA,CAAL,aAAKA,CAAL,EAAmC;AACjC5C,QAAAA,GAAG,CAAHA,KAAAA,CAAAA,0EAAAA,EAAAA,aAAAA;AACAgG,QAAAA,aAAa,GAAbA,EAAAA;AACD;;AAN4F,iDAQ7F,QAR6F;AAAA;;AAAA;AAQ7F,4DAAgC;AAAA,cAAhC,OAAgC;;AAC9B,cAAI,OAAA,OAAA,KAAJ,QAAA,EAAiC;AAC/BhG,YAAAA,GAAG,CAAHA,KAAAA,CAAAA,gEAAAA,EAAAA,QAAAA;AACAgG,YAAAA,aAAa,GAAbA,EAAAA;AACA;AACD;AAb0F,SAAA,CAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiB7F,UAAI,CAACC,MAAM,CAAC,KAAA,MAAA,CAAD,QAAA,EAAX,aAAW,CAAX,EAAkD;AAChD;AACA;AACA,YAAIF,aAAa,IAAInD,KAAK,CAALA,OAAAA,CAAc,KAAA,MAAA,CAA/BmD,QAAiBnD,CAAjBmD,IAAwD,KAAA,MAAA,CAAA,QAAA,CAAA,MAAA,GAAxDA,CAAAA,IAA2F,CAA/F,UAAA,EAA4G;AAC1G/F,UAAAA,GAAG,CAAHA,KAAAA,CAAAA,iFAAAA,EAAAA,aAAAA;AACD;;AAED,aAAA,MAAA,CAAA,QAAA,GAAA,aAAA;AACA,aAAA,IAAA,CAAA,iBAAA,EAAA,aAAA;AAzB2F,OAAA,CAAA;;;AA6B7F,UAAI,KAAA,eAAA,KAAyBgG,aAAa,CAA1C,CAA0C,CAA1C,EAA+C;AAC7C,aAAA,eAAA,GAAwBA,aAAa,CAAbA,CAAa,CAAbA,IAAxB,IAAA;AACD;AACF;AAED;;;;;;;;AAQG;;;;WACOE,+BAAmG;AAA/E,kBAA+E,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAA7E;AAAA,UAAA,OAAA,SAAA,OAAA;AAAA,UAAWpB,cAAX,SAAWA,cAAX;;AAC5B,UAAI,CAAA,OAAA,IAAY,CAAhB,cAAA,EAAiC;AAC/B9E,QAAAA,GAAG,CAAHA,KAAAA,CAAAA,wEAAAA,EAAoF;AAAEzB,UAAAA,OAAF,EAAEA,OAAF;AAAWuG,UAAAA,cAAAA,EAAAA;AAAX,SAApF9E;AACA;AACD;;AAED,UAAI8E,cAAc,KAAlB,SAAA,EAAkC;AAChC,aAAA,iBAAA,CAAA,IAAA;AADF,OAAA,MAEO;AACL,aAAA,cAAA,CAAA,OAAA;;AAEA,YAAIvG,OAAO,KAAK,KAAhB,OAAA,EAA8B;AAC5B,eAAA,OAAA,GAAA,OAAA;;AACA,cAAI,KAAA,MAAA,CAAJ,WAAA,EAA6B;AAC3B,iBAAA,IAAA,CAAA,cAAA,EAA0B,KAA1B,OAAA;AACD;AACF;AACF;AACF;AAED;;;;;;;;;AASG;;;;WACO4H,qCAAsG;AAA5E,kBAA4E,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAA1E;AAAA,UAAA,QAAA,SAAA,QAAA;AAAA,UAAYnD,UAAZ,SAAYA,UAAZ;;AAClC,UAAI,OAAA,UAAA,KAAJ,SAAA,EAAqC;AACnChD,QAAAA,GAAG,CAAHA,KAAAA,CAAAA,0EAAAA,EAAsF;AAAEgD,UAAAA,UAAAA,EAAAA;AAAF,SAAtFhD;AACA;AACD;;AAED,UAAIgD,UAAU,KAAK,KAAA,MAAA,CAAnB,UAAA,EAA2C;AACzC,aAAA,MAAA,CAAA,UAAA,GAAA,UAAA;;AACA,aAAA,sBAAA,CAA4BF,QAAQ,IAApC,EAAA;AACD;AACF;AAED;;AAEG;;;;WACOsD,4BAAkB,SAAlBA,EAAoC;AAC5C,UAAI,KAAA,aAAA,CAAA,MAAA,CAAA,SAAA,MAAJ,KAAA,EAAoD;AAClDpG,QAAAA,GAAG,CAAHA,IAAAA,CAAS0D,QAAQ,CAARA,QAAAA,CAAAA,MAAAA,CAAT1D,SAAS0D,CAAT1D;AACA,aAAA,aAAA,CAAA,MAAA,CAAA,SAAA,IAAA,IAAA;AACD;AACF;;;;EAtmBH,gB;;AAAM6C,eAAAA,CAAAA,mBAAAA,EACgD,eADhDA,EACgD;AAClDC,EAAAA,QAAQ,EAD0C,IAAA;AAElDC,EAAAA,WAAW,EAFuC,KAAA;AAGlDC,EAAAA,UAAU,EAHwC,KAAA;AAIlDC,EAAAA,WAAW,EAJuC,KAAA;AAKlDC,EAAAA,yBAAyB,EALyB,KAAA;AAMlDC,EAAAA,oBAAoB,EAAE;AAN4B,CADhDN,CAAAA;;ACzCN,IAAMwD,QAAQ,GAAIC,SAAZD,QAAYC,CAAAA,OAAD;AAAA,SAAqC;AACpDC,IAAAA,UAAU,EAAED,OAAO,CAAPA,UAAAA,IAAsB,CADkB,QAClB,CADkB;AAEpDE,IAAAA,SAAS,EAAEF,OAAO,CAAPA,SAAAA,IAFyC,GAAA;AAGpDG,IAAAA,IAAI,EAAEH,OAAO,CAAPA,IAAAA,IAAgB;AAH8B,GAArC;AAAA,CAAjB,C,CAAA;;;AAOA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAA,OAAA,EAAA,IAAA,EAAuF;AACpG,MAAMC,cAAc,GAApB,EAAA;AACAL,EAAAA,OAAO,CAAPA,UAAAA,CAAAA,OAAAA,CAA4BM,UAAAA,SAAD,EAAc;AACvCD,IAAAA,cAAc,CAAdA,SAAc,CAAdA,GAA4BE,UAAU,CAAVA,SAAU,CAAVA,CAAAA,MAAAA,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAA5BF,QAA4BE,CAA5BF;AADFL,GAAAA;AAGA,SAAA,cAAA;AALF,CAAA,C,CAAA;;;AAQA,IAAM5F,SAAS,GAAG,SAAZA,SAAY,CAAA,OAAA,EAAA,GAAA,EAAqD;AACrE,MAAIoG,MAAM,GAD2D,EACrE,CADqE,CAAA;;AAIrEA,EAAAA,MAAM,IAAI9K,MAAM,CAANA,IAAAA,CAAY+K,GAAG,CAAf/K,MAAAA,EAAAA,GAAAA,CACF4K,UAAAA,SAAD;AAAA,WAAwCA,GAAAA,MAAAA,CAAxC,SAAwCA,EAAaG,GAAbH,EAAaG,MAAbH,CAAaG,GAAG,CAAHA,MAAAA,CADlD/K,SACkD+K,CAAbH,CAAxC;AAAA,GADG5K,EAAAA,IAAAA,CAEFsK,OAAO,CAFfQ,SAAU9K,CAAV8K;AAIA,SAAA,MAAA;AARF,CAAA;;AAWA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAA,OAAA,EAAA,IAAA,EAA+D;AAC1E;AACA,MAAMC,YAAY,GAAGZ,QAAQ,CAA7B,OAA6B,CAA7B;AAEA,MAAMU,GAAG,GAAG;AACVL,IAAAA,MAAM,EAAEA,MAAM,CAAA,YAAA,EADJ,IACI,CADJ;AAEVhG,IAAAA,SAAS,EAAEwG;AAFD,GAAZ;AAIAH,EAAAA,GAAG,CAAHA,SAAAA,GAAgBrG,SAAS,CAAA,YAAA,EAAzBqG,GAAyB,CAAzBA;AAEA,SAAOE,YAAY,CAAZA,IAAAA,GAAAA,GAAAA,GAA0BF,GAAG,CAApC,SAAA;AAVF,CAAA;;IC1BA,Y;;;;;AAaExD,wBAAuF,IAAvFA,EAAuF;AAAA;;AAAA;;AAA3E,QAAA,GAAA,GAA2E,IAA3E,CAAA,GAAA;AAAA,QAAA,MAAA,GAA2E,IAA3E,CAAA,MAAA;AAAA,QAAehB,QAAf,GAA2E,IAA3E,CAAeA,QAAf;AACV;;AADqF,IAAA,eAAA,iCAAA,KAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,iCAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,iCAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,iCAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,iCAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,iCAAA,eAAA,EAAA,KAAA,CAAA,CAAA;;AAErF,WAAA,GAAA,GAAA,GAAA;AACA,WAAA,MAAA,GAAc4E,MAAM,IAApB,QAAA;AACA,WAAA,QAAA,GAAgB5E,QAAQ,IAAIV,gBAA5B,EAAA;AACA,WAAA,MAAA,GAAA,SAAA;AACA,WAAA,WAAA,GAAA,SAAA;AACA,WAAA,aAAA,GAAA,KAAA;;AACA,WAAA,WAAA;;AARqF;AAStF;;;;WAEDuF,uBAAW;AAAA;;AACT,WAAA,WAAA,GAAmBC,MAAM,CACvBC,WAAW,CAAC,YAAK;AACf,YAAI,MAAA,CAAA,MAAA,IAAe,MAAA,CAAA,MAAA,CAAnB,MAAA,EAAuC;AACrCC,UAAAA,aAAa,CAAC,MAAKC,CAAnBD,WAAa,CAAbA;;AACA,cAAI,CAAC,MAAKE,CAAV,aAAA,EAAyB;AACvB,YAAA,MAAKC,CAAL,IAAA,CAAA,OAAA;AACD;;AACD,UAAA,MAAKD,CAAL,aAAA,GAAA,KAAA;AACA,UAAA,MAAKnL,CAAL,MAAA,GAAA,SAAA;AACD;;AACD,YAAI,MAAA,CAAA,MAAA,KAAJ,SAAA,EAA+BiL,aAAa,CAAC,MAAKC,CAAnBD,WAAa,CAAbA;AATtB,OAAA,EADb,GACa,CADY,CAAzB;AAaD;;;WAEDI,gBAAI;AAAA,UAAA,YAAA;;AACF,WAAA,MAAA,GAAcrL,MAAM,CAANA,IAAAA,CAAY,KAAA,GAAA,CAAZA,IAAAA,EAA2B,KAA3BA,MAAAA,EAAwC,KAAtD,QAAcA,CAAd;AACA,UAAI,CAAA,YAAA,GAAA,KAAJ,MAAI,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,IAAA,YAAA,CAAJ,KAAA,EAAwB,KAAA,MAAA,CAAA,KAAA;AACxB,aAAOC,OAAO,CAAd,OAAOA,EAAP;AACD;;;WAEDqC,iBAAK;AACH,WAAA,aAAA,GAAA,IAAA;AACA,UAAI,KAAJ,MAAA,EAAiB,KAAA,MAAA,CAAA,KAAA;AAClB;;;WAEDgJ,kBAAQ,yBAARA,EAA2C;AACzC,UAAA,yBAAA,EAA+B;AAC7BtL,QAAAA,MAAM,CAANA,QAAAA,CAAAA,OAAAA,CAAwB,KAAA,GAAA,CAAxBA,IAAAA;AADF,OAAA,MAEO;AACLA,QAAAA,MAAM,CAANA,QAAAA,CAAAA,IAAAA,GAAuB,KAAA,GAAA,CAAvBA,IAAAA;AACD;AACF;;;;EAzDH,Y;ACEA;;;;AAIG;;;AACH,SAAA,SAAA,CAAA,GAAA,EAA8B;AAC5B,SAAO,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,QAAI;AACF,UAAMuL,GAAG,GAAGzK,QAAQ,CAARA,aAAAA,CAAZ,KAAYA,CAAZ;;AACAyK,MAAAA,GAAG,CAAHA,MAAAA,GAAa;AAAA,eAAM1K,OAAO,CAA1B0K,IAA0B,CAAb;AAAA,OAAbA;;AACAA,MAAAA,GAAG,CAAHA,OAAAA,GAAc;AAAA,eAAM1K,OAAO,CAA3B0K,KAA2B,CAAb;AAAA,OAAdA;;AACAA,MAAAA,GAAG,CAAHA,GAAAA,GAAAA,GAAAA;AAJF,KAAA,CAKE,OAAA,CAAA,EAAU;AACVlF,MAAAA,MAAM,CAANA,CAAM,CAANA;AACD;AARH,GAAO,CAAP;AAUD;AAED;;AAEG;;;AACH,IAAMmF,WAAW,GAAIxL,SAAfwL,WAAexL,CAAAA,MAAD,EAAmB;AACrC,MAAQc,QAAR,GAAA,MAAA,CAAQA,QAAR;AAEA,MAAM2K,QAAQ,GAAG3K,QAAQ,CAARA,aAAAA,CAAjB,sCAAiBA,CAAjB;;AACA,MAAA,QAAA,EAAc;AACZ,WAAO2K,QAAQ,CAAf,OAAA;AACD;;AAED,MAAMC,SAAS,GAAG5K,QAAQ,CAARA,aAAAA,CAAlB,2BAAkBA,CAAlB;;AACA,MAAA,SAAA,EAAe;AACb,WAAO4K,SAAS,CAAhB,OAAA;AACD;;AAED,MAAI5K,QAAQ,CAARA,KAAAA,IAAkBA,QAAQ,CAARA,KAAAA,CAAAA,MAAAA,GAAtB,CAAA,EAAiD;AAC/C,WAAOA,QAAQ,CAAf,KAAA;AACD;;AAED,SAAOd,MAAM,CAANA,QAAAA,CAAP,QAAA;AAjBF,CAAA;AAoBA;;AAEG;;;SACH,W;;;AAkBA;;;AAGG;;;;0EArBH,mBAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACUc,YAAAA,QADV,GAAyC,MAAzC,CACUA,QADV,EAAyC;;AAInC6K,YAAAA,IAJN,GAIa7K,QAAQ,CAARA,aAAAA,CAAX,kCAAWA,CAJb;AAAA,4BAKM6K,IALN;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKqBC,SAAS,CAACD,IAAI,CAAjC,IAA4B,CAL9B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,+CAMWA,IAAI,CAAX,IANJ;;AAAA;AAAyC;AAUvCA,YAAAA,IAAI,GAAGrF,KAAK,CAALA,IAAAA,CAAWxF,QAAQ,CAARA,gBAAAA,CAAXwF,yBAAWxF,CAAXwF,EAAAA,IAAAA,CAAwFuF,UAAAA,KAAD;AAAA,qBAAWC,OAAO,CAACD,KAAK,CAAtHF,IAAgH,CAAlB;AAAA,aAAvFrF,CAAPqF;AAVF,4BAWMA,IAXN;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAWqBC,SAAS,CAACD,IAAI,CAAjC,IAA4B,CAX9B;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,+CAYWA,IAAI,CAAX,IAZJ;;AAAA;AAAA,+CAeE,IAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsBA,IAAMI,eAAe;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,2BAChBP,WAAW,CADkB,MAClB,CADK;AAAA;AAAA,mBAEVS,WAAW,CAAA,MAAA,CAFD;;AAAA;AAAA;AAAA;AACtBD,cAAAA,IADsB;AAEtBL,cAAAA,IAFsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfI,eAAe;AAAA;AAAA;AAAA,GAArB;AAKA;;AAEG;;;SACY,gB;;;;;+EAAA,mBAAA,MAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEkBA,eAD3B,EADS;;AAAA;AAELG,YAAAA,cAFK;AACT;AAGFC,YAAAA,MAAM,CAANA,MAAAA,CACE;AACEhD,cAAAA,OAAO,EADT,KAAA;AAEED,cAAAA,EAAE,EAAEnF,oBAFN,EAAA;AAGE1C,cAAAA,MAAM,EAHR,2BAAA;AAIE2B,cAAAA,MAAM,EAAEkJ;AAJV,aADFC,EAAAA,IAAAA;AAJW;AAAA;;AAAA;AAAA;AAAA;AAcXzI,YAAAA,GAAG,CAAHA,KAAAA,CAAU;AACRJ,cAAAA,OAAO,EAAE8D,QAAQ,CAARA,MAAAA,CADD,gBACCA,EADD;AAERgF,cAAAA,aAAa;AAFL,aAAV1I;;AAdW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCf,IAAM2I,gBAAgB,gEACnBjQ,cAAc,CAAf,MADoB,EAAG,IAAH,uCAEnBA,cAAc,CAAf,QAFoB,EAAG,IAAH,uCAGnBA,cAAc,CAAf,MAHoB,EAAG,IAAH,uCAInBA,cAAc,CAAf,MAJoB,EAAG,IAAH,uCAKnBA,cAAc,CAAf,OALoB,EAKM,IALN,qBAAtB;AAQA,IAAMkQ,eAAe,GAArB,yEAAA;AAEA,IAAMC,0BAA0B,GAAhC,cAAA;AAEA,IAAMC,cAAc,GAAG,CAAA,qBAAA,EAAA,mBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,eAAA,EAAA,4BAAA,EAAvB,aAAuB,CAAvB;AAUA,IAAMC,uBAAuB,GAAGC,gBAAgB,CAAhD,cAAgD,CAAhD,C,CAAA;;AAGA;AAAA,gFAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAEO,OAAA,QAAA,KAAJ,WAFH;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGSC,YAAAA,eAHT,GAG2B7L,QAAQ,CAARA,aAAAA,CAAxB,MAAwBA,CAH3B;AAAA;AAAA,mBAI8BmD,WAAW,CAAA,YAAA,EAAe;AAAE2I,cAAAA,KAAK,EAAP,KAAA;AAAgBC,cAAAA,IAAI,EAApB,eAAA;AAAuC3I,cAAAA,OAAO,EAAE;AAAhD,aAAf,CAJzC;;AAAA;AAAA;AAIWQ,YAAAA,QAJX,sBAIWA,QAJX;AAKGiI,YAAAA,eAAe,CAAfA,IAAAA,GAAAA,GAAAA,MAAAA,CAAAA,QAAAA,EAAAA,QAAAA,CAAAA;AACAA,YAAAA,eAAe,CAAfA,WAAAA,GAAAA,WAAAA;AACAA,YAAAA,eAAe,CAAfA,IAAAA,GAAAA,WAAAA;AACAA,YAAAA,eAAe,CAAfA,GAAAA,GAAAA,UAAAA;;AACA,gBAAIA,eAAe,CAAfA,OAAAA,IAA2BA,eAAe,CAAfA,OAAAA,CAA/B,QAAA,EAAiE;AAC/D,kBAAIA,eAAe,CAAfA,OAAAA,CAAAA,QAAAA,CAAJ,UAAIA,CAAJ,EAAkD;AAChD7L,gBAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA,CAAAA,eAAAA;AACD;AACF;;AAbJ;AAAA;;AAAA;AAAA;AAAA;AAeG4C,YAAAA,GAAG,CAAHA,IAAAA;;AAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA,WAAC,aAAD;AAAA;AAAA;;AAAA,SAAC,aAAD;AAAA;;IAmBA,K;AAuDEuD,mBAA+H;AAAA;;AAAnH,gBAAmH,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAjH;AAAA,qCAAE8F,cAAF;AAAA,QAAEA,cAAF,qCAAmBpP,eAAe,CAAlC,WAAA;AAAA,kCAAgDqP,WAAhD;AAAA,QAAgDA,WAAhD,kCAAA,KAAA;AAAA,6BAAqEC,MAArE;AAAA,QAAqEA,MAArE,6BAA8E,eAA9E;;AAAmH,IAAA,eAtDxFtP,CAAAA,IAAAA,EAAAA,gBAAAA,EAAAA,eAAe,CAACC,WAAhBD,CAsDwF;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,uBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,qBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,oBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,iBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,iBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAN5GmP,CAAAA,IAAAA,EAAAA,kBAAAA,EAAAA,aAAa,CAAC9O,gBAAd8O,CAM4G;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAJ3G,EAI2G,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,kBAAA,EAAA,KAAA,CAAA,CAAA;;AAC7H,SAAA,cAAA,GAAA,cAAA;AACA,SAAA,QAAA,GAAA,EAAA;AACA,SAAA,UAAA,GAH6H,KAG7H,CAH6H,CAAA;;AAI7H,SAAA,aAAA,GAJ6H,KAI7H,CAJ6H,CAAA;;AAK7H,SAAA,qBAAA,GAAA,IAAA;AACA,SAAA,iBAAA,GAAA,EAAA;AACA,SAAA,eAAA,GAAA,EAAA;AACA,SAAA,iBAAA,GAAyB,IAAzB,iBAAyB,EAAzB;AACA,SAAA,OAAA,GAAe,IAAA,OAAA,CAAY;AACzBI,MAAAA,YAAY,EADa,yBAAA;AAEzBC,MAAAA,SAAS,EAAE;AAFc,KAAZ,CAAf;AAIA,SAAA,MAAA,GAAA,MAAA;AACAC,IAAAA,OAAO,CAAPA,SAAAA,CAAAA,MAAAA;AACAC,IAAAA,SAAS,CAATA,MAAS,CAATA;AACA,SAAA,WAAA,GAAA,WAAA;AACA,SAAA,WAAA,GAAmBL,WAAW,GAA9B,IAAA;AACA,SAAA,kBAAA,GAAA,KAAA;AACA,SAAA,cAAA,GAAA,EAAA;AACD;;;;;2EAEKM;AAAAA;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,yBAwBa,OAAA,MAAA,GAAA,CAAA,IAAA,OAAA,CAAA,MAAA,SAAA,GAAA,OAAA,CAAA,CAAA,GAAF,EAxBXA,2BACJjJ,QADIiJ,EACJjJ,QADIiJ,gCACOlQ,eAAe,CADjB,UAALkQ,kDAEJC,aAFID,EAEJC,aAFID,qCAAK,KAALA,wDAIJE,gBAJIF,EAIJE,gBAJIF,sCAAK,gBAALA,kDAKJG,OALIH,EAKJG,OALIH,+BAKM;AACRI,kBAAAA,IAAI,EADI,SAAA;AAERzL,kBAAAA,OAAO,EAFC,IAAA;AAGR0L,kBAAAA,WAAW,EAHH,EAAA;AAIRC,kBAAAA,aAAa,EAJL,EAAA;AAKRC,kBAAAA,MAAM,EALE,EAAA;AAMRC,kBAAAA,UAAU,EAAE;AANJ,iBALNR,+CAaJS,WAbIT,EAaJS,WAbIT,mCAAK,EAALA,sDAcJU,eAdIV,EAcJU,eAdIV,sCAAK,IAALA,oDAeJlJ,SAfIkJ,EAeJlJ,SAfIkJ,iCAeQ;AACVV,kBAAAA,KAAK,EADK,KAAA;AAEVC,kBAAAA,IAAI,EAFM,eAAA;AAGV3I,kBAAAA,OAAO,EAAE;AAHC,iBAfRoJ,qBAAK,UAALA,UAAK,UAALA,2BAqBJW,QArBIX,EAqBJW,QArBIX,gCAAK,KAALA,mDAsBJY,eAtBIZ,EAsBJY,eAtBIZ,sCAAK,KAALA,yDAuBJa,gBAvBIb,EAuBJa,gBAvBIb,sCAuBe,KAvBfA;;AAAAA,qBAyBA,KAAJ,aAzBIA;AAAAA;AAAAA;AAAAA;;AAAAA,sBAyB0B,IAAA,KAAA,CAAN,qBAAM,CAzB1BA;;AAAAA;AAAAA;AAAAA,uBA0BiCrJ,WAAW,CAAA,QAAA,EAAhD,SAAgD,CA1B5CqJ;;AAAAA;AAAAA;AA0BE,gBAAA,QA1BFA,uBA0BE,QA1BFA;AA0Bc3I,gBAAAA,QA1Bd2I,uBA0Bc3I,QA1Bd2I;AA2BJ5J,gBAAAA,GAAG,CAAHA,IAAAA,CAAAA,QAAAA,EAAAA,YAAAA;AACA,qBAAA,QAAA,GAAA,QAAA;AACA,qBAAA,UAAA,GAAA,UAAA;AACA,qBAAA,gBAAA,GAAA,gBAAA;AACAA,gBAAAA,GAAG,CAAHA,eAAAA,CAAAA,QAAAA;AACA,oBAAA,aAAA,EAAmBA,GAAG,CAAtB,SAAmBA,GAAnB,KACKA,GAAG,CAAHA,UAAAA;AACL,qBAAA,qBAAA,GAAA,eAAA;AACI0K,gBAAAA,cAnCAd,GAmCJ,EAnCIA;;AAoCJ,oBAAIb,uBAAuB,IAA3B,eAAA,EAAgD;AACxC4B,kBAAAA,eADwC,GACnBvB,GAAAA,MAAAA,CAAAA,aAAa,CAAnB,qBAAMA,EAAsC9M,MAAtC8M,CAAsC9M,MAAM,CAANA,QAAAA,CAAjE,QAA2B8M,CADmB;AAExCwB,kBAAAA,SAFwC,GAE5BtO,MAAM,CAANA,YAAAA,CAAAA,OAAAA,CAAlB,eAAkBA,CAF4B;AAG9C,sBAAA,SAAA,EAAeoO,cAAc,GAA7B,SAAeA,CAAf,KACK;AACGG,oBAAAA,YADH,GACe,aAAA,MAAA,CAAgBxK,oBAAlC,EAAkB,CADf;AAEH/D,oBAAAA,MAAM,CAANA,YAAAA,CAAAA,OAAAA,CAAAA,eAAAA,EAAAA,YAAAA;AACAoO,oBAAAA,cAAc,GAAdA,YAAAA;AACD;AACF;;AACD,qBAAA,cAAA,GAAA,cAAA;AACMI,gBAAAA,cA/CFlB,GA+CmB,IAAA,GAAA,CAAvB,QAAuB,CA/CnBA;AAgDJ,oBAAIkB,cAAc,CAAdA,QAAAA,CAAAA,QAAAA,CAAJ,GAAIA,CAAJ,EAA2CA,cAAc,CAAdA,QAAAA,IAA3C,OAA2CA,CAA3C,KACKA,cAAc,CAAdA,QAAAA,IAAAA,QAAAA;;AACL,oBAAA,cAAA,EAAoB;AAClBA,kBAAAA,cAAc,CAAdA,IAAAA,GAAAA,mBAAAA,MAAAA,CAAAA,cAAAA,CAAAA;AA3Be,iBAxBblB,CAwBa;;;AA8BjB,qBAAA,WAAA,GAAmBpN,aAAa,CAGpBiO,sDAAAA,MAAAA,CAAAA,gBAAgB,GAAA,QAAA,GAHI,EAGpBA,EAHoB,iDAGpBA,EAHoB,MAGpBA,CAEDK,cAAc,CALO,IAGpBL,EAIiD,qJAJjDA,EAIiD,MAJjDA,CAIiD,KAP7B,WAGpBA,EAHZ,sBAGYA,CAHoB,CAAhC;AAWA,qBAAA,mBAAA,GAA2BjO,aAAa,CAAxC,sCAAwC,CAAxC;AACA,qBAAA,mBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AACA,qBAAA,mBAAA,CAAA,KAAA,CAAA,WAAA,CAAA,SAAA,EAAsD,KAAA,WAAA,CAAtD,QAAsD,EAAtD;AAEMuO,gBAAAA,IArEFnB,GAqEStN,MAAM,CAANA,QAAAA,CAAAA,aAAAA,CAAb,MAAaA,CArETsN;AAsEJmB,gBAAAA,IAAI,CAAJA,YAAAA,CAAAA,KAAAA,EAAAA,YAAAA;AACAA,gBAAAA,IAAI,CAAJA,YAAAA,CAAAA,MAAAA,EAAAA,UAAAA;AACAA,gBAAAA,IAAI,CAAJA,YAAAA,CAAAA,MAAAA,EAAAA,GAAAA,MAAAA,CAAAA,QAAAA,EAAAA,iBAAAA,CAAAA;AACA,qBAAA,SAAA,GAAA,IAAA;AAzEInB,yBA2EqE,KAAA,UAAA,IAAzE,EA3EIA,iCA2EIoB,eA3EJpB,EA2EIoB,eA3EJpB,sCA2EsB1I,eAApB,EA3EF0I,yDA2EyCqB,kBA3EzCrB,EA2EyCqB,kBA3EzCrB,sCA2E8D,EA3E9DA;AA4EEsB,gBAAAA,kBA5EFtB,GA4EuBuB,SAAS,CAAC/B,aAAa,CAAd,YAAA,EAApC,kBAAoC,CA5EhCQ;AA6EEwB,gBAAAA,oBA7EFxB,GA6EyBsB,kBAAkB,CAAlBA,eAAkB,CAAlBA,IAAuC9B,aAAa,CAAbA,YAAAA,CAA2BlI,eAA/F,EAAoEkI,CA7EhEQ;AA8EJ,qBAAA,iBAAA,GAAyBwB,oBAAoB,CAA7C,KAAA;;AAEMC,gBAAAA,WAhFFzB;AAAAA,wFAgFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACZ0B,aAAN,EADkB;;AAAA;AAAA,8DAEX,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,8BAAA,MAAA,CAAA,WAAA,CAAA,MAAA,yEAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AACxB;AACA,wCAAA,MAAA,CAAA,UAAA;;AACMC,wCAAAA,UAHkB,GAGL,MAAKC,CAAL,gBAAA,CAAA,SAAA,CAAnB,aAAmB,CAHK;AAIxBD,wCAAAA,UAAU,CAAVA,EAAAA,CAAAA,MAAAA,EAAuBrO,UAAAA,KAAD,EAAU;AAC9B,8CAAM,IAAN,GAAA,KAAA,CAAM,IAAN;AAAA,8CAAM,IAAN,GAAA,KAAA,CAAM,IAAN;AAAA,8CAAoB6C,KAApB,GAAA,KAAA,CAAoBA,KAApB;;AACA,8CAAIuI,IAAI,KAAJA,eAAAA,IAA4BzJ,IAAI,CAApC,OAAA,EAA8C;AAC5C;AACA,4CAAA,MAAK4M,CAAL,aAAA,GAAA,IAAA;;AACA,4CAAA,MAAKC,CAAL,cAAA,CAAoB,MAAA,CAApB,kBAAA;;AACAvO,4CAAAA,OAAO,CAAPA,SAAO,CAAPA;AAJF,2CAAA,MAKO,IAAA,KAAA,EAAW;AAChBwF,4CAAAA,MAAM,CAAC,IAAA,KAAA,CAAPA,KAAO,CAAD,CAANA;AACD;AATH4I,yCAAAA;AAWAA,wCAAAA,UAAU,CAAVA,KAAAA,CAAiB;AACfjD,0CAAAA,IAAI,EADW,aAAA;AAEfzJ,0CAAAA,IAAI,EAAE;AACJiL,4CAAAA,gBADI,EACJA,gBADI;AAEJO,4CAAAA,WAFI,EAEJA,WAFI;AAGJsB,4CAAAA,UAAU,EAAE,MAAA,CAHR,UAAA;AAIJtC,4CAAAA,cAAc,EAAE,MAAA,CAJZ,cAAA;AAKJuC,4CAAAA,qBAAqB,EAAE,MAAA,CALnB,qBAAA;AAMJrC,4CAAAA,MAAM,EAAE,MAAA,CANJ,MAAA;AAOJgB,4CAAAA,QAPI,EAOJA,QAPI;AAQJR,4CAAAA,OAAAA,EAAAA;AARI;AAFS,yCAAjBwB;;AAfwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA1B;AA6BAjP,8BAAAA,MAAM,CAANA,QAAAA,CAAAA,IAAAA,CAAAA,WAAAA,CAAiC,MAAA,CAAjCA,SAAAA;AACAA,8BAAAA,MAAM,CAANA,QAAAA,CAAAA,IAAAA,CAAAA,WAAAA,CAAiC,MAAA,CAAjCA,WAAAA;AACAA,8BAAAA,MAAM,CAANA,QAAAA,CAAAA,IAAAA,CAAAA,WAAAA,CAAiC,MAAA,CAAjCA,mBAAAA;AAhCF,6BAAO,CAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhFhBsN;;AAAAA,kCAgFEyB,WAhFFzB;AAAAA;AAAAA;AAAAA;;AAAAA,sBAsHAjJ,QAAQ,KAARA,YAAAA,IAA6BD,SAAS,CAA1C,KAtHIkJ;AAAAA;AAAAA;AAAAA;;AAuHF;AACMiC,gBAAAA,QAxHJjC,GAwHkB5I,GAAAA,MAAAA,CAAN,QAAMA,EAApB,QAAoBA,CAxHlB4I;AAAAA;AAAAA,uBAyHiBmC,KAAK,CAAA,QAAA,EAAW;AAAEC,kBAAAA,KAAK,EAAE;AAAT,iBAAX,CAzHtBpC;;AAAAA;AAyHIkC,gBAAAA,IAzHJlC;;AAAAA,sBA0HEkC,IAAI,CAAJA,OAAAA,CAAAA,GAAAA,CAAAA,eAAAA,MAAJ,0BA1HElC;AAAAA;AAAAA;AAAAA;;AAAAA,sBA2HM,IAAA,KAAA,CAAA,yCAAA,MAAA,CAAmDkC,IAAI,CAAJA,OAAAA,CAAAA,GAAAA,CAAzD,eAAyDA,CAAnD,CAAA,CA3HNlC;;AAAAA;AAAAA;AAAAA,uBA6HqBkC,IAAI,CAA3B,IAAuBA,EA7HrBlC;;AAAAA;AA6HI7I,gBAAAA,QA7HJ6I;AA8HIqC,gBAAAA,mBA9HJrC,GA8H0BsC,IAAiB,CAC3C;AACE3F,kBAAAA,UAAU,EAAE,CAAA,QAAA;AADd,iBAD2C,EAA7C,QAA6C,CA9H3CqD;AAoIF5J,gBAAAA,GAAG,CAAHA,IAAAA,CAAAA,mBAAAA,EAAAA,WAAAA;;AApIE4J,sBAqIEqC,mBAAmB,KAAKvL,SAAS,CAArC,IArIEkJ;AAAAA;AAAAA;AAAAA;;AAAAA;AAAAA,uBAsIMyB,WAAN,EAtIAzB;;AAAAA;AAAAA;AAAAA;;AAAAA;AAwIA,qBAAA,SAAA;AAxIAA,sBAyIM,IAAA,KAAA,CAAN,wBAAM,CAzINA;;AAAAA;AAAAA;AAAAA;;AAAAA;AAAAA;AAAAA,uBA4IIyB,WAAN,EA5IEzB;;AAAAA;AAAAA,kDA8IJ,SA9IIA;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,O;;;;;;;;;;WAiJNuC,iBAA0E;AAApE,mBAAoE,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAlE;AAAA,mCAAEC,QAAF;AAAA,UAAEA,QAAF,gCAAA,EAAA;AAAA,qCAAiBC,UAAjB;AAAA,UAA6BC,SAA7B,kCAAyC,EAAzC;;AACJ,UAAI,CAAC,KAAL,aAAA,EAAyB,MAAM,IAAA,KAAA,CAAN,mBAAM,CAAN;AACzB,WAAA,iBAAA,GAAA,QAAA;AACA,WAAA,SAAA,GAAA,SAAA;AACA,aAAO,KAAA,QAAA,CAAP,MAAO,EAAP;AACD;;;WAEDC,kBAAM;AAAA;;AACJ,aAAO,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,YAAI,CAAC,MAAKC,CAAV,UAAA,EAAsB;AACpB7J,UAAAA,MAAM,CAAC,IAAA,KAAA,CAAPA,4BAAO,CAAD,CAANA;AACA;AACD;;AAED,YAAM8J,YAAY,GAAG,MAAKjB,CAAL,gBAAA,CAAA,SAAA,CAArB,QAAqB,CAArB;;AACAiB,QAAAA,YAAY,CAAZA,KAAAA,CAAmB;AAAEnE,UAAAA,IAAI,EAAE;AAAR,SAAnBmE;;AACA,YAAMC,YAAY,GAAG,MAAKlB,CAAL,gBAAA,CAAA,SAAA,CAArB,QAAqB,CAArB;;AACA,YAAMmB,mBAAmB,GAAIC,SAAvBD,mBAAuBC,CAAAA,MAAD,EAAW;AACrC,cAAI,CAACA,MAAM,CAAX,QAAA,EAAsB;AACpB,YAAA,MAAKJ,CAAL,UAAA,GAAA,KAAA;AACA,YAAA,MAAKK,CAAL,eAAA,GAAA,EAAA;AACA,YAAA,MAAKC,CAAL,iBAAA,GAAA,EAAA;AACA3P,YAAAA,OAAO;AAJT,WAAA,MAKOwF,MAAM,CAAC,IAAA,KAAA,CAAPA,oBAAO,CAAD,CAANA;AANT,SAAA;;AAQA1F,QAAAA,YAAY,CAAA,YAAA,EAAA,MAAA,EAAZA,mBAAY,CAAZA;AAjBF,OAAO,CAAP;AAmBD;;;;8EAEK8P;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,qBACA,KAAJ,UADIA;AAAAA;AAAAA;AAAAA;;AAAAA;AAAAA,uBAEI,KAAN,MAAM,EAFJA;;AAAAA;AAIJ,qBAAA,SAAA;;AAJIA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,O;;;;;;;;;;WAONC,qBAAS;AACP,eAAA,SAAA,CAAA,OAAA,EAAmC;AACjC,eAAOC,OAAO,YAAPA,OAAAA,IAA8BA,OAAO,YAA5C,YAAA;AACD;;AACD,UAAIC,SAAS,CAAC,KAAVA,SAAS,CAATA,IAA6B5Q,MAAM,CAANA,QAAAA,CAAAA,IAAAA,CAAAA,QAAAA,CAA8B,KAA/D,SAAiCA,CAAjC,EAAgF;AAC9E,aAAA,SAAA,CAAA,MAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACD;;AACD,UAAI4Q,SAAS,CAAC,KAAVA,WAAS,CAATA,IAA+B5Q,MAAM,CAANA,QAAAA,CAAAA,IAAAA,CAAAA,QAAAA,CAA8B,KAAjE,WAAmCA,CAAnC,EAAoF;AAClF,aAAA,WAAA,CAAA,MAAA;AACA,aAAA,WAAA,GAAA,SAAA;AACD;;AACD,UAAI4Q,SAAS,CAAC,KAAVA,mBAAS,CAATA,IAAuC5Q,MAAM,CAANA,QAAAA,CAAAA,IAAAA,CAAAA,QAAAA,CAA8B,KAAzE,mBAA2CA,CAA3C,EAAoG;AAClG,aAAA,UAAA,GAAA,SAAA;AACA,aAAA,mBAAA,CAAA,MAAA;AACA,aAAA,mBAAA,GAAA,SAAA;AACD;;AACD,WAAA,aAAA,GAAA,KAAA;AACD;;;WAED6Q,2BAAe;AACb,WAAA,qBAAA,GAAA,KAAA;;AACA,WAAA,2BAAA,CAAA,KAAA;;AACA,WAAA,cAAA;AACD;;;WAED7C,2BAAe;AACb,WAAA,qBAAA,GAAA,IAAA;;AACA,WAAA,2BAAA,CAAA,IAAA;;AACA,WAAA,cAAA;AACD;;;WAED8C,uBAAgF;AAAA;;AAAA,UAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAE;;AAApE,sBAAoE,IAApE,CAAEpD,IAAF;AAAA,UAAEA,IAAF,0BAAA,SAAA;AAAA,yBAAoE,IAApE,CAAoBzL,OAApB;AAAA,UAAoBA,OAApB,6BAAA,IAAA;AAAA,6BAAoE,IAApE,CAAoC0L,WAApC;AAAA,UAAoCA,WAApC,iCAAkD,EAAlD;AAAA,UAAyDoD,IAAzD,GAAoE,wBAAA,CAAA,IAAA,EAAA,SAAA,CAApE;;AACV,aAAO,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,YAAMC,oBAAoB,GAAG,MAAK9B,CAAL,gBAAA,CAAA,SAAA,CAA7B,iBAA6B,CAA7B;;AACA,YAAMzO,OAAO,GAAIG,SAAXH,OAAWG,CAAAA,KAAD,EAAU;AACxB,4BAAyBA,KAAK,CAA9B,IAAA;AAAA,cAAM,GAAN,eAAM,GAAN;AAAA,cAAaqQ,OAAb,eAAaA,OAAb;AACAvN,UAAAA,GAAG,CAAHA,IAAAA,CAAAA,KAAAA;;AACA,cAAA,GAAA,EAAS;AACP2C,YAAAA,MAAM,CAANA,GAAM,CAANA;AADF,WAAA,MAEO,IAAA,OAAA,EAAa;AAClBxF,YAAAA,OAAO;AADF,WAAA,MAEAwF,MAAM,CAAC,IAAA,KAAA,CAAPA,oBAAO,CAAD,CAANA;AAPT,SAAA;;AASA1F,QAAAA,YAAY,CAAA,oBAAA,EAAA,MAAA,EAAZA,OAAY,CAAZA;AACA,YAAMuQ,iBAAiB,GAAGnN,oBAA1B,EAAA;;AACA,QAAA,MAAKoN,CAAL,aAAA,CAAA,iBAAA,EAAsC;AACpCtG,UAAAA,MAAM,EAD8B,QAAA;AAEpC5E,UAAAA,QAAQ,EAAEhB;AAF0B,SAAtC;;AAIA+L,QAAAA,oBAAoB,CAApBA,KAAAA,CAA2B;AACzBhF,UAAAA,IAAI,EADqB,sBAAA;AAEzBzJ,UAAAA,IAAI,EAAE;AACJkL,YAAAA,OAAO,EAAA,aAAA,CAAA;AACLC,cAAAA,IADK,EACLA,IADK;AAELzL,cAAAA,OAFK,EAELA,OAFK;AAGL0L,cAAAA,WAAAA,EAAAA;AAHK,aAAA,EADH,IACG,CADH;AAOJuD,YAAAA,iBAPI,EAOJA,iBAPI;AAQJE,YAAAA,QAAQ,EAAE;AARN;AAFmB,SAA3BJ;AAjBF,OAAO,CAAP;AA+BD;;;WAEDK,oBAAU,IAAVA,EAAiE;AAAA;;AAAA,UAAnCrO,MAAmC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAE;AAC/D,UAAMsO,gBAAgB,GAAG,KAAA,gBAAA,CAAA,SAAA,CAAzB,aAAyB,CAAzB;AACA,UAAMC,SAAS,GAAGC,IAAI,GAAOA,IAAAA,MAAAA,CAAP,IAAOA,CAAP,GAAtB,EAAA;AACAF,MAAAA,gBAAgB,CAAhBA,KAAAA,CAAuB;AAAEtF,QAAAA,IAAI,EAAN,aAAA;AAAuBzJ,QAAAA,IAAI,EAAE;AAAEiP,UAAAA,IAAI,EAAED;AAAR;AAA7B,OAAvBD;;AAEA,UAAMG,iBAAiB,GAAI7Q,SAArB6Q,iBAAqB7Q,CAAAA,KAAD,EAAU;AAClC,YAAIA,KAAK,CAALA,IAAAA,KAAJ,sBAAA,EAA2C;AACzC;AACA,cAAQ8Q,UAAR,GAAuB9Q,KAAK,CAA5B,IAAA,CAAQ8Q,UAAR;AACA,cAAMC,QAAQ,GAAG,IAAA,GAAA,CAAA,GAAA,MAAA,CAAW,OAAKjN,CAAhB,QAAA,EAAkC6M,SAAlC,EAAkCA,MAAlC,CAHwB,SAGxB,CAAA,CAAjB,CAHyC,CAAA;;AAKzCI,UAAAA,QAAQ,CAARA,YAAAA,CAAAA,MAAAA,CAAAA,WAAAA,EAAAA,MAAAA;AACAA,UAAAA,QAAQ,CAARA,YAAAA,CAAAA,MAAAA,CAAAA,YAAAA,EAAAA,UAAAA;AACAjS,UAAAA,MAAM,CAANA,IAAAA,CAAAA,MAAAA,EAAAA,OAAAA,CAA6B2F,UAAAA,CAAD,EAAM;AAChCsM,YAAAA,QAAQ,CAARA,YAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAgC3O,MAAM,CAAtC2O,CAAsC,CAAtCA;AADFjS,WAAAA;;AAGA,cAAI,OAAA,CAAJ,cAAA,EAAyB;AACvBiS,YAAAA,QAAQ,CAARA,IAAAA,GAAmC,mBAAA,MAAA,CAAA,OAAA,CAAnCA,cAAmC,CAAnCA;AACD;;AACD,cAAMC,YAAY,GAAG,IAAA,YAAA,CAAiB;AAAEC,YAAAA,GAAG,EAAL,QAAA;AAAiB5L,YAAAA,QAAQ,EAAEf;AAA3B,WAAjB,CAArB;AACA0M,UAAAA,YAAY,CAAZA,IAAAA;AACD;AAhBH,OAAA;;AAmBAjR,MAAAA,YAAY,CAAA,gBAAA,EAAA,MAAA,EAAZA,iBAAY,CAAZA;AACD;;;;uFAEKmR,mBAA2E,KAA3EA;AAAAA;;AAAAA;AAAAA;AAAAA;AAAAA;AAAiB,gBAAA,QAAjBA,GAA2E,KAA3EA,CAAiB,QAAjBA,EAAiB,UAAjBA,GAA2E,KAA3EA,CAAiB,UAAjBA,qBAA2E,KAA3EA,CAAyCC,UAAzCD,EAAyCC,UAAzCD,iCAAsD,KAAtDA;;AAAAA,sBACA,CAAChF,aAAa,CAAbA,qBAAAA,CAAAA,QAAAA,CAAD,QAACA,CAAD,IAA2D,CAAClQ,6BAA6B,CAA7F,QAA6F,CADzFkV;AAAAA;AAAAA;AAAAA;;AAAAA,sBAC2G,IAAA,KAAA,CAAN,sBAAM,CAD3GA;;AAAAA;AAAAA;AAAAA,uBAEsB,KAAA,iBAAA,CAAA,cAAA,CAAsC;AAAEhC,kBAAAA,QAAF,EAAEA,QAAF;AAAYmC,kBAAAA,UAAAA,EAAAA;AAAZ,iBAAtC,CAFtBH;;AAAAA;AAEEE,gBAAAA,WAFFF;AAGEI,gBAAAA,SAHFJ,GAGcE,WAAW,CAA7B,kBAHIF;AAIEK,gBAAAA,aAJFL,GAIkBE,WAAW,CAAjC,YAJIF;AAKEM,gBAAAA,cALFN,GAKJ,QALIA;AAMEO,gBAAAA,iBANFP,GAMsBlV,6BAA6B,CAAvD,QAAuD,CANnDkV;AAAAA;AAAAA;AAAAA,uBAQ2B,KAAA,OAAA,CAAA,qBAAA,CAAA,SAAA,EAAA,aAAA,EAA6D;AAAEhC,kBAAAA,QAAQ,EAAV,cAAA;AAA4BmC,kBAAAA,UAAAA,EAAAA;AAA5B,iBAA7D,CAR3BH;;AAAAA;AAQIQ,gBAAAA,cARJR;;AAAAA,sBASEQ,cAAc,CAAdA,UAAAA,KAAJ,IATER;AAAAA;AAAAA;AAAAA;;AAAAA,oBAUA,UAVAA;AAAAA;AAAAA;AAAAA;;AAAAA,mDAUwBQ,cAAc,CAArB,OAVjBR;;AAAAA;AAAAA,mDAWA,cAXAA;;AAAAA;AAAAA;AAAAA,uBAcmB,KAAA,OAAA,CAAA,qBAAA,CAAA,SAAA,EAAA,aAAA,EAA6D;AAAEhC,kBAAAA,QAAQ,EAAV,iBAAA;AAA+BmC,kBAAAA,UAAAA,EAAAA;AAA/B,iBAA7D,EAArB,IAAqB,CAdnBH;;AAAAA;AAcIS,gBAAAA,MAdJT;;AAAAA,oBAeF,UAfEA;AAAAA;AAAAA;AAAAA;;AAAAA,mDAesBS,MAAM,CAAb,OAffT;;AAAAA;AAAAA,mDAgBF,MAhBEA;;AAAAA;AAAAA;AAAAA;;AAAAA,sBAkBF,kBAAA,IAAA,IAAA,kBAAA,KAAA,CAAA,IAAIrO,cAAAA,OAAAA,CAAAA,QAAAA,CAAJ,iDAAIA,CAlBFqO;AAAAA;AAAAA;AAAAA;;AAAAA;AAAAA,uBAoBwB,KAAA,OAAA,CAAA,qBAAA,CAAA,SAAA,EAAA,aAAA,EAA6D;AAAEhC,kBAAAA,QAAQ,EAAV,iBAAA;AAA+BmC,kBAAAA,UAAAA,EAAAA;AAA/B,iBAA7D,EAAxB,IAAwB,CApBxBH;;AAAAA;AAoBMU,gBAAAA,SApBNV;;AAAAA,oBAqBA,UArBAA;AAAAA;AAAAA;AAAAA;;AAAAA,mDAqBwBU,SAAS,CAAhB,OArBjBV;;AAAAA;AAAAA,mDAsBA,SAtBAA;;AAAAA;AAAAA;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,O;;;;;;;;;;WA4BNW,qBAAW,OAAXA,EAA2B;AAAA;;AACzB,aAAO,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,YAAI,OAAA,CAAJ,UAAA,EAAqB;AACnB,cAAMC,oBAAoB,GAAG,OAAKxD,CAAL,gBAAA,CAAA,SAAA,CAA7B,kBAA6B,CAA7B;;AACAwD,UAAAA,oBAAoB,CAApBA,KAAAA,CAA2B;AAAE1G,YAAAA,IAAI,EAAE;AAAR,WAA3B0G;;AACA,cAAMC,qBAAqB,GAAI/R,SAAzB+R,qBAAyB/R,CAAAA,KAAD,EAAU;AACtC,gBAAM,IAAN,GAAA,KAAA,CAAM,IAAN;AAAA,+BAAA,KAAA,CAEE2B,IAFF;AAAA,gBAEQ,QAFR,gBAEQ,QAFR;AAAA,gBAEQ,OAFR,gBAEQ,OAFR;AAAA,gBAEQ,QAFR,gBAEQ,QAFR;AAAA,gBAEuCqQ,UAFvC,gBAEuCA,UAFvC;;AAIA,gBAAI5G,IAAI,KAAR,2BAAA,EAA0C;AACxC,kBAAA,QAAA,EAAc;AACZnL,gBAAAA,OAAO,CAAPA,OAAO,CAAPA;AADF,eAAA,MAEO,IAAA,QAAA,EAAc;AACnBwF,gBAAAA,MAAM,CAAC,IAAA,KAAA,CAAPA,2BAAO,CAAD,CAANA;AADK,eAAA,MAEA,IAAA,UAAA,EAAgB;AACrB,oBAAMwM,cAAc,GAAG,OAAK3D,CAAL,gBAAA,CAAA,SAAA,CAAvB,WAAuB,CAAvB;;AACA,oBAAM4D,eAAe,GAAIC,SAAnBD,eAAmBC,CAAAA,YAAD,EAAiB;AACvC,sBAAIA,YAAY,CAAZA,IAAAA,KAAJ,oBAAA,EAAgD;AAC9C,wBAAIA,YAAY,CAAZA,IAAAA,CAAJ,QAAA,EAAgC;AAC9BlS,sBAAAA,OAAO,CAACkS,YAAY,CAAZA,IAAAA,CAARlS,OAAO,CAAPA;AADF,qBAAA,MAEO;AACLwF,sBAAAA,MAAM,CAAC,IAAA,KAAA,CAAPA,2BAAO,CAAD,CAANA;AACD;AACF;AAPH,iBAAA;;AASA1F,gBAAAA,YAAY,CAAA,cAAA,EAAA,MAAA,EAAZA,eAAY,CAAZA;AACA,oBAAMuQ,iBAAiB,GAAGnN,oBAA1B,EAAA;;AACA,gBAAA,OAAKoN,CAAL,aAAA,CAAA,iBAAA,EAAsC;AACpCtG,kBAAAA,MAAM,EAD8B,QAAA;AAEpC5E,kBAAAA,QAAQ,EAAEhB;AAF0B,iBAAtC;;AAIA4N,gBAAAA,cAAc,CAAdA,KAAAA,CAAqB;AAAE7G,kBAAAA,IAAI,EAAN,mBAAA;AAA6BzJ,kBAAAA,IAAI,EAAE;AAAEe,oBAAAA,OAAF,EAAEA,OAAF;AAAW4N,oBAAAA,iBAAAA,EAAAA;AAAX;AAAnC,iBAArB2B;AACD;AACF;AA7BH,WAAA;;AA+BAlS,UAAAA,YAAY,CAAA,oBAAA,EAAA,MAAA,EAAZA,qBAAY,CAAZA;AAlCF,SAAA,MAmCO0F,MAAM,CAAC,IAAA,KAAA,CAAPA,4BAAO,CAAD,CAANA;AApCT,OAAO,CAAP;AAsCD;;;WAED2M,uBAAa,QAAbA,EAAa,MAAbA,EAAoE;AAAA;;AAClE,aAAO,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,YAAI,OAAA,CAAJ,aAAA,EAAwB;AACtB,sCAA4BrQ,uBAAuB,CAAA,QAAA,EAAnD,MAAmD,CAAnD;AAAA,cAAM,MAAN,yBAAM,MAAN;AAAA,cAAgBC,OAAhB,yBAAgBA,OAAhB;;AACA,cAAI,CAAJ,OAAA,EAAc;AACZyD,YAAAA,MAAM,CAAC,IAAA,KAAA,CAAU4M,IAAI,CAAJA,SAAAA,CAAjB5M,MAAiB4M,CAAV,CAAD,CAAN5M;AACA;AACD;;AACD,cAAM6M,WAAW,GAAG,OAAKhE,CAAL,gBAAA,CAAA,SAAA,CAApB,OAAoB,CAApB;;AACA,cAAMiE,YAAY,GAAIvS,SAAhBuS,YAAgBvS,CAAAA,KAAD,EAAU;AAC7B,gBAAIA,KAAK,CAALA,IAAAA,KAAJ,gBAAA,EAAqC;AACnC,kBAAIA,KAAK,CAALA,IAAAA,CAAJ,OAAA,EAAwB;AACtBC,gBAAAA,OAAO,CAACD,KAAK,CAALA,IAAAA,CAARC,OAAO,CAAPA;AADF,eAAA,MAEO;AACLwF,gBAAAA,MAAM,CAAC,IAAA,KAAA,CAAUzF,KAAK,CAALA,IAAAA,CAAjByF,KAAO,CAAD,CAANA;AACD;AACF;AAPH,WAAA;;AASA1F,UAAAA,YAAY,CAAA,WAAA,EAAA,MAAA,EAAZA,YAAY,CAAZA;AACA,cAAMuQ,iBAAiB,GAAGnN,oBAA1B,EAAA;;AACA,UAAA,OAAKoN,CAAL,aAAA,CAAA,iBAAA;;AACA+B,UAAAA,WAAW,CAAXA,KAAAA,CAAkB;AAAElH,YAAAA,IAAI,EAAN,eAAA;AAAyBzJ,YAAAA,IAAI,EAAE;AAAEM,cAAAA,QAAF,EAAEA,QAAF;AAAYG,cAAAA,MAAZ,EAAYA,MAAZ;AAAoBkO,cAAAA,iBAAAA,EAAAA;AAApB;AAA/B,WAAlBgC;AAnBF,SAAA,MAoBO7M,MAAM,CAAC,IAAA,KAAA,CAAPA,8BAAO,CAAD,CAANA;AArBT,OAAO,CAAP;AAuBD;;;;0FAEK+M,mBAAmB,WAAnBA;AAAAA;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AACE,gBAAA,UADFA,GACJ,WADIA,CACE,UADFA,EACgBC,QADhBD,GACJ,WADIA,CACgBC,QADhBD;AAAAA,mDAEG,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,sBAAI,OAAA,CAAJ,aAAA,EAAwB;AACtB,wBAAIE,MAAM,CAANA,IAAAA,CAAAA,UAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAJ,EAAA,EAAkD;AAChDjN,sBAAAA,MAAM,CAAC,IAAA,KAAA,CAAPA,0EAAO,CAAD,CAANA;AACA;AACD;;AACD,wBAAMkN,kBAAkB,GAAG,OAAKrE,CAAL,gBAAA,CAAA,SAAA,CAA3B,wBAA2B,CAA3B;;AACA,wBAAMsE,YAAY,GAAI5S,SAAhB4S,YAAgB5S,CAAAA,KAAD,EAAU;AAC7B,0BAAIA,KAAK,CAALA,IAAAA,KAAJ,iCAAA,EAAsD;AACpD,4BAAIA,KAAK,CAALA,IAAAA,CAAJ,OAAA,EAAwB;AACtBC,0BAAAA,OAAO,CAACD,KAAK,CAALA,IAAAA,CAARC,OAAO,CAAPA;AADF,yBAAA,MAEO;AACLwF,0BAAAA,MAAM,CAAC,IAAA,KAAA,CAAUzF,KAAK,CAALA,IAAAA,CAAjByF,KAAO,CAAD,CAANA;AACD;AACF;AAPH,qBAAA;;AASA1F,oBAAAA,YAAY,CAAA,kBAAA,EAAA,MAAA,EAAZA,YAAY,CAAZA;AACA4S,oBAAAA,kBAAkB,CAAlBA,KAAAA,CAAyB;AAAEvH,sBAAAA,IAAI,EAAN,gCAAA;AAA0CzJ,sBAAAA,IAAI,EAAE;AAAEkR,wBAAAA,UAAF,EAAEA,UAAF;AAAcJ,wBAAAA,QAAAA,EAAAA;AAAd;AAAhD,qBAAzBE;AAhBF,mBAAA,MAiBOlN,MAAM,CAAC,IAAA,KAAA,CAAPA,8BAAO,CAAD,CAANA;AAlBT,iBAAO,CAFH+M;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,O;;;;;;;;;;;+FAwBAM;AAAAA;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,oBACC,KAAL,gBADIA;AAAAA;AAAAA;AAAAA;;AAAAA,sBAC8B,IAAA,KAAA,CAAN,uFAAM,CAD9BA;;AAAAA;AAAAA,mDAEG,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC,sBAAI,OAAA,CAAJ,UAAA,EAAqB;AACnB,wBAAMC,mBAAmB,GAAG,OAAKzE,CAAL,gBAAA,CAAA,SAAA,CAA5B,uBAA4B,CAA5B;;AACA,wBAAM0E,oBAAoB,GAAIhT,SAAxBgT,oBAAwBhT,CAAAA,KAAD,EAAU;AACrC,0BAAIA,KAAK,CAALA,IAAAA,KAAJ,2BAAA,EAAgD;AAC9C,4BAAIA,KAAK,CAALA,IAAAA,CAAJ,OAAA,EAAwB;AACtBC,0BAAAA,OAAO,CAACD,KAAK,CAALA,IAAAA,CAARC,OAAO,CAAPA;AADF,yBAAA,MAEO;AACLwF,0BAAAA,MAAM,CAAC,IAAA,KAAA,CAAUzF,KAAK,CAALA,IAAAA,CAAjByF,KAAO,CAAD,CAANA;AACD;;AACD,wBAAA,OAAA,CAAA,cAAA;AACD;AARH,qBAAA;;AAUA1F,oBAAAA,YAAY,CAAA,mBAAA,EAAA,MAAA,EAAZA,oBAAY,CAAZA;AACAgT,oBAAAA,mBAAmB,CAAnBA,KAAAA,CAA0B;AAAE3H,sBAAAA,IAAI,EAAE;AAAR,qBAA1B2H;;AACA,oBAAA,OAAKvE,CAAL,cAAA,CAAA,IAAA;AAdF,mBAAA,MAeO/I,MAAM,CAAC,IAAA,KAAA,CAAPA,4BAAO,CAAD,CAANA;AAhBT,iBAAO,CAFHqN;;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,O;;;;;;;;;;WAsBIvC,uBAAa,iBAAbA,EAA6H;AAApF,mBAAoF,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAF,EAAlF;AAAA,UAAA,GAAA,UAAA,GAAA;AAAA,UAAA,MAAA,UAAA,MAAA;AAAA,UAAelL,QAAf,UAAeA,QAAf;;AACjD,UAAA,iBAAA,EAAuB;AACrB,YAAM4N,YAAY,GAAG,KAAA,gBAAA,CAAA,SAAA,CAArB,QAAqB,CAArB;AACA,YAAMlC,QAAQ,GAAG,IAAA,GAAA,CAAQE,GAAG,IAAO,GAAA,MAAA,CAAA,KAAP,QAAO,EAAP,8BAAO,EAAP,MAAO,CAAnC,iBAAmC,CAAlB,CAAjB;;AACA,YAAI,KAAJ,cAAA,EAAyB;AACvB;AACA,cAAIF,QAAQ,CAAZ,IAAA,EAAmBA,QAAQ,CAARA,IAAAA,IAAAA,mBAAAA,MAAAA,CAAoC,KAAvD,cAAmBA,CAAAA,CAAnB,KACKA,QAAQ,CAARA,IAAAA,GAAAA,mBAAAA,MAAAA,CAAmC,KAAnCA,cAAAA,CAAAA;AACN;;AACD,YAAMmC,aAAa,GAAG,IAAA,YAAA,CAAiB;AAAEjC,UAAAA,GAAG,EAAL,QAAA;AAAiBhH,UAAAA,MAAjB,EAAiBA,MAAjB;AAAyB5E,UAAAA,QAAAA,EAAAA;AAAzB,SAAjB,CAAtB;AACA6N,QAAAA,aAAa,CAAbA,IAAAA;;AACA,YAAI,CAACA,aAAa,CAAlB,MAAA,EAA2B;AACzB,eAAA,sBAAA,CAAA,iBAAA,EAA+CnC,QAAQ,CAAvD,IAAA;;AACA;AACD;;AACDkC,QAAAA,YAAY,CAAZA,KAAAA,CAAmB;AACjB7H,UAAAA,IAAI,EADa,eAAA;AAEjBzJ,UAAAA,IAAI,EAAE;AACJ2O,YAAAA,iBAAAA,EAAAA;AADI;AAFW,SAAnB2C;;AAMA,YAAME,YAAY,GAAG,SAAfA,YAAe,CAAA,KAA6C,EAAA;AAA5C,cAAA,UAAA,GAA4C,KAA5C,CAAE7C,iBAAF;AAAA,cAAiC5O,KAAjC,GAA4C,KAA5C,CAAiCA,KAAjC;;AACpB,cAAI0R,UAAU,KAAVA,iBAAAA,IAAJ,KAAA,EAA+C;AAC7CF,YAAAA,aAAa,CAAbA,KAAAA;AACAD,YAAAA,YAAY,CAAZA,cAAAA,CAAAA,MAAAA,EAAAA,YAAAA;AACD;AAJH,SAAA;;AAMAA,QAAAA,YAAY,CAAZA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA;AACAC,QAAAA,aAAa,CAAbA,IAAAA,CAAAA,OAAAA,EAA4B,YAAK;AAC/BD,UAAAA,YAAY,CAAZA,KAAAA,CAAmB;AACjBtR,YAAAA,IAAI,EAAE;AACJ2O,cAAAA,iBADI,EACJA,iBADI;AAEJ+C,cAAAA,MAAM,EAAE;AAFJ;AADW,WAAnBJ;AAMAA,UAAAA,YAAY,CAAZA,cAAAA,CAAAA,MAAAA,EAAAA,YAAAA;AAPFC,SAAAA;AASD;AACF;;;WAESI,6BAAmB,OAAnBA,EAAwC;AAChD;AACA,mBAAkB,KAAA,UAAA,IAAlB,EAAA;AAAA,UAAQC,KAAR,UAAQA,KAAR;;AACA,UAAA,KAAA,EAAW;AACT,4BAAA,KAAA,CAAQC,MAAR;AAAA,YAAQA,MAAR,8BAAM,KAAN;AAAA,4BAAA,KAAA,CAAwBC,MAAxB;AAAA,YAAwBA,MAAxB,8BAAiC,EAAjC;AACA,YAAA,MAAA,EAAY1D,OAAO,CAAPA,SAAAA,CAAAA,GAAAA,CAAAA,YAAAA;AAEZ,YAAI0D,MAAM,CAAV,WAAA,EAAwB1D,OAAO,CAAPA,KAAAA,CAAAA,WAAAA,CAAAA,iBAAAA,EAA6C0D,MAAM,CAAnD1D,WAAAA;AACxB,YAAI0D,MAAM,CAAV,UAAA,EAAuB1D,OAAO,CAAPA,KAAAA,CAAAA,WAAAA,CAAAA,gBAAAA,EAA4C0D,MAAM,CAAlD1D,UAAAA;AACxB;AACF;;;WAES2D,uBAAW;AAAA,UAAA,gBAAA,EAAA,qBAAA;;AACnB,UAAIC,OAAO,GAAA,GAAA,MAAA,CAAM,KAAN,QAAA,EAAX,6BAAW,CAAX;;AACA,UAAI,CAAA,gBAAA,GAAA,KAAJ,UAAI,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,IAAA,CAAA,qBAAA,GAAA,gBAAA,CAAJ,KAAI,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,IAAA,qBAAA,CAAJ,MAAA,EAAoC;AAAA,YAAA,iBAAA;;AAClCA,QAAAA,OAAO,GAAG,CAAKlF,CAAAA,iBAAAA,GAAAA,KAAL,UAAKA,MAAYmF,IAAZnF,IAAYmF,iBAAAA,KAAAA,KAAAA,CAAZnF,GAAYmF,KAAAA,CAAZnF,GAAYmF,iBAAAA,CAAjB,SAAA,KAAVD,OAAAA;AADF,OAAA,MAEO;AAAA,YAAA,iBAAA;;AACLA,QAAAA,OAAO,GAAG,CAAKlF,CAAAA,iBAAAA,GAAAA,KAAL,UAAKA,MAAYoF,IAAZpF,IAAYoF,iBAAAA,KAAAA,KAAAA,CAAZpF,GAAYoF,KAAAA,CAAZpF,GAAYoF,iBAAAA,CAAjB,QAAA,KAAVF,OAAAA;AACD;;AAED,aAAA,OAAA;AACD;;;WAESG,qCAA2B,MAA3BA,EAA2C;AACnD,UAAMC,2BAA2B,GAAG,KAAA,gBAAA,CAAA,SAAA,CAApC,yBAAoC,CAApC;AACAA,MAAAA,2BAA2B,CAA3BA,KAAAA,CAAkC;AAChCpS,QAAAA,IAAI,EAAE+N;AAD0B,OAAlCqE;AAGD;;;WAESvF,0BAA6B;AAAA,UAAdwF,MAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAL,KAAK;AACrC,UAAMC,KAAK,GAD0B,EACrC,CADqC,CAAA;;AAGrC,UAAI,CAAJ,MAAA,EAAa;AACXA,QAAAA,KAAK,CAALA,OAAAA,GAAgB,KAAA,qBAAA,GAAA,OAAA,GAAhBA,MAAAA;AACAA,QAAAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AACAA,QAAAA,KAAK,CAALA,KAAAA,GAAAA,MAAAA;;AACA,gBAAQ,KAAR,cAAA;AACE,eAAKlX,eAAe,CAApB,QAAA;AACEkX,YAAAA,KAAK,CAALA,GAAAA,GAAAA,KAAAA;AACAA,YAAAA,KAAK,CAALA,IAAAA,GAAAA,KAAAA;AACAA,YAAAA,KAAK,CAALA,KAAAA,GAAAA,MAAAA;AACAA,YAAAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AACA;;AACF,eAAKlX,eAAe,CAApB,SAAA;AACEkX,YAAAA,KAAK,CAALA,GAAAA,GAAAA,KAAAA;AACAA,YAAAA,KAAK,CAALA,KAAAA,GAAAA,KAAAA;AACAA,YAAAA,KAAK,CAALA,IAAAA,GAAAA,MAAAA;AACAA,YAAAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AACA;;AACF,eAAKlX,eAAe,CAApB,YAAA;AACEkX,YAAAA,KAAK,CAALA,MAAAA,GAAAA,KAAAA;AACAA,YAAAA,KAAK,CAALA,KAAAA,GAAAA,KAAAA;AACAA,YAAAA,KAAK,CAALA,GAAAA,GAAAA,MAAAA;AACAA,YAAAA,KAAK,CAALA,IAAAA,GAAAA,MAAAA;AACA;;AACF,eAAKlX,eAAe,CAApB,WAAA;AACA;AACEkX,YAAAA,KAAK,CAALA,MAAAA,GAAAA,KAAAA;AACAA,YAAAA,KAAK,CAALA,IAAAA,GAAAA,KAAAA;AACAA,YAAAA,KAAK,CAALA,GAAAA,GAAAA,MAAAA;AACAA,YAAAA,KAAK,CAALA,KAAAA,GAAAA,MAAAA;AACA;AAzBJ;AAJF,OAAA,MA+BO;AACLA,QAAAA,KAAK,CAALA,OAAAA,GAAAA,OAAAA;AACAA,QAAAA,KAAK,CAALA,KAAAA,GAAAA,MAAAA;AACAA,QAAAA,KAAK,CAALA,MAAAA,GAAAA,MAAAA;AACAA,QAAAA,KAAK,CAALA,GAAAA,GAAAA,KAAAA;AACAA,QAAAA,KAAK,CAALA,KAAAA,GAAAA,KAAAA;AACAA,QAAAA,KAAK,CAALA,IAAAA,GAAAA,KAAAA;AACAA,QAAAA,KAAK,CAALA,MAAAA,GAAAA,KAAAA;AACD;;AACDnV,MAAAA,MAAM,CAANA,MAAAA,CAAc,KAAA,WAAA,CAAdA,KAAAA,EAAAA,KAAAA;AACA,WAAA,kBAAA,GAAA,MAAA;AACD;;;WAESoV,sBAAU;AAAA;;AAClBpR,MAAAA,GAAG,CAAHA,IAAAA,CADkB,mBAClBA,EADkB,CAAA;;AAGlB,UAAMqR,cAAc,GAAG,IAAA,qBAAA,CAA0B;AAC/C/I,QAAAA,IAAI,EAD2C,gBAAA;AAE/CnB,QAAAA,MAAM,EAFyC,iBAAA;AAG/CmK,QAAAA,YAAY,EAAE,KAAA,WAAA,CAHiC,aAAA;AAI/CC,QAAAA,YAAY,EAAE,IAAA,GAAA,CAAQ,KAAR,QAAA,EAAuBC;AAJU,OAA1B,CAAvB,CAHkB,CAAA;AAWlB;AACA;;AACA,UAAMC,mBAAmB,GAAG,IAAA,qBAAA,CAA0B;AACpDnJ,QAAAA,IAAI,EADgD,YAAA;AAEpDnB,QAAAA,MAAM,EAF8C,aAAA;AAGpDmK,QAAAA,YAAY,EAAE,KAAA,WAAA,CAHsC,aAAA;AAIpDC,QAAAA,YAAY,EAAE,IAAA,GAAA,CAAQ,KAAR,QAAA,EAAuBC;AAJe,OAA1B,CAA5B,CAbkB,CAAA;AAqBlB;AAEA;;AACA,UAAME,cAAc,GAAG,IAAA,mBAAA,CAxBL,cAwBK,CAAvB,CAxBkB,CAAA;;AA2BlB,UAAMC,qCAAqC,GAAIC,SAAzCD,qCAAyCC,CAAAA,CAAD,EAAM;AAClD,YAAMC,cAAc,GAAGH,cAAc,CAArC,CAAqC,CAArC;;AACAA,QAAAA,cAAc,CAAdA,CAAc,CAAdA,GAAoB,SAAA,YAAA,CAAA,MAAA,EAAqC;AACvD,cAAI/T,MAAM,IAAIA,MAAM,KAApB,qBAAA,EAAgD;AAC9C,mBAAO+T,cAAc,CAArB,MAAOA,EAAP;AACD;;AAHsD,eAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAJpN,IAAI,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAJA,YAAAA,IAAI,CAAA,IAAA,GAAA,CAAA,CAAJA,GAAI,SAAA,CAAA,IAAA,CAAJA;AAAI;;AAIvD,iBAAOuN,cAAc,CAAdA,KAAAA,CAAAA,IAAAA,GAA2B,MAA3BA,SAAP,IAAOA,EAAP;AAJFH,SAAAA;AAFF,OAAA;;AAUAC,MAAAA,qCAAqC,CAArCA,MAAqC,CAArCA;AACAA,MAAAA,qCAAqC,CAArCA,WAAqC,CAArCA;;AAEAD,MAAAA,cAAc,CAAdA,MAAAA,GAAwB,YAAK;AAC3B,eAAO,IAAA,OAAA,CAAY,UAAA,OAAA,EAAA,MAAA,EAAoB;AACrC;AACAA,UAAAA,cAAc,CAAdA,SAAAA,CAAyB;AAAEjM,YAAAA,OAAO,EAAT,KAAA;AAAkBD,YAAAA,EAAE,EAAEnF,oBAAtB,EAAA;AAA8C1C,YAAAA,MAAM,EAApD,qBAAA;AAA6E2B,YAAAA,MAAM,EAAE;AAArF,WAAzBoS,EAAoH,UAAA,GAAA,EAAA,QAAA,EAAkB;AACpI,yBAAyB3Q,QAAgC,IAAzD,EAAA;AAAA,gBAAgBpB,GAAhB,UAAQ4F,MAAR;;AACA,gBAAA,GAAA,EAAS;AACPuM,cAAAA,UAAU,CAAC,YAAK;AACdnP,gBAAAA,MAAM,CAANA,GAAM,CAANA;AADQ,eAAA,EAAVmP,EAAU,CAAVA;AADF,aAAA,MAIO,IAAIlP,KAAK,CAALA,OAAAA,CAAAA,GAAAA,KAAsBjD,GAAG,CAAHA,MAAAA,GAA1B,CAAA,EAA0C;AAC/C;AACA;AACA,kBAAMoS,aAAa,GAAG,SAAhBA,aAAgB,GAAK;AACzB,oBAAI,OAAA,CAAA,iBAAA,KAAA,EAAA,IAAiC,OAAA,CAAA,eAAA,KAAyB,OAAKjF,CAAnE,iBAAA,EAAsF;AACpF,sBAAQA,iBAAR,GADoF,OACpF,CAAQA,iBAAR,CADoF,CAAA;;AAGpF,kBAAA,OAAA,CAAA,MAAA,GACE;AADF,mBAAA,IAAA,CAESkF,UAAAA,CAAD,EAAM;AACV,oBAAA,OAAKlF,CAAL,iBAAA,GAAA,iBAAA;;AACA,oBAAA,OAAA,CAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,MAAA;AAJJ,mBAAA,EAAA,KAAA,CAMU/M,UAAAA,KAAD;AAAA,2BAAW4C,MAAM,CAN1B,KAM0B,CAAjB;AAAA,mBANT;AAHF,iBAAA,MAUO;AACLxF,kBAAAA,OAAO,CAAPA,GAAO,CAAPA;AACD;AAbH,eAAA;;AAeA,kBAAI,OAAA,CAAJ,UAAA,EAAqB;AACnB4U,gBAAAA,aAAa;AADf,eAAA,MAEO;AACL,gBAAA,OAAKE,CAAL,eAAA,GAAA,aAAA;AACD;AAtBI,aAAA,MAuBA;AACL;AACA,cAAA,OAAA,CAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,MAAA;AACD;AAhCHP,WAAAA;AAFF,SAAO,CAAP;AADFA,OAAAA;;AAwCAA,MAAAA,cAAc,CAAdA,gBAAAA,GAAkC,UAAA,OAAA,EAAA,EAAA,EAAuG;AACvI,YAAMxM,QAAQ,GAAd,OAAA;;AACA,YAAI,CAACtC,KAAK,CAALA,OAAAA,CAAD,QAACA,CAAD,IAA4BkG,cAAc,CAAdA,QAAAA,CAAwB5D,QAAQ,CAAhE,MAAgC4D,CAAhC,EAA0E;AACxE,cAAM0E,iBAAiB,GAAGnN,oBAA1B,EAAA;;AACA,UAAA,OAAKoN,CAAL,aAAA,CAAA,iBAAA,EAAsC;AACpCtG,YAAAA,MAAM,EAD8B,QAAA;AAEpC5E,YAAAA,QAAQ,EAAEd;AAF0B,WAAtC;;AAIAyD,UAAAA,QAAQ,CAARA,iBAAAA,GAAAA,iBAAAA;AACD;;AACDwM,QAAAA,cAAc,CAAdA,UAAAA,CAAAA,MAAAA,CAAAA,QAAAA,EAAAA,EAAAA;AA1FgB,OAgFlBA,CAhFkB,CAAA;AA8FlB;;;AACA,UAAMQ,qBAAqB,GAAG,IAAA,KAAA,CAAA,cAAA,EAA0B;AACtD;AACA;AACAC,QAAAA,cAAc,EAAE;AAAA,iBAAM,IAAN;AAAA;AAHsC,OAA1B,CAA9B;AAMA,WAAA,QAAA,GAAA,qBAAA;AACA,UAAM3G,gBAAgB,GAAG4G,cAAc,CAAvC,mBAAuC,CAAvC;AAEA,WAAA,gBAAA,GAAA,gBAAA;AAEA,UAAMjC,YAAY,GAAG3E,gBAAgB,CAAhBA,SAAAA,CAArB,QAAqBA,CAArB;AACA2E,MAAAA,YAAY,CAAZA,EAAAA,CAAAA,MAAAA,EAAyBjT,UAAAA,KAAD,EAAU;AAChC,YAAIA,KAAK,CAALA,IAAAA,KAAJ,eAAA,EAAoC;AAClC;AACA;AACA,UAAA,OAAA,CAAA,sBAAA,CAA4BA,KAAK,CAALA,IAAAA,CAA5B,iBAAA,EAA0DA,KAAK,CAALA,IAAAA,CAA1D,GAAA;AACD;AAhHe,OA2GlBiT,EA3GkB,CAAA;;AAoHlB,UAAMkC,YAAY,GAAG7G,gBAAgB,CAAhBA,SAAAA,CAArB,QAAqBA,CAArB;AACA6G,MAAAA,YAAY,CAAZA,EAAAA,CAAAA,MAAAA,EAAyBnV,UAAAA,KAAD,EAAU;AAChC,YAAQ2B,IAAR,GAAA,KAAA,CAAQA,IAAR;;AACA,QAAA,OAAK6M,CAAL,cAAA,CAAA,IAAA;AAvHgB,OAqHlB2G,EArHkB,CAAA;;AA2HlB,UAAM3F,YAAY,GAAGlB,gBAAgB,CAAhBA,SAAAA,CAArB,QAAqBA,CAArB;AACAkB,MAAAA,YAAY,CAAZA,EAAAA,CAAAA,MAAAA,EAAyBE,UAAAA,MAAD,EAAW;AACjC;AACA,YAAIA,MAAM,CAAV,QAAA,EAAqB;AACnB,UAAA,OAAA,CAAA,UAAA,GAAkBA,MAAM,CAAxB,QAAA;AACA,UAAA,OAAA,CAAA,eAAA,GAAuBA,MAAM,CAA7B,QAAA;AAFF,SAAA,CAAA;AAAA,aAIK,OAAA,CAAA,cAAA;;AACL,YAAI,OAAA,CAAJ,eAAA,EAA0B;AACxB,UAAA,OAAA,CAAA,eAAA;;AACA,iBAAO,OAAA,CAAP,eAAA;AACD;AAVHF,OAAAA;AAaA,WAAA,QAAA,GAAA,qBAAA;AAEA,UAAI,KAAA,QAAA,CAAJ,kBAAA,EAAsCjP,gBAAgB,CAAC,KAAA,QAAA,CAAjBA,UAAgB,CAAhBA;;AACtCiU,MAAAA,cAAc,CAAdA,gBAAAA;;AACA1R,MAAAA,GAAG,CAAHA,KAAAA,CAAAA,2BAAAA;AACD;;;WAESsS,yBAAe,eAAfA,EAAe,OAAfA,EAAe,MAAfA,EAAsG;AAAA;;AAC9G,UAAMxC,YAAY,GAAIjR,SAAhBiR,YAAgBjR,CAAAA,IAAD,EAAS;AAC5B,YAAM,GAAN,GAAA,IAAA,CAAM,GAAN;AAAA,YAAa0T,eAAb,GAAA,IAAA,CAAaA,eAAb;;AACA,YAAA,GAAA,EAAS;AACPvS,UAAAA,GAAG,CAAHA,KAAAA,CAAAA,GAAAA;AACA,cAAA,MAAA,EAAY2C,MAAM,CAANA,GAAM,CAANA;AAFd,SAAA,CAAA;AAAA,aAKK,IAAA,OAAA,EAAaxF,OAAO,CAAC,CAARA,eAAQ,CAAD,CAAPA;;AAClB,YAAI,OAAKqV,CAAT,kBAAA,EAA6B,OAAA,CAAA,cAAA;AAR/B,OAAA;;AAUA,UAAMC,WAAW,GAAG,KAAA,gBAAA,CAAA,SAAA,CAApB,OAAoB,CAApB;;AACA,UAAI,CAAC,KAAL,iBAAA,EAA6B;AAC3B,aAAA,cAAA,CAAA,IAAA;;AACAxV,QAAAA,YAAY,CAAA,WAAA,EAAA,MAAA,EAAZA,YAAY,CAAZA;AACAwV,QAAAA,WAAW,CAAXA,KAAAA,CAAkB;AAAEnK,UAAAA,IAAI,EAAN,aAAA;AAAuBzJ,UAAAA,IAAI,EAAE;AAAE6T,YAAAA,eAAAA,EAAAA;AAAF;AAA7B,SAAlBD;AAHF,OAAA,MAIO;AACLxV,QAAAA,YAAY,CAAA,WAAA,EAAA,MAAA,EAAZA,YAAY,CAAZA;AACA,YAAMuQ,iBAAiB,GAAGnN,oBAA1B,EAAA;;AACA,aAAA,aAAA,CAAA,iBAAA;;AACAoS,QAAAA,WAAW,CAAXA,KAAAA,CAAkB;AAChBnK,UAAAA,IAAI,EADY,OAAA;AAEhBzJ,UAAAA,IAAI,EAAE;AAAE6T,YAAAA,eAAF,EAAEA,eAAF;AAAmBtG,YAAAA,QAAQ,EAAE,KAA7B,iBAAA;AAAqDoB,YAAAA,iBAArD,EAAqDA,iBAArD;AAAwEnB,YAAAA,UAAU,EAAE,KAAKC;AAAzF;AAFU,SAAlBmG;AAID;AACF;;;WAESE,gCAAsB,iBAAtBA,EAAsB,GAAtBA,EAA6D;AAAA;;AACrE,UAAM9B,OAAO,GAAG,KAAhB,WAAgB,EAAhB;;AACA,UAAM+B,UAAU,GAAGpW,aAAa,CAC9B,kDAAA,2CAAA,MAAA,CAAA,OAAA,EAAA,aAAA,CAAA,GAAA,OAAA,GAAA,gCAAA,MAAA,CAGgC,KAAA,iBAAA,CAHhC,cAAA,EAAA,OAAA,CAAA,GAAA,8BAAA,MAAA,CAI8B,KAAA,iBAAA,CAJ9B,aAAA,EAKE,MALF,CAAA,GAAA,QAAA,GADF,QAAgC,CAAhC;AAUA,UAAMqW,YAAY,GAAGrW,aAAa,CAAA,kCAAA,MAAA,CAAiC,KAAA,iBAAA,CAAjC,QAAA,EAAlC,YAAkC,CAAA,CAAlC;AACA,UAAMsW,YAAY,GAAGtW,aAAa,CAAlC,4CAAkC,CAAlC;AACAsW,MAAAA,YAAY,CAAZA,WAAAA,CAAAA,YAAAA;AACAF,MAAAA,UAAU,CAAVA,WAAAA,CAAAA,YAAAA;;AACA,UAAMG,UAAU,GAAG,SAAbA,UAAa,GAAK;AACtBF,QAAAA,YAAY,CAAZA,gBAAAA,CAAAA,OAAAA,EAAuC,YAAK;AAC1C,UAAA,OAAKpF,CAAL,aAAA,CAAA,iBAAA,EAAsC;AACpCU,YAAAA,GADoC,EACpCA,GADoC;AAEpChH,YAAAA,MAAM,EAF8B,QAAA;AAGpC5E,YAAAA,QAAQ,EAAEd;AAH0B,WAAtC;;AAKAmR,UAAAA,UAAU,CAAVA,MAAAA;AAEA,cAAI,OAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,MAAA,KAAJ,CAAA,EAAoD,OAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,MAAA;AARtDC,SAAAA;AADF,OAAA;;AAaA,WAAA,mBAAA,CAAA,UAAA;;AAEA,UAAMG,YAAY,GAAG,SAAfA,YAAe,GAAK;AACxB,QAAA,OAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,OAAA,GAAA,OAAA;;AACA,QAAA,OAAA,CAAA,mBAAA,CAAA,WAAA,CAAA,UAAA;AAFF,OAAA;;AAKA5W,MAAAA,SAAS,CAATA,YAAS,CAATA;AACAA,MAAAA,SAAS,CAATA,UAAS,CAATA;AACD","sourcesContent":["import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport NodeDetailManager from '@toruslabs/fetch-node-details';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport TorusJs from '@toruslabs/torus.js';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\n\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: [\"GBP\", \"EUR\", \"USD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"BSC_BNB\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit / Debit Card / Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\", \"RUB\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"TUSD\", \"USDC\", \"USDT\", \"BNB_BSC\", \"BUSD_BSC\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"AUD\", \"CAD\", \"GBP\", \"EUR\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: false,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ VietelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: [\"SGD\", \"HKD\", \"MYR\", \"PHP\", \"INR\", \"VND\", \"THB\", \"IDR\"],\n    validCryptoCurrencies: [\"ETH\", \"USDT\"],\n    includeFees: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: [\"USD\", \"EUR\", \"RUB\", \"TRY\", \"GBP\", \"UAH\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"BAT\", \"USDT\", \"OKB\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Credit/ Debit Card/ <br/>Bank Transfer (sepa/gbp)\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"500€/day\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 20,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: true,\n    enforceMax: false\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: \"torus-\"\n};\n\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \", shouldSendMetadata: \").concat(shouldSendMetadata, \" }\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\n\nconst {\n  paymentProviders\n} = configuration;\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n\n  if (selectedParams.selectedCryptoCurrency && !selectedProvider.validCryptoCurrencies.includes(selectedParams.selectedCryptoCurrency)) {\n    errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"MetaMask - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n} // resolve response.result or response, reject errors\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"MetaMask: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel; // Do not change this line\n\n  const version = \"1.24.2\";\n  let versionUsed = integrity.version || version;\n\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(\"\".concat(configuration.api, \"/latestversion?name=@toruslabs/torus-embed&version=\").concat(version), {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n\n  log.info(\"version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = \"https://binance.tor.us/v\".concat(versionUsed);\n      logLevel = \"info\";\n      break;\n\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = \"https://app.tor.us/v\".concat(versionUsed);\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\nconst NOOP = () => {// empty function\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\nfunction storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"networkVersion\", void 0);\n\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n\n    _defineProperty(this, \"enable\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners); // private state\n\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore), // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    }); // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n\n\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.on(eventName, listener);\n  }\n\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependOnceListener(eventName, listener);\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n\n\n  _sendSync(payload) {\n    let result;\n\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n\n\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n\n}\n\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n}); // Generate list of hashes\n\n\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\n\nconst integrity = (options, sri) => {\n  let output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(algorithm => \"\".concat(algorithm, \"-\").concat(sri.hashes[algorithm])).join(options.delimiter);\n  return output;\n};\n\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window; // Use the site's favicon if it exists\n\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  } // Search through available icons in no particular order\n\n\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\n\n\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata(); // call engine.handle directly to avoid normal RPC request handling\n\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\n\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-WuTHIBcBak4hrn9/SJtezbyCEwkF5/CbLE6E5nPNN371k2bJgIBJ9VcFu0fW8RUC\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\"];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\"\n    });\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/popup\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    _defineProperty(this, \"isLoggedIn\", void 0);\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n\n    _defineProperty(this, \"torusJs\", void 0);\n\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n\n    _defineProperty(this, \"whiteLabel\", void 0);\n\n    _defineProperty(this, \"requestedVerifier\", void 0);\n\n    _defineProperty(this, \"currentVerifier\", void 0);\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"ethereum\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationMux\", void 0);\n\n    _defineProperty(this, \"isLoginCallback\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n\n    _defineProperty(this, \"loginHint\", \"\");\n\n    _defineProperty(this, \"useWalletConnect\", void 0);\n\n    this.buttonPosition = buttonPosition;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\"\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n    this.dappStorageKey = \"\";\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      // deprecated: use loginConfig instead\n      enabledVerifiers = defaultVerifiers,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      },\n      whiteLabel,\n      skipTKey = false,\n      useLocalStorage = false,\n      useWalletConnect = false\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    let dappStorageKey = \"\";\n\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const localStorageKey = \"\".concat(configuration.localStorageKeyPrefix).concat(window.location.hostname);\n      const storedKey = window.localStorage.getItem(localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = \"torus-app-\".concat(getPreopenInstanceId());\n        window.localStorage.setItem(localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n\n    this.dappStorageKey = dappStorageKey;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n\n    if (dappStorageKey) {\n      torusIframeUrl.hash = \"#dappStorageKey=\".concat(dappStorageKey);\n    } // Iframe code\n\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        allow=\".concat(useWalletConnect ? \"camera\" : \"\", \"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\").concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex, \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", \"\".concat(torusUrl, \"/css/widget.css\"));\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n\n          const initStream = this.communicationMux.getStream(\"init_stream\");\n          initStream.on(\"data\", chunk => {\n            const {\n              name,\n              data,\n              error\n            } = chunk;\n\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n\n              this._displayIframe(this.isIframeFullScreen);\n\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network\n            }\n          });\n        };\n\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = \"\".concat(torusUrl, \"/popup\");\n      const resp = await fetch(fetchUrl, {\n        cache: \"reload\"\n      });\n\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(\"Unexpected Cache-Control headers, got \".concat(resp.headers.get(\"Cache-Control\")));\n      }\n\n      const response = await resp.text();\n      const calculatedIntegrity = main({\n        algorithms: [\"sha384\"]\n      }, response);\n      log.info(calculatedIntegrity, \"integrity\");\n\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n\n    return undefined;\n  }\n\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n\n    this._sendWidgetVisibilityStatus(false);\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n\n    this._sendWidgetVisibilityStatus(true);\n\n    this._displayIframe();\n  }\n\n  setProvider() {\n    let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    let {\n      host = \"mainnet\",\n      chainId = null,\n      networkName = \"\"\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n\n        if (this.dappStorageKey) {\n          finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n        }\n\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const nodeDetails = await this.nodeDetailManager.getNodeDetails({\n      verifier,\n      verifierId\n    });\n    const endpoints = nodeDetails.torusNodeEndpoints;\n    const torusNodePubs = nodeDetails.torusNodePub;\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n\n    try {\n      const existingV1User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: walletVerifier,\n        verifierId\n      });\n\n      if (existingV1User.typeOfUser === \"v1\") {\n        if (!isExtended) return existingV1User.address;\n        return existingV1User;\n      } // we don't support v2 users with v1 verifiers so get or assign the key for v2 user on v2 `verifier`\n\n\n      const v2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: openloginVerifier,\n        verifierId\n      }, true);\n      if (!isExtended) return v2User.address;\n      return v2User;\n    } catch (error) {\n      if (error !== null && error !== void 0 && error.message.includes(\"Verifier + VerifierID has not yet been assigned\")) {\n        // if user doesn't have key then assign it with v2 verifier\n        const newV2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n          verifier: openloginVerifier,\n          verifierId\n        }, true);\n        if (!isExtended) return newV2User.address;\n        return newV2User;\n      }\n\n      throw error;\n    }\n  }\n\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n\n        const topupStream = this.communicationMux.getStream(\"topup\");\n\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId);\n\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async loginWithPrivateKey(loginParams) {\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\");\n\n        const loginHandler = chunk => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({\n          name: \"login_with_private_key_request\",\n          data: {\n            privateKey,\n            userInfo\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  async showWalletConnectScanner() {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\");\n\n        const walletConnectHandler = chunk => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n\n            this._displayIframe();\n          }\n        };\n\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({\n          name: \"wallet_connect_stream_req\"\n        });\n\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?preopenInstanceId=\").concat(preopenInstanceId));\n\n      if (this.dappStorageKey) {\n        // If multiple instances, it returns the first one\n        if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n      }\n\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n\n        return;\n      }\n\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  _getLogoUrl() {\n    var _this$whiteLabel, _this$whiteLabel$them;\n\n    let logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n\n    if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n      var _this$whiteLabel2;\n\n      logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n    } else {\n      var _this$whiteLabel3;\n\n      logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n\n    const inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this; // eslint-disable-next-line promise/no-promise-in-callback\n\n                this.logout() // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    }); // show torus widget if button clicked\n\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n\n      this._displayIframe(data);\n    }); // Show torus button if wallet has been hydrated/detected\n\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n\n    inpageProvider._initializeState();\n\n    log.debug(\"Torus - injected provider\");\n  }\n\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      } // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId);\n\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    this._setEmbedWhiteLabel(torusAlert);\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, WALLET_VERIFIERS, Torus as default };\n//# sourceMappingURL=torus.esm.js.map\n"]},"metadata":{},"sourceType":"module"}