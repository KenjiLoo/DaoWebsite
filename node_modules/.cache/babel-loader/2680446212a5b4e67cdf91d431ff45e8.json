{"ast":null,"code":"var _jsxFileName = \"C:\\\\DAO-start\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./pages.css\";\nimport { TabList, Tab, Widget, Tag, Table, Form } from \"web3uikit\";\nimport { Link } from \"react-router-dom\";\nimport { useMoralis, useMoralisWeb3Api, useWeb3ExecuteFunction } from \"react-moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [passRate, setPassRate] = useState(0);\n  const [totalP, setTotalP] = useState(0);\n  const [counted, setCounted] = useState(0);\n  const {\n    Moralis,\n    isInitialized\n  } = useMoralis();\n  const [proposals, setProposals] = useState();\n  const Web3Api = useMoralisWeb3Api();\n  const [voters, setVoters] = useState(0);\n  const [sub, setSub] = useState();\n  const contractProcessor = useWeb3ExecuteFunction();\n\n  async function createProposal(newProposal) {\n    let options = {\n      contractAddress: \"0xAEEAfcA812D0f122006da84E2ADDFa17c1A1f035\",\n      functionName: \"createProposal\",\n      abi: [{\n        inputs: [{\n          internalType: \"string\",\n          name: \"_description\",\n          type: \"string\"\n        }, {\n          internalType: \"address[]\",\n          name: \"_canVote\",\n          type: \"address[]\"\n        }],\n        name: \"createProposal\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n      }],\n      params: {\n        _description: newProposal,\n        _canVote: voters\n      }\n    };\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => {\n        console.log(\"Proposal Succesful\");\n        setSub(false);\n      },\n      onError: error => {\n        alert(error.data.message);\n        setSub(false);\n      }\n    });\n  }\n\n  async function getStatus(proposalId) {\n    const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\n    const query = new Moralis.Query(ProposalCounts);\n    query.equalTo(\"uid\", proposalId);\n    const result = await query.first();\n\n    if (result !== undefined) {\n      if (result.attributes.passed) {\n        return {\n          color: \"green\",\n          text: \"Passed\"\n        };\n      } else {\n        return {\n          color: \"red\",\n          text: \"Rejected\"\n        };\n      }\n    } else {\n      return {\n        color: \"blue\",\n        text: \"Ongoing\"\n      };\n    }\n  }\n\n  useEffect(() => {\n    if (isInitialized) {\n      async function getProposals() {\n        const Proposals = Moralis.Object.extend(\"Proposals\");\n        const query = new Moralis.Query(Proposals);\n        query.descending(\"uid_decimal\");\n        const results = await query.find();\n        const table = await Promise.all(results.map(async e => [e.attributes.uid, e.attributes.description, /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/proposal\",\n          state: {\n            description: e.attributes.description,\n            color: (await getStatus(e.attributes.uid)).color,\n            text: (await getStatus(e.attributes.uid)).text,\n            id: e.attributes.uid,\n            proposer: e.attributes.proposer\n          },\n          children: /*#__PURE__*/_jsxDEV(Tag, {\n            color: (await getStatus(e.attributes.uid)).color,\n            text: (await getStatus(e.attributes.uid)).text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]));\n        setProposals(table);\n        setTotalP(results.length);\n      }\n\n      async function getPassRate() {\n        const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\n        const query = new Moralis.Query(ProposalCounts);\n        const results = await query.find();\n        let votesUp = 0;\n        results.forEach(e => {\n          if (e.attributes.passed) {\n            votesUp++;\n          }\n        });\n        setCounted(results.length);\n        setPassRate(votesUp / results.length * 100);\n      }\n\n      const fetchTokenIdOwners = async () => {\n        const options = {\n          address: \"0x2953399124F0cBB46d2CbACD8A89cF0599974963\",\n          token_id: \"50518411100313848705589140712404998518682214475431081288604171428342498590721\",\n          chain: \"mumbai\"\n        };\n        const tokenIdOwners = await Web3Api.token.getTokenIdOwners(options);\n        const addresses = tokenIdOwners.result.map(e => e.owner_of);\n        setVoters(addresses);\n      };\n\n      fetchTokenIdOwners();\n      getProposals();\n      getPassRate();\n    }\n  }, [isInitialized]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(TabList, {\n        defaultActiveKey: 1,\n        tabStyle: \"bulbUnion\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          tabKey: 1,\n          tabName: \"DAO\",\n          children: proposals && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabContent\",\n            children: [\"Governance Overview\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"widgets\",\n              children: [/*#__PURE__*/_jsxDEV(Widget, {\n                info: totalP,\n                title: \"Proposals\",\n                style: {\n                  width: \"200%\"\n                } //here's the prob\n                ,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"extraWidgetInfo\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"extraTitle\",\n                    children: \"Pass Rate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progressPercentage\",\n                      style: {\n                        width: `${passRate}%`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Widget, {\n                info: voters.length,\n                title: \"Eligible Voters\",\n                style: {\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Widget, {\n                info: totalP - counted,\n                title: \"Ongoing Proposals\",\n                style: {\n                  width: \"100%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 11\n            }, this), \"Recent Proposals\", /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"30px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                columnsConfig: \" 70% 20%\",\n                data: proposals,\n                header: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this),\n                /*#__PURE__*/\n                //not aligned\n                _jsxDEV(\"span\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this)],\n                pageSize: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              buttonConfig: {\n                isLoading: sub,\n                loadingText: \"Submitting Proposal\",\n                text: \"Submit\",\n                theme: \"secondary\"\n              },\n              data: [{\n                inputWidth: \"100%\",\n                name: \"New Proposal\",\n                type: \"textarea\",\n                validation: {\n                  required: true\n                },\n                value: \"\"\n              }],\n              onSubmit: e => {\n                setSub(true);\n                createProposal(e.data[0].inputResult);\n              },\n              title: \"Create a New Proposal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          tabKey: 2,\n          tabName: \"Forum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          tabKey: 3,\n          tabName: \"Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"9JjjXkjqJUfAlrR+56NVOklwHgM=\", false, function () {\n  return [useMoralis, useMoralisWeb3Api, useWeb3ExecuteFunction];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/DAO-start/src/pages/Home.js"],"names":["React","useEffect","useState","TabList","Tab","Widget","Tag","Table","Form","Link","useMoralis","useMoralisWeb3Api","useWeb3ExecuteFunction","Home","passRate","setPassRate","totalP","setTotalP","counted","setCounted","Moralis","isInitialized","proposals","setProposals","Web3Api","voters","setVoters","sub","setSub","contractProcessor","createProposal","newProposal","options","contractAddress","functionName","abi","inputs","internalType","name","type","outputs","stateMutability","params","_description","_canVote","fetch","onSuccess","console","log","onError","error","alert","data","message","getStatus","proposalId","ProposalCounts","Object","extend","query","Query","equalTo","result","first","undefined","attributes","passed","color","text","getProposals","Proposals","descending","results","find","table","Promise","all","map","e","uid","description","id","proposer","length","getPassRate","votesUp","forEach","fetchTokenIdOwners","address","token_id","chain","tokenIdOwners","token","getTokenIdOwners","addresses","owner_of","width","marginTop","isLoading","loadingText","theme","inputWidth","validation","required","value","inputResult"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./pages.css\";\r\nimport { TabList, Tab, Widget, Tag, Table, Form } from \"web3uikit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMoralis, useMoralisWeb3Api, useWeb3ExecuteFunction } from \"react-moralis\";\r\n\r\nconst Home = () => {\r\n \r\n  const [passRate, setPassRate] = useState(0);\r\n  const [totalP, setTotalP] = useState(0);\r\n  const [counted, setCounted] = useState(0);\r\n  const { Moralis, isInitialized } = useMoralis();\r\n  const [proposals, setProposals] = useState();\r\n  const Web3Api = useMoralisWeb3Api();\r\n  const [voters, setVoters] = useState(0);\r\n  const [sub, setSub] = useState();\r\n  const contractProcessor = useWeb3ExecuteFunction();\r\n\r\n  async function createProposal(newProposal){\r\n    let options = {\r\n      contractAddress: \"0xAEEAfcA812D0f122006da84E2ADDFa17c1A1f035\",\r\n      functionName: \"createProposal\",\r\n      abi: [\r\n       \r\n        {\r\n          inputs:[\r\n            {\r\n              internalType:\"string\",\r\n              name:\"_description\",\r\n              type:\"string\"\r\n            },\r\n            {\r\n              internalType:\"address[]\",\r\n              name:\"_canVote\",\r\n              type:\"address[]\"\r\n            }\r\n          ],\r\n          name:\"createProposal\",\r\n          outputs:[],\r\n          stateMutability:\"nonpayable\",\r\n          type:\"function\"\r\n        }\r\n      ],\r\n      params: {\r\n        _description: newProposal,\r\n        _canVote: voters,\r\n      },\r\n    };\r\n    \r\n    await contractProcessor.fetch({\r\n      params: options,\r\n      onSuccess: () => {\r\n        console.log(\"Proposal Succesful\");\r\n        setSub(false);\r\n      },\r\n      onError: (error) => {\r\n        alert(error.data.message);\r\n        setSub(false);\r\n      },\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  async function getStatus(proposalId) {\r\n    const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\r\n    const query = new Moralis.Query(ProposalCounts);\r\n    query.equalTo(\"uid\", proposalId);\r\n    const result = await query.first();\r\n    if (result !== undefined){\r\n      if (result.attributes.passed) {\r\n        return { color: \"green\", text: \"Passed\" };\r\n      } else{\r\n        return { color: \"red\", text: \"Rejected\" };\r\n      }\r\n    } else {\r\n      return { color:\"blue\", text:\"Ongoing\" };\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isInitialized) {\r\n      async function getProposals(){\r\n        const Proposals = Moralis.Object.extend(\"Proposals\");\r\n        const query = new Moralis.Query(Proposals);\r\n        query.descending(\"uid_decimal\");\r\n        const results = await query.find();\r\n        const table = await Promise.all(\r\n          results.map(async (e) => [\r\n            e.attributes.uid,\r\n            e.attributes.description,\r\n            <Link to=\"/proposal\" state={{\r\n              description: e.attributes.description,\r\n              color: (await getStatus(e.attributes.uid)).color,\r\n              text: (await getStatus(e.attributes.uid)).text,\r\n              id: e.attributes.uid,\r\n              proposer: e.attributes.proposer\r\n            }}>\r\n              <Tag\r\n                color={(await getStatus(e.attributes.uid)).color}\r\n                text={(await getStatus(e.attributes.uid)).text}\r\n              />\r\n            </Link>,\r\n          ])\r\n        );\r\n        setProposals(table);\r\n        setTotalP(results.length);\r\n      }\r\n\r\n      async function getPassRate(){\r\n        const ProposalCounts = Moralis.Object.extend(\"ProposalCounts\");\r\n        const query = new Moralis.Query(ProposalCounts);\r\n        const results = await query.find();\r\n        let votesUp = 0;\r\n\r\n        results.forEach((e) => {\r\n          if(e.attributes.passed){\r\n            votesUp++;\r\n          }\r\n        });\r\n\r\n        setCounted(results.length);\r\n        setPassRate((votesUp/results.length)*100);\r\n\r\n      }\r\n\r\n      const fetchTokenIdOwners = async () => {\r\n        const options = {\r\n          address: \"0x2953399124F0cBB46d2CbACD8A89cF0599974963\",\r\n          token_id:\r\n            \"50518411100313848705589140712404998518682214475431081288604171428342498590721\",\r\n          chain: \"mumbai\",\r\n        };\r\n        const tokenIdOwners = await Web3Api.token.getTokenIdOwners(options);\r\n        const addresses = tokenIdOwners.result.map((e) => e.owner_of);\r\n        setVoters(addresses);\r\n      };\r\n\r\n      fetchTokenIdOwners();\r\n      getProposals(); \r\n      getPassRate();\r\n    }\r\n  }, [isInitialized]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n      <TabList defaultActiveKey={1} tabStyle=\"bulbUnion\">\r\n        <Tab tabKey={1} tabName=\"DAO\">\r\n        {proposals && (\r\n        <div className=\"tabContent\">\r\n          Governance Overview\r\n          <div className=\"widgets\">\r\n            <Widget\r\n              info={totalP}\r\n              title=\"Proposals\"\r\n              style={{ width: \"200%\" }} //here's the prob\r\n            >\r\n              <div className=\"extraWidgetInfo\">\r\n                <div className=\"extraTitle\">Pass Rate</div>\r\n                <div className=\"progress\">\r\n                  <div\r\n                    className=\"progressPercentage\"\r\n                    style={{ width: `${passRate}%` }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </Widget>\r\n            <Widget info={voters.length} title=\"Eligible Voters\"  style={{ width: \"100%\" }}/>\r\n            <Widget info={totalP-counted} title=\"Ongoing Proposals\" style={{ width: \"100%\" }}/>\r\n          </div>\r\n          Recent Proposals\r\n            <div style={{ marginTop: \"30px\" }}>\r\n              <Table \r\n                columnsConfig=\" 70% 20%\"\r\n                data={proposals}\r\n                header={[\r\n                  <span>ID</span>, //not aligned\r\n                  <span>Description</span>,\r\n                  <span>Status</span>\r\n                ]}\r\n                pageSize={5}\r\n              ></Table>\r\n            </div>\r\n\r\n            <Form \r\n              buttonConfig={{\r\n                isLoading: sub,\r\n                loadingText: \"Submitting Proposal\",\r\n                text: \"Submit\",\r\n                theme: \"secondary\",\r\n              }}\r\n              data={[\r\n                {\r\n                  inputWidth: \"100%\",\r\n                  name: \"New Proposal\",\r\n                  type: \"textarea\",\r\n                  validation: {\r\n                    required: true,\r\n                  },\r\n                  value: \"\",\r\n                },\r\n              ]}\r\n              onSubmit={(e) =>{\r\n                setSub(true);\r\n                createProposal(e.data[0].inputResult);\r\n              }}\r\n              title=\"Create a New Proposal\"\r\n            />\r\n        </div>\r\n        )}\r\n        </Tab>\r\n        <Tab tabKey={2} tabName=\"Forum\"></Tab>\r\n        <Tab tabKey={3} tabName=\"Docs\"></Tab>\r\n      </TabList>\r\n      </div>\r\n      {/* somehow doesnt stay white */}\r\n      <div className=\"voting\"></div> \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}